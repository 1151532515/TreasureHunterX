{"version":3,"sources":["../../../../assets/scripts/assets/scripts/WsSessionMgr.js"],"names":["window","sendSafely","msgStr","clientSession","readyState","WebSocket","OPEN","send","closeWSConnection","cc","log","close","getBoundRoomIdFromPersistentStorage","sys","localStorage","boundRoomId","clearBoundRoomIdInBothVolatileAndPersistentStorage","removeItem","handleHbRequirements","resp","constants","RET_CODE","OK","ret","data","clientSessionPingInterval","setInterval","param","msgId","Date","now","act","clientTimestamp","JSON","stringify","intervalToPing","handleHbPong","initPersistentSessionClient","onopenCb","intAuthToken","selfPlayer","parse","urlToConnect","backendAddress","PROTOCOL","replace","HOST","PORT","WS_PATH_PREFIX","onopen","event","onmessage","handleRoomDownsyncFrame","typedArray","Uint8Array","parsedRoomDownsyncFrame","RoomDownsyncFrame","decode","onerror","error","clearInterval","handleClientSessionCloseOrError","onclose","wasClean","code","LOCALLY_NO_SPECIFIED_ROOM","PLAYER_NOT_ADDABLE_TO_ROOM","PLAYER_NOT_READDABLE_TO_ROOM","PLAYER_NOT_FOUND","PLAYER_CHEATING"],"mappings":"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","file":"WsSessionMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["window.sendSafely = function(msgStr) {\n  /**\n  * - \"If the data can't be sent (for example, because it needs to be buffered but the buffer is full), the socket is closed automatically.\"\n  *\n  * from https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send.\n  */\n  if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) return false;\n  window.clientSession.send(msgStr);\n}\n\nwindow.closeWSConnection = function() {\n  if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) return;\n  cc.log(`Closing \"window.clientSession\" from the client-side.`);\n  window.clientSession.close();\n}\n\nwindow.getBoundRoomIdFromPersistentStorage = function() {\n  return cc.sys.localStorage.boundRoomId;\n};\n\nwindow.clearBoundRoomIdInBothVolatileAndPersistentStorage = function() {\n  window.boundRoomId = null;\n  cc.sys.localStorage.removeItem(\"boundRoomId\");\n};\n\nwindow.boundRoomId = getBoundRoomIdFromPersistentStorage();\nwindow.handleHbRequirements = function(resp) {\n  if (constants.RET_CODE.OK != resp.ret) return;\n  if (null == window.boundRoomId) {\n    window.boundRoomId = resp.data.boundRoomId; \n    cc.sys.localStorage.boundRoomId = window.boundRoomId;\n  }\n\n  window.clientSessionPingInterval = setInterval(() => {\n    if (clientSession.readyState != WebSocket.OPEN) return;\n    const param = {\n      msgId: Date.now(),\n      act: \"HeartbeatPing\",\n      data: {\n        clientTimestamp: Date.now()\n      }\n    };\n    window.sendSafely(JSON.stringify(param));\n  }, resp.data.intervalToPing);\n};\n\nwindow.handleHbPong = function(resp) {\n  if (constants.RET_CODE.OK != resp.ret) return;\n// TBD.\n};\n\nwindow.initPersistentSessionClient = function(onopenCb) {\n  if (window.clientSession && window.clientSession.readyState == WebSocket.OPEN) {\n    if (null == onopenCb)\n      return;\n    onopenCb();\n    return;\n  }\n\n  const intAuthToken = cc.sys.localStorage.selfPlayer ? JSON.parse(cc.sys.localStorage.selfPlayer).intAuthToken : \"\";\n\n  let urlToConnect = backendAddress.PROTOCOL.replace('http', 'ws') + '://' + backendAddress.HOST + \":\" + backendAddress.PORT + backendAddress.WS_PATH_PREFIX + \"?intAuthToken=\" + intAuthToken;\n\n  window.boundRoomId = getBoundRoomIdFromPersistentStorage();\n  if (null != window.boundRoomId) {\n    urlToConnect = urlToConnect + \"&boundRoomId=\" + window.boundRoomId;\n  }\n  const clientSession = new WebSocket(urlToConnect);\n\n  clientSession.onopen = function(event) {\n    cc.log(\"The WS clientSession is opened.\");\n    window.clientSession = clientSession;\n    if (null == onopenCb)\n      return;\n    onopenCb();\n  };\n\n  clientSession.onmessage = function(event) {\n    const resp = JSON.parse(event.data)\n    switch (resp.act) {\n      case \"HeartbeatRequirements\":\n        window.handleHbRequirements(resp);\n        break;\n      case \"HeartbeatPong\":\n        window.handleHbPong(resp);\n        break;\n      case \"RoomDownsyncFrame\":\n        if (window.handleRoomDownsyncFrame) {\n          const typedArray = new Uint8Array(resp.data);\n          const parsedRoomDownsyncFrame = window.RoomDownsyncFrame.decode(typedArray);\n          window.handleRoomDownsyncFrame(parsedRoomDownsyncFrame);\n        }\n        break; \n      default:\n        cc.log(`${JSON.stringify(resp)}`);\n        break;\n    }\n  };\n\n  clientSession.onerror = function(event) {\n    cc.error(`Error caught on the WS clientSession:`, event);\n    if (window.clientSessionPingInterval) {\n      clearInterval(clientSessionPingInterval);\n    }\n    if (window.handleClientSessionCloseOrError) {\n      window.handleClientSessionCloseOrError();\n    }\n  };\n\n  clientSession.onclose = function(event) {\n    cc.log(`The WS clientSession is closed:`, event);\n    if (!event.wasClean) {\n      // Chrome doesn't allow the use of \"CustomCloseCode\"s (yet) and will callback with a \"WebsocketStdCloseCode 1006\" and \"false == event.wasClean\" here. See https://tools.ietf.org/html/rfc6455#section-7.4 for more information.\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n    }\n    switch (event.code) {\n      case constants.RET_CODE.LOCALLY_NO_SPECIFIED_ROOM:\n      case constants.RET_CODE.PLAYER_NOT_ADDABLE_TO_ROOM:\n      case constants.RET_CODE.PLAYER_NOT_READDABLE_TO_ROOM:\n      case constants.RET_CODE.PLAYER_NOT_FOUND:\n      case constants.RET_CODE.PLAYER_CHEATING:\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n        break;\n      default:\n        break;\n    }\n    if (window.clientSessionPingInterval) {\n      clearInterval(clientSessionPingInterval);\n    }\n    if (window.handleClientSessionCloseOrError) {\n      window.handleClientSessionCloseOrError();\n    }\n  };\n};\n\n"]}