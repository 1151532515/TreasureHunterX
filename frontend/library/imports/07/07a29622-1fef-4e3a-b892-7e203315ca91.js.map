{"version":3,"sources":["../../../../assets/scripts/assets/scripts/WsSessionMgr.js"],"names":["window","sendSafely","msgStr","clientSession","readyState","WebSocket","OPEN","send","closeWSConnection","cc","log","close","getBoundRoomIdFromPersistentStorage","expiresAt","parseInt","sys","localStorage","getItem","Date","now","clearBoundRoomIdInBothVolatileAndPersistentStorage","boundRoomId","removeItem","handleHbRequirements","resp","constants","RET_CODE","OK","ret","data","setItem","clientSessionPingInterval","setInterval","param","msgId","act","clientTimestamp","JSON","stringify","intervalToPing","handleHbPong","_base64ToUint8Array","base64","binary_string","atob","len","length","bytes","Uint8Array","i","charCodeAt","_base64ToArrayBuffer","buffer","initPersistentSessionClient","onopenCb","intAuthToken","parse","urlToConnect","backendAddress","PROTOCOL","replace","HOST","PORT","WS_PATH_PREFIX","expectedRoomId","qDict","getQueryParamDict","history","state","console","currentHistoryState","platform","WECHAT_GAME","replaceState","document","title","location","pathname","onopen","event","onmessage","handleRoomDownsyncFrame","typedArray","parsedRoomDownsyncFrame","RoomDownsyncFrameForWeapp","decode","RoomDownsyncFrame","handleGameReadyResp","onerror","error","clearInterval","handleClientSessionCloseOrError","onclose","wasClean","code","PLAYER_NOT_FOUND","PLAYER_CHEATING"],"mappings":"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","file":"WsSessionMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["\n\nwindow.sendSafely = function(msgStr) {\n  /**\n  * - \"If the data can't be sent (for example, because it needs to be buffered but the buffer is full), the socket is closed automatically.\"\n  *\n  * from https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send.\n  */\n  if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) return false;\n  window.clientSession.send(msgStr);\n}\n\nwindow.closeWSConnection = function() {\n  if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) return;\n  cc.log(`Closing \"window.clientSession\" from the client-side.`);\n  window.clientSession.close();\n}\n\nwindow.getBoundRoomIdFromPersistentStorage = function() {\n  const expiresAt = parseInt(cc.sys.localStorage.getItem('expiresAt'));\n  if (!expiresAt || Date.now() >= expiresAt) {\n    window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n    return null;\n  }\n  return cc.sys.localStorage.getItem('boundRoomId');\n};\n\nwindow.clearBoundRoomIdInBothVolatileAndPersistentStorage = function() {\n  window.boundRoomId = null;\n  cc.sys.localStorage.removeItem(\"boundRoomId\");\n  cc.sys.localStorage.removeItem(\"expiresAt\");\n};\n\nwindow.boundRoomId = getBoundRoomIdFromPersistentStorage();\nwindow.handleHbRequirements = function(resp) {\n  if (constants.RET_CODE.OK != resp.ret) return;\n  if (null == window.boundRoomId) {\n    window.boundRoomId = resp.data.boundRoomId;\n    cc.sys.localStorage.setItem('boundRoomId', window.boundRoomId);\n    cc.sys.localStorage.setItem('expiresAt', Date.now() + 10 * 60 * 1000); //TODO: hardcoded, boundRoomId过期时间\n  }\n\n  window.clientSessionPingInterval = setInterval(() => {\n    if (clientSession.readyState != WebSocket.OPEN) return;\n    const param = {\n      msgId: Date.now(),\n      act: \"HeartbeatPing\",\n      data: {\n        clientTimestamp: Date.now()\n      }\n    };\n    window.sendSafely(JSON.stringify(param));\n  }, resp.data.intervalToPing);\n};\n\nwindow.handleHbPong = function(resp) {\n  if (constants.RET_CODE.OK != resp.ret) return;\n// TBD.\n};\n\nfunction _base64ToUint8Array(base64) {\n  var binary_string = window.atob(base64);\n  var len = binary_string.length;\n  var bytes = new Uint8Array(len);\n  for (var i = 0; i < len; i++) {\n    bytes[i] = binary_string.charCodeAt(i);\n  }\n  return bytes;\n}\n\nfunction _base64ToArrayBuffer(base64) {\n  return _base64ToUint8Array(base64).buffer;\n}\n\n\nwindow.initPersistentSessionClient = function(onopenCb) {\n  if (window.clientSession && window.clientSession.readyState == WebSocket.OPEN) {\n    if (null != onopenCb) {\n      onopenCb();\n    }\n    return;\n  }\n\n  const intAuthToken = cc.sys.localStorage.getItem('selfPlayer') ? JSON.parse(cc.sys.localStorage.getItem('selfPlayer')).intAuthToken : \"\";\n\n  let urlToConnect = backendAddress.PROTOCOL.replace('http', 'ws') + '://' + backendAddress.HOST + \":\" + backendAddress.PORT + backendAddress.WS_PATH_PREFIX + \"?intAuthToken=\" + intAuthToken;\n\n  let expectedRoomId = null;\n  const qDict = window.getQueryParamDict();\n  if (qDict) {\n    expectedRoomId = qDict[\"expectedRoomId\"];\n  } else {\n    if (window.history && window.history.state) {\n      expectedRoomId = window.history.state.expectedRoomId;\n    }\n  }\n  if (expectedRoomId) {\n    console.log(\"initPersistentSessionClient with expectedRoomId == \" +  expectedRoomId);\n    urlToConnect = urlToConnect + \"&expectedRoomId=\" + expectedRoomId;\n  } else {\n    window.boundRoomId = getBoundRoomIdFromPersistentStorage();\n    if (null != window.boundRoomId) {\n      console.log(\"initPersistentSessionClient with boundRoomId == \" +  boundRoomId);\n      urlToConnect = urlToConnect + \"&boundRoomId=\" + window.boundRoomId;\n    }\n  }\n\n  const currentHistoryState = window.history && window.history.state ? window.history.state : {}; \n\n  if (cc.sys.platform != cc.sys.WECHAT_GAME){\n    window.history.replaceState(currentHistoryState, document.title, window.location.pathname);\n  }\n\n\n  const clientSession = new WebSocket(urlToConnect);\n\n  clientSession.onopen = function(event) {\n    cc.log(\"The WS clientSession is opened.\");\n    window.clientSession = clientSession;\n    if (null == onopenCb) return;\n    onopenCb();\n  };\n\n  clientSession.onmessage = function(event) {\n    const resp = JSON.parse(event.data)\n    switch (resp.act) {\n      case \"HeartbeatRequirements\":\n        window.handleHbRequirements(resp);\n        break;\n      case \"HeartbeatPong\":\n        window.handleHbPong(resp);\n        break;\n      case \"RoomDownsyncFrame\":\n        if (window.handleRoomDownsyncFrame) {\n          const typedArray = _base64ToUint8Array(resp.data);\n          //console.log(typedArray)\n          const parsedRoomDownsyncFrame = (() => {\n            if(cc.sys.platform == cc.sys.WECHAT_GAME){\n              return window.RoomDownsyncFrameForWeapp.decode(typedArray);\n              //return window.RoomDownsyncFrame.decode(typedArray);\n            }else{\n              return window.RoomDownsyncFrame.decode(typedArray);\n            }\n          })();\n          window.handleRoomDownsyncFrame(parsedRoomDownsyncFrame);\n        }\n        break;\n      case \"Ready\": {\n        if (window.handleGameReadyResp) {\n          window.handleGameReadyResp(resp);\n        }\n        break;\n      }\n      default:\n        cc.log(`${JSON.stringify(resp)}`);\n        break;\n    }\n  };\n\n  clientSession.onerror = function(event) {\n    cc.error(`Error caught on the WS clientSession:`, event);\n    if (window.clientSessionPingInterval) {\n      clearInterval(window.clientSessionPingInterval);\n    }\n    if (window.handleClientSessionCloseOrError) {\n      window.handleClientSessionCloseOrError();\n    }\n  };\n\n  clientSession.onclose = function(event) {\n    cc.log(`The WS clientSession is closed:`, event);\n    if (window.clientSessionPingInterval) {\n      clearInterval(window.clientSessionPingInterval);\n    }\n    if (false == event.wasClean) {\n      // Chrome doesn't allow the use of \"CustomCloseCode\"s (yet) and will callback with a \"WebsocketStdCloseCode 1006\" and \"false == event.wasClean\" here. See https://tools.ietf.org/html/rfc6455#section-7.4 for more information.\n      if (window.handleClientSessionCloseOrError) {\n        window.handleClientSessionCloseOrError();\n      }\n    } else {\n      switch (event.code) {\n        case constants.RET_CODE.PLAYER_NOT_FOUND:\n        case constants.RET_CODE.PLAYER_CHEATING:\n          window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n          break;\n        default:\n          break;\n      }\n\n      if (window.handleClientSessionCloseOrError) {\n        window.handleClientSessionCloseOrError();\n      }\n    }\n  };\n};\n\n"]}