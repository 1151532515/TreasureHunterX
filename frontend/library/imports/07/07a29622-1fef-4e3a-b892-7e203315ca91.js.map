{"version":3,"sources":["../../../../assets/scripts/assets/scripts/WsSessionMgr.js"],"names":["window","sendSafely","msgStr","clientSession","readyState","WebSocket","OPEN","send","closeWSConnection","console","log","close","getBoundRoomIdFromPersistentStorage","boundRoomIdExpiresAt","parseInt","cc","sys","localStorage","getItem","Date","now","clearBoundRoomIdInBothVolatileAndPersistentStorage","boundRoomId","removeItem","clearSelfPlayer","handleHbRequirements","resp","constants","RET_CODE","OK","ret","data","setItem","clientSessionPingInterval","setInterval","param","msgId","act","clientTimestamp","JSON","stringify","intervalToPing","handleHbPong","_base64ToUint8Array","base64","origBytes","atob","origBinaryStr","origLen","length","Uint8Array","i","charCodeAt","platform","WECHAT_GAME","Buffer","from","_base64ToArrayBuffer","buffer","getExpectedRoomIdSync","expectedRoomId","qDict","getQueryParamDict","history","state","unsetClientSessionCloseOrErrorFlag","setClientSessionCloseOrErrorFlag","oldVal","initPersistentSessionClient","onopenCb","intAuthToken","parse","urlToConnect","backendAddress","PROTOCOL","replace","HOST","PORT","WS_PATH_PREFIX","currentHistoryState","replaceState","document","title","location","pathname","onopen","event","onmessage","handleRoomDownsyncFrame","typedArray","parsedRoomDownsyncFrame","RoomDownsyncFrame","decode","handleGameReadyResp","onerror","error","clearInterval","handleClientSessionCloseOrError","onclose","warn","wasClean","code","PLAYER_NOT_FOUND","PLAYER_CHEATING"],"mappings":"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","file":"WsSessionMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["window.sendSafely = function(msgStr) {\n  /**\n  * - \"If the data can't be sent (for example, because it needs to be buffered but the buffer is full), the socket is closed automatically.\"\n  *\n  * from https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send.\n  */\n  if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) return false;\n  window.clientSession.send(msgStr);\n}\n\nwindow.closeWSConnection = function() {\n  if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) return;\n  console.log(`Closing \"window.clientSession\" from the client-side.`);\n  window.clientSession.close();\n}\n\nwindow.getBoundRoomIdFromPersistentStorage = function() {\n  const boundRoomIdExpiresAt = parseInt(cc.sys.localStorage.getItem(\"boundRoomIdExpiresAt\"));\n  if (!boundRoomIdExpiresAt || Date.now() >= boundRoomIdExpiresAt) {\n    window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n    return null;\n  }\n  return cc.sys.localStorage.getItem(\"boundRoomId\");\n};\n\nwindow.clearBoundRoomIdInBothVolatileAndPersistentStorage = function() {\n  window.boundRoomId = null;\n  cc.sys.localStorage.removeItem(\"boundRoomId\");\n  cc.sys.localStorage.removeItem(\"boundRoomIdExpiresAt\");\n};\n\nwindow.clearSelfPlayer = function() {\n  cc.sys.localStorage.removeItem(\"selfPlayer\");\n};\n\nwindow.boundRoomId = getBoundRoomIdFromPersistentStorage();\nwindow.handleHbRequirements = function(resp) {\n  if (constants.RET_CODE.OK != resp.ret) return;\n  if (null == window.boundRoomId) {\n    window.boundRoomId = resp.data.boundRoomId;\n    cc.sys.localStorage.setItem('boundRoomId', window.boundRoomId);\n    cc.sys.localStorage.setItem('boundRoomIdExpiresAt', Date.now() + 10 * 60 * 1000); // Temporarily hardcoded, for `boundRoomId` only.\n  }\n\n  window.clientSessionPingInterval = setInterval(() => {\n    if (clientSession.readyState != WebSocket.OPEN) return;\n    const param = {\n      msgId: Date.now(),\n      act: \"HeartbeatPing\",\n      data: {\n        clientTimestamp: Date.now()\n      }\n    };\n    window.sendSafely(JSON.stringify(param));\n  }, resp.data.intervalToPing);\n};\n\nwindow.handleHbPong = function(resp) {\n  if (constants.RET_CODE.OK != resp.ret) return;\n  // TBD.\n};\n\nfunction _base64ToUint8Array(base64) {\n  var origBytes = null;\n  if (null != window.atob) {\n    var origBinaryStr = window.atob(base64);\n    var origLen = origBinaryStr.length;\n    origBytes = new Uint8Array(origLen);\n    for (var i = 0; i < origLen; i++) {\n      origBytes[i] = origBinaryStr.charCodeAt(i);\n    }\n    return origBytes;\n  } else if (cc.sys.platform == cc.sys.WECHAT_GAME) {\n    return Buffer.from(base64, 'base64');\n  } else {\n    return null;\n  }\n}\n\nfunction _base64ToArrayBuffer(base64) {\n  return _base64ToUint8Array(base64).buffer;\n}\n\nwindow.getExpectedRoomIdSync = function() {\n  if (cc.sys.platform == cc.sys.WECHAT_GAME) {\n    return window.expectedRoomId;\n  } else {\n    const qDict = window.getQueryParamDict();\n    if (qDict) {\n      return qDict[\"expectedRoomId\"];\n    } else {\n      if (window.history && window.history.state) {\n        return window.history.state.expectedRoomId;\n      } \n    }\n  }\n\n  return null;\n};\n\nwindow.unsetClientSessionCloseOrErrorFlag = function() {\n  cc.sys.localStorage.removeItem(\"ClientSessionCloseOrErrorFlag\");\n  return;\n}\n\nwindow.setClientSessionCloseOrErrorFlag = function() {\n  const oldVal = cc.sys.localStorage.getItem(\"ClientSessionCloseOrErrorFlag\"); \n  if (true == oldVal) return false;\n  cc.sys.localStorage.setItem(\"ClientSessionCloseOrErrorFlag\", true);\n  return true;\n}\n\nwindow.initPersistentSessionClient = function(onopenCb, expectedRoomId) {\n  if (window.clientSession && window.clientSession.readyState == WebSocket.OPEN) {\n    if (null != onopenCb) {\n      onopenCb();\n    }\n    return;\n  }\n\n  const intAuthToken = cc.sys.localStorage.getItem(\"selfPlayer\") ? JSON.parse(cc.sys.localStorage.getItem('selfPlayer')).intAuthToken : \"\";\n\n  let urlToConnect = backendAddress.PROTOCOL.replace('http', 'ws') + '://' + backendAddress.HOST + \":\" + backendAddress.PORT + backendAddress.WS_PATH_PREFIX + \"?intAuthToken=\" + intAuthToken;\n\n  if (null != expectedRoomId) {\n    console.log(\"initPersistentSessionClient with expectedRoomId == \" + expectedRoomId);\n    urlToConnect = urlToConnect + \"&expectedRoomId=\" + expectedRoomId;\n    if (cc.sys.platform == cc.sys.WECHAT_GAME) {\n      // This is a dirty hack. -- YFLu\n      window.expectedRoomId = null;\n    }\n  } else {\n    window.boundRoomId = getBoundRoomIdFromPersistentStorage();\n    if (null != window.boundRoomId) {\n      console.log(\"initPersistentSessionClient with boundRoomId == \" + boundRoomId);\n      urlToConnect = urlToConnect + \"&boundRoomId=\" + window.boundRoomId;\n    }\n  }\n\n  const currentHistoryState = window.history && window.history.state ? window.history.state : {};\n\n  if (cc.sys.platform != cc.sys.WECHAT_GAME) {\n    window.history.replaceState(currentHistoryState, document.title, window.location.pathname);\n  }\n\n  const clientSession = new WebSocket(urlToConnect);\n\n  clientSession.onopen = function(event) {\n    console.log(\"The WS clientSession is opened.\");\n    window.clientSession = clientSession;\n    if (null == onopenCb) return;\n    onopenCb();\n  };\n\n  clientSession.onmessage = function(event) {\n    const resp = JSON.parse(event.data)\n    switch (resp.act) {\n      case \"HeartbeatRequirements\":\n        window.handleHbRequirements(resp); //获取boundRoomId并存储到localStorage\n        break;\n      case \"HeartbeatPong\":\n        window.handleHbPong(resp);\n        break;\n      case \"RoomDownsyncFrame\":\n        if (window.handleRoomDownsyncFrame) {\n          const typedArray = _base64ToUint8Array(resp.data);\n          const parsedRoomDownsyncFrame = (() => {\n            return window.RoomDownsyncFrame.decode(typedArray);\n          })();\n          window.handleRoomDownsyncFrame(parsedRoomDownsyncFrame);\n        }\n        break;\n      case \"Ready\": {\n        if (window.handleGameReadyResp) {\n          window.handleGameReadyResp(resp);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  clientSession.onerror = function(event) {\n    if (!window.setClientSessionCloseOrErrorFlag()) {\n      return; \n    }\n    console.error(\"Error caught on the WS clientSession: \", event);\n    if (window.clientSessionPingInterval) {\n      clearInterval(window.clientSessionPingInterval);\n    }\n    if (window.handleClientSessionCloseOrError) {\n      window.handleClientSessionCloseOrError();\n    }\n    window.unsetClientSessionCloseOrErrorFlag();\n  };\n\n  clientSession.onclose = function(event) {\n    if (!window.setClientSessionCloseOrErrorFlag()) {\n      return; \n    }\n    console.warn(\"The WS clientSession is closed: \", event);\n    if (window.clientSessionPingInterval) {\n      clearInterval(window.clientSessionPingInterval);\n    }\n    if (false == event.wasClean) {\n      // Chrome doesn't allow the use of \"CustomCloseCode\"s (yet) and will callback with a \"WebsocketStdCloseCode 1006\" and \"false == event.wasClean\" here. See https://tools.ietf.org/html/rfc6455#section-7.4 for more information.\n      if (window.handleClientSessionCloseOrError) {\n        window.handleClientSessionCloseOrError();\n      }\n    } else {\n      switch (event.code) {\n        case constants.RET_CODE.PLAYER_NOT_FOUND:\n        case constants.RET_CODE.PLAYER_CHEATING:\n          window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n          break;\n        default:\n          break;\n      }\n\n      if (window.handleClientSessionCloseOrError) {\n        window.handleClientSessionCloseOrError();\n      }\n    }\n    window.unsetClientSessionCloseOrErrorFlag();\n  };\n};\n\n"]}