{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\BasePlayer.js"],"names":["module","export","cc","Class","extends","Component","properties","animComp","type","Animation","default","baseSpeed","Float","speed","lastMovedAt","eps","magicLeanLowerBound","magicLeanUpperBound","start","self","contactedControlledPlayers","contactedNPCPlayers","coveringShelterZReducers","computedNewDifferentPosLocalToParentWithinCurrentFrame","actionMangerSingleton","ActionManager","scheduledDirection","dx","dy","activeDirection","onLoad","canvasNode","mapNode","parent","contactedBarriers","joystickInputControllerScriptIns","getComponent","ctrl","node","play","scheduleNewDirection","newScheduledDirection","forceAnimSwitch","clipKey","toString","clip","clips","console","warn","_addCoveringShelterZReducer","comp","coveringShelterZReducer","_id","push","_removeCoveringShelterZReducer","filter","_addContactedBarrier","collider","log","contactedBarrier","id","_removeContactedBarrier","_addContactedControlledPlayers","aComp","uuid","_removeContactedControlledPlayer","_addContactedNPCPlayers","_removeContactedNPCPlayer","_canMoveBy","vecToMoveBy","position","add","tileCollisionManager","isOutOfMapNode","currentSelfColliderCircle","CircleCollider","nextSelfColliderCircle","length","mutatedVecToMoveBy","mul","offset","radius","contactedBarrierPolygonLocalToParentWithinCurrentFrame","points","p","Intersection","polygonCircle","_calculateVecToMoveBy","elapsedTime","sDir","v2","distanceToMove","denominator","Math","sqrt","unitProjDx","unitProjDy","update","dt","lateUpdate","newScheduledDirectionInLocalCoordinate","discretizeDirection","now","Date","getTime","onCollisionEnter","other","playerScriptIns","name","showProfileTrigger","setLocalZOrder","onCollisionStay","onCollisionExit","hideProfileTrigger","_generateRandomDirection","ALL_DISCRETE_DIRECTIONS_CLOCKWISE","floor","random","_generateRandomDirectionExcluding","toExcludeDx","toExcludeDy","randomDirectionList","exactIdx","ii","updateSpeed","proposedSpeed","startFrozenDisplay","stopFrozenDisplay","opacity"],"mappings":";;;;;;AAAAA,OAAOC,MAAP,GAAgBC,GAAGC,KAAH,CAAS;AACvBC,WAASF,GAAGG,SADW;;AAGvBC,cAAY;AACVC,cAAU;AACRC,YAAMN,GAAGO,SADD;AAERC,eAAS;AAFD,KADA;AAKVC,eAAW;AACTH,YAAMN,GAAGU,KADA;AAETF,eAAS;AAFA,KALD;AASVG,WAAO;AACLL,YAAMN,GAAGU,KADJ;AAELF,eAAS;AAFJ,KATG;AAaVI,iBAAa;AACXN,YAAMN,GAAGU,KADE;AAEXF,eAAS,CAFE,CAEA;AAFA,KAbH;AAiBVK,SAAK;AACHL,eAAS,IADN;AAEHF,YAAMN,GAAGU;AAFN,KAjBK;AAqBVI,yBAAqB;AACnBN,eAAS,KADU,EACH;AAChBF,YAAMN,GAAGU;AAFU,KArBX;AAyBVK,yBAAqB;AACnBP,eAAS,KADU,EACH;AAChBF,YAAMN,GAAGU;AAFU;AAzBX,GAHW;;AAkCvB;AACAM,OAnCuB,mBAmCf;AACN,QAAMC,OAAO,IAAb;AACAA,SAAKC,0BAAL,GAAkC,EAAlC;AACAD,SAAKE,mBAAL,GAA2B,EAA3B;AACAF,SAAKG,wBAAL,GAAgC,EAAhC;;AAEAH,SAAKI,sDAAL,GAA8D,IAA9D;AACAJ,SAAKK,qBAAL,GAA6B,IAAItB,GAAGuB,aAAP,EAA7B;AACAN,SAAKO,kBAAL,GAA0B;AACxBC,UAAI,GADoB;AAExBC,UAAI;AAFoB,KAA1B;;AAKAT,SAAKU,eAAL,GAAuB;AACrBF,UAAI,GADiB;AAErBC,UAAI;AAFiB,KAAvB;AAID,GApDsB;AAsDvBE,QAtDuB,oBAsDd;AACP,QAAMX,OAAO,IAAb;AACA,QAAMY,aAAaZ,KAAKa,OAAL,CAAaC,MAAhC;AACAd,SAAKe,iBAAL,GAAyB,EAAzB;AACA,QAAMC,mCAAmCJ,WAAWK,YAAX,CAAwB,oBAAxB,CAAzC;AACAjB,SAAKkB,IAAL,GAAYF,gCAAZ;AACAhB,SAAKZ,QAAL,GAAgBY,KAAKmB,IAAL,CAAUF,YAAV,CAAuBlC,GAAGO,SAA1B,CAAhB;AACAU,SAAKZ,QAAL,CAAcgC,IAAd;AACD,GA9DsB;AAgEvBC,sBAhEuB,gCAgEFC,qBAhEE,EAgEqBC,eAhErB,EAgEsC;AAC3D,QAAI,CAACD,qBAAL,EAA4B;AAC1B;AACD;AACD,QAAIC,mBAAmB,QAAQ,KAAKhB,kBAAhC,IAAuDe,sBAAsBd,EAAtB,IAA4B,KAAKD,kBAAL,CAAwBC,EAApD,IAA0Dc,sBAAsBb,EAAtB,IAA4B,KAAKF,kBAAL,CAAwBE,EAAzK,EAA8K;AAC5K,WAAKF,kBAAL,GAA0Be,qBAA1B;AACA,UAAME,UAAUF,sBAAsBd,EAAtB,CAAyBiB,QAAzB,KAAsCH,sBAAsBb,EAAtB,CAAyBgB,QAAzB,EAAtD;AACA,UAAIC,OAAO,KAAKC,KAAL,CAAWH,OAAX,CAAX;AACA,UAAI,CAACE,IAAL,EAAW;AACT;AACA,YAAI,MAAMJ,sBAAsBd,EAA5B,IAAkC,MAAMc,sBAAsBb,EAAlE,EAAsE;AACpEmB,kBAAQC,IAAR,CAAa,0BAA0BL,OAA1B,GAAoC,eAApC,GAAsDE,IAAtD,GAA6D,GAA1E;AACD;AACF,OALD,MAKO;AACL,aAAKtC,QAAL,CAAcgC,IAAd,CAAmBM,IAAnB;AACD;AACF;AACF,GAjFsB;AAmFvBI,6BAnFuB,uCAmFKC,IAnFL,EAmFW;AAChC,QAAM/B,OAAO,IAAb;AADgC;AAAA;AAAA;;AAAA;AAEhC,2BAAoCA,KAAKG,wBAAzC,8HAAmE;AAAA,YAA1D6B,uBAA0D;;AACjE,YAAIA,wBAAwBC,GAAxB,IAA+BF,KAAKE,GAAxC,EAA6C;AAC3C,iBAAO,KAAP;AACD;AACF;AAN+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOhCjC,SAAKG,wBAAL,CAA8B+B,IAA9B,CAAmCH,IAAnC;AACA,WAAO,IAAP;AACD,GA5FsB;AA8FvBI,gCA9FuB,0CA8FQJ,IA9FR,EA8Fc;AACnC,QAAM/B,OAAO,IAAb;AACAA,SAAKG,wBAAL,GAAgCH,KAAKG,wBAAL,CAA8BiC,MAA9B,CAAqC,UAACJ,uBAAD,EAA6B;AAChG,aAAOA,wBAAwBC,GAAxB,IAA+BF,KAAKE,GAA3C;AACD,KAF+B,CAAhC;AAGA,WAAO,IAAP;AACD,GApGsB;AAsGvBI,sBAtGuB,gCAsGFC,QAtGE,EAsGQ;AAC7B,QAAMtC,OAAO,IAAb;AACA,QAAI,CAACA,KAAKe,iBAAV,EAA6B;AAC3BhC,SAAGwD,GAAH,CAAO,gDAAgDvC,KAAKe,iBAA5D;AACD;AAJ4B;AAAA;AAAA;;AAAA;AAK7B,4BAA6Bf,KAAKe,iBAAlC,mIAAqD;AAAA,YAA5CyB,gBAA4C;;AACnD,YAAIA,iBAAiBC,EAAjB,IAAuBH,SAASG,EAApC,EAAwC;AACtC,iBAAO,KAAP;AACD;AACF;AAT4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAU7BzC,SAAKe,iBAAL,CAAuBmB,IAAvB,CAA4BI,QAA5B;AACA,WAAO,IAAP;AACD,GAlHsB;AAoHvBI,yBApHuB,mCAoHCJ,QApHD,EAoHW;AAChC,QAAMtC,OAAO,IAAb;AACAA,SAAKe,iBAAL,GAAyBf,KAAKe,iBAAL,CAAuBqB,MAAvB,CAA8B,UAACI,gBAAD,EAAsB;AAC3E,aAAOA,iBAAiBC,EAAjB,IAAuBH,SAASG,EAAvC;AACD,KAFwB,CAAzB;AAGA,WAAO,IAAP;AACD,GA1HsB;AA4HvBE,gCA5HuB,0CA4HQZ,IA5HR,EA4Hc;AACnC,QAAM/B,OAAO,IAAb;AADmC;AAAA;AAAA;;AAAA;AAEnC,4BAAkBA,KAAKC,0BAAvB,mIAAmD;AAAA,YAA1C2C,KAA0C;;AACjD,YAAIA,MAAMC,IAAN,IAAcd,KAAKc,IAAvB,EAA6B;AAC3B,iBAAO,KAAP;AACD;AACF;AANkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOnC7C,SAAKC,0BAAL,CAAgCiC,IAAhC,CAAqCH,IAArC;AACA,WAAO,IAAP;AACD,GArIsB;AAuIvBe,kCAvIuB,4CAuIUf,IAvIV,EAuIgB;AACrC,QAAM/B,OAAO,IAAb;AACAA,SAAKC,0BAAL,GAAkCD,KAAKC,0BAAL,CAAgCmC,MAAhC,CAAuC,UAACQ,KAAD,EAAW;AAClF,aAAOA,MAAMC,IAAN,IAAcd,KAAKc,IAA1B;AACD,KAFiC,CAAlC;AAGA,WAAO,IAAP;AACD,GA7IsB;AA+IvBE,yBA/IuB,mCA+IChB,IA/ID,EA+IO;AAC5B,QAAM/B,OAAO,IAAb;AAD4B;AAAA;AAAA;;AAAA;AAE5B,4BAAkBA,KAAKE,mBAAvB,mIAA4C;AAAA,YAAnC0C,KAAmC;;AAC1C,YAAIA,MAAMC,IAAN,IAAcd,KAAKc,IAAvB,EAA6B;AAC3B,iBAAO,KAAP;AACD;AACF;AAN2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO5B7C,SAAKE,mBAAL,CAAyBgC,IAAzB,CAA8BH,IAA9B;AACA,WAAO,IAAP;AACD,GAxJsB;AA0JvBiB,2BA1JuB,qCA0JGjB,IA1JH,EA0JS;AAC9B,QAAM/B,OAAO,IAAb;AACAA,SAAKE,mBAAL,GAA2BF,KAAKE,mBAAL,CAAyBkC,MAAzB,CAAgC,UAACQ,KAAD,EAAW;AACpE,aAAOA,MAAMC,IAAN,IAAcd,KAAKc,IAA1B;AACD,KAF0B,CAA3B;AAGA,WAAO,IAAP;AACD,GAhKsB;AAkKvBI,YAlKuB,sBAkKZC,WAlKY,EAkKC;AACtB,QAAMlD,OAAO,IAAb;AACA,QAAMI,yDAAyDJ,KAAKmB,IAAL,CAAUgC,QAAV,CAAmBC,GAAnB,CAAuBF,WAAvB,CAA/D;AACAlD,SAAKI,sDAAL,GAA8DA,sDAA9D;;AAEA,QAAIiD,qBAAqBC,cAArB,CAAoCtD,KAAKa,OAAzC,EAAkDT,sDAAlD,CAAJ,EAA+G;AAC7G,aAAO,KAAP;AACD;;AAED,QAAMmD,4BAA4BvD,KAAKmB,IAAL,CAAUF,YAAV,CAAuBlC,GAAGyE,cAA1B,CAAlC;AACA,QAAIC,yBAAyB,IAA7B;AACA,QAAI,IAAIzD,KAAKe,iBAAL,CAAuB2C,MAA3B,IAAqC,IAAI1D,KAAKE,mBAAL,CAAyBwD,MAAtE,EAA8E;AAC5E;AACA,UAAMC,qBAAqBT,YAAYU,GAAZ,CAAgB,CAAhB,CAA3B;AACAH,+BAAyB;AACvBN,kBAAUnD,KAAKmB,IAAL,CAAUgC,QAAV,CAAmBC,GAAnB,CAAuBF,YAAYU,GAAZ,CAAgB,CAAhB,CAAvB,EAA2CR,GAA3C,CAA+CG,0BAA0BM,MAAzE,CADa;AAEvBC,gBAAQP,0BAA0BO;AAFX,OAAzB;AAID,KAPD,MAOO;AACLL,+BAAyB;AACvBN,kBAAU/C,uDAAuDgD,GAAvD,CAA2DG,0BAA0BM,MAArF,CADa;AAEvBC,gBAAQP,0BAA0BO;AAFX,OAAzB;AAID;;AAvBqB;AAAA;AAAA;;AAAA;AAyBtB,4BAA6B9D,KAAKe,iBAAlC,mIAAqD;AAAA,YAA5CyB,gBAA4C;;AACnD,YAAIuB,yDAAyD,EAA7D;AADmD;AAAA;AAAA;;AAAA;AAEnD,gCAAcvB,iBAAiBwB,MAA/B,mIAAuC;AAAA,gBAA9BC,CAA8B;;AACrCF,mEAAuD7B,IAAvD,CAA4DM,iBAAiBrB,IAAjB,CAAsBgC,QAAtB,CAA+BC,GAA/B,CAAmCa,CAAnC,CAA5D;AACD;AAJkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKnD,YAAIlF,GAAGmF,YAAH,CAAgBC,aAAhB,CAA8BJ,sDAA9B,EAAsFN,sBAAtF,CAAJ,EAAmH;AACjH,iBAAO,KAAP;AACD;AACF;AAjCqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmCtB,WAAO,IAAP;;AAEF;;;;;;;;;;AAUC,GAjNsB;AAmNvBW,uBAnNuB,iCAmNDC,WAnNC,EAmNY;AACjC,QAAMrE,OAAO,IAAb;AACA,QAAMsE,OAAOtE,KAAKU,eAAlB;;AAEA,QAAI,KAAK4D,KAAK9D,EAAV,IAAgB,KAAK8D,KAAK7D,EAA9B,EAAkC;AAChC,aAAO1B,GAAGwF,EAAH,EAAP;AACD;;AAED,QAAMC,iBAAkBxE,KAAKN,KAAL,GAAa2E,WAArC;AACA,QAAMI,cAAcC,KAAKC,IAAL,CAAUL,KAAK9D,EAAL,GAAU8D,KAAK9D,EAAf,GAAoB8D,KAAK7D,EAAL,GAAU6D,KAAK7D,EAA7C,CAApB;AACA,QAAMmE,aAAcN,KAAK9D,EAAL,GAAUiE,WAA9B;AACA,QAAMI,aAAcP,KAAK7D,EAAL,GAAUgE,WAA9B;AACA,WAAO1F,GAAGwF,EAAH,CACLC,iBAAiBI,UADZ,EAELJ,iBAAiBK,UAFZ,CAAP;AAID,GAnOsB;AAqOvBC,QArOuB,kBAqOhBC,EArOgB,EAqOZ;AACT,QAAM/E,OAAO,IAAb;AACA,QAAMkD,cAAclD,KAAKoE,qBAAL,CAA2BW,EAA3B,CAApB;AACA,QAAI/E,KAAKiD,UAAL,CAAgBC,WAAhB,CAAJ,EAAkC;AAChClD,WAAKmB,IAAL,CAAUgC,QAAV,GAAqBnD,KAAKI,sDAA1B;AACD;AACF,GA3OsB;AA6OvB4E,YA7OuB,sBA6OZD,EA7OY,EA6OR;AACb,QAAM/E,OAAO,IAAb;AACA,QAAI,KAAKA,KAAKU,eAAL,CAAqBF,EAA1B,IAAgC,KAAKR,KAAKU,eAAL,CAAqBD,EAA9D,EAAkE;AAChE,UAAMwE,yCAAyCjF,KAAKkB,IAAL,CAAUgE,mBAAV,CAA8BlF,KAAKU,eAAL,CAAqBF,EAAnD,EAAuDR,KAAKU,eAAL,CAAqBD,EAA5E,EAAgFT,KAAKJ,GAArF,CAA/C;AACAI,WAAKqB,oBAAL,CAA0B4D,sCAA1B;AACD;AACD,QAAME,MAAM,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACArF,SAAKL,WAAL,GAAmBwF,GAAnB;AACD,GArPsB;AAuPvBG,kBAvPuB,4BAuPNC,KAvPM,EAuPCvF,IAvPD,EAuPO;AAC5B,QAAMwF,kBAAkBxF,KAAKiB,YAAL,CAAkBjB,KAAKmB,IAAL,CAAUsE,IAA5B,CAAxB;AACA,YAAQF,MAAMpE,IAAN,CAAWsE,IAAnB;AACE,WAAK,WAAL;AACE,YAAI,eAAezF,KAAKmB,IAAL,CAAUsE,IAA7B,EAAmC;AACjCF,gBAAMpE,IAAN,CAAWF,YAAX,CAAwB,WAAxB,EAAqCyE,kBAArC;AACD;AACDF,wBAAgBzC,uBAAhB,CAAwCwC,KAAxC;AACA;AACF,WAAK,wBAAL;AACEC,wBAAgBnD,oBAAhB,CAAqCkD,KAArC;AACA;AACF,WAAK,wBAAL;AACE;AACF,WAAK,gCAAL;AACEC,wBAAgB1D,2BAAhB,CAA4CyD,KAA5C;AACA,YAAI,KAAKC,gBAAgBrF,wBAAhB,CAAyCuD,MAAlD,EAA0D;AACxDiC,yBAAe3F,KAAKmB,IAApB,EAA0B,CAA1B;AACD;AACD;AACF;AACE;AAnBJ;AAqBD,GA9QsB;AAgRvByE,iBAhRuB,2BAgRPL,KAhRO,EAgRAvF,IAhRA,EAgRM;AAC3B;AACD,GAlRsB;AAoRvB6F,iBApRuB,2BAoRPN,KApRO,EAoRAvF,IApRA,EAoRM;AAC3B,QAAMwF,kBAAkBxF,KAAKiB,YAAL,CAAkBjB,KAAKmB,IAAL,CAAUsE,IAA5B,CAAxB;AACA,YAAQF,MAAMpE,IAAN,CAAWsE,IAAnB;AACE,WAAK,WAAL;AACEF,cAAMpE,IAAN,CAAWF,YAAX,CAAwB,WAAxB,EAAqC6E,kBAArC;AACAN,wBAAgBxC,yBAAhB,CAA0CuC,KAA1C;AACA;AACF,WAAK,wBAAL;AACEC,wBAAgB9C,uBAAhB,CAAwC6C,KAAxC;AACA;AACF,WAAK,wBAAL;AACE;AACF,WAAK,gCAAL;AACEC,wBAAgBrD,8BAAhB,CAA+CoD,KAA/C;AACA,YAAI,KAAKC,gBAAgBrF,wBAAhB,CAAyCuD,MAAlD,EAA0D;AACxDiC,yBAAe3F,KAAKmB,IAApB,EAA0B,CAA1B;AACD;AACD;AACF;AACE;AAjBJ;AAmBD,GAzSsB;AA2SvB4E,0BA3SuB,sCA2SI;AACzB,WAAOC,kCAAkCtB,KAAKuB,KAAL,CAAWvB,KAAKwB,MAAL,KAAgBF,kCAAkCtC,MAA7D,CAAlC,CAAP;AACD,GA7SsB;AA+SvByC,mCA/SuB,6CA+SWC,WA/SX,EA+SwBC,WA/SxB,EA+SqC;AAC1D,QAAIC,sBAAsB,EAA1B;AACA,QAAIC,WAAW,IAAf;AACA,SAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKR,kCAAkCtC,MAAxD,EAAgE,EAAE8C,EAAlE,EAAsE;AACpE,UAAIJ,eAAeJ,kCAAkCQ,EAAlC,EAAsChG,EAArD,IAA2D6F,eAAeL,kCAAkCQ,EAAlC,EAAsC/F,EAApH,EAAwH;AACxH8F,iBAAWC,EAAX;AACA;AACD;AACD,QAAI,QAAQD,QAAZ,EAAsB;AACpB,aAAO,KAAKR,wBAAL,EAAP;AACD;;AAED,SAAK,IAAIS,MAAK,CAAd,EAAiBA,MAAKR,kCAAkCtC,MAAxD,EAAgE,EAAE8C,GAAlE,EAAsE;AACpE,UAAIA,OAAMD,QAAN,IAAmB,CAACC,MAAK,CAAN,IAAWR,kCAAkCtC,MAA9C,IAAyD6C,QAA3E,IAAwF,CAACC,MAAK,CAAN,IAAWR,kCAAkCtC,MAA9C,IAAyD6C,QAApJ,EAA8J;AAC9JD,0BAAoBpE,IAApB,CAAyB8D,kCAAkCQ,GAAlC,CAAzB;AACD;AACD,WAAOF,oBAAoB5B,KAAKuB,KAAL,CAAWvB,KAAKwB,MAAL,KAAgBI,oBAAoB5C,MAA/C,CAApB,CAAP;AACD,GAhUsB;AAkUvB+C,aAlUuB,uBAkUXC,aAlUW,EAkUI;AACzB,QAAI,KAAKA,aAAL,IAAsB,IAAI,KAAKhH,KAAnC,EAA0C;AACxC,WAAKiH,kBAAL;AACD;AACD,QAAI,IAAID,aAAJ,IAAqB,KAAK,KAAKhH,KAAnC,EAA0C;AACxC,WAAKkH,iBAAL;AACD;AACD,SAAKlH,KAAL,GAAagH,aAAb;AACD,GA1UsB;AA4UvBC,oBA5UuB,gCA4UF;AACnB,SAAKxF,IAAL,CAAU0F,OAAV,GAAoB,EAApB;AACD,GA9UsB;AAgVvBD,mBAhVuB,+BAgVH;AAClB,SAAKzF,IAAL,CAAU0F,OAAV,GAAoB,GAApB;AACD;AAlVsB,CAAT,CAAhB","file":"BasePlayer.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["module.export = cc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    animComp: {\r\n      type: cc.Animation,\r\n      default: null,\r\n    },\r\n    baseSpeed: {\r\n      type: cc.Float,\r\n      default: 300,\r\n    },\r\n    speed: {\r\n      type: cc.Float,\r\n      default: 300\r\n    },\r\n    lastMovedAt: {\r\n      type: cc.Float,\r\n      default: 0 // In \"GMT milliseconds\"\r\n    },\r\n    eps: {\r\n      default: 0.10,\r\n      type: cc.Float\r\n    },\r\n    magicLeanLowerBound: {\r\n      default: 0.414, // Tangent of (PI/8).\r\n      type: cc.Float\r\n    },\r\n    magicLeanUpperBound: {\r\n      default: 2.414, // Tangent of (3*PI/8).\r\n      type: cc.Float\r\n    },\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n  start() {\r\n    const self = this;\r\n    self.contactedControlledPlayers = [];\r\n    self.contactedNPCPlayers = [];\r\n    self.coveringShelterZReducers = [];\r\n\r\n    self.computedNewDifferentPosLocalToParentWithinCurrentFrame = null;\r\n    self.actionMangerSingleton = new cc.ActionManager();\r\n    self.scheduledDirection = {\r\n      dx: 0.0,\r\n      dy: 0.0\r\n    };\r\n\r\n    self.activeDirection = {\r\n      dx: 0.0,\r\n      dy: 0.0\r\n    };\r\n  },\r\n\r\n  onLoad() {\r\n    const self = this;\r\n    const canvasNode = self.mapNode.parent;\r\n    self.contactedBarriers = [];\r\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\r\n    self.ctrl = joystickInputControllerScriptIns;\r\n    self.animComp = self.node.getComponent(cc.Animation);\r\n    self.animComp.play();\r\n  },\r\n\r\n  scheduleNewDirection(newScheduledDirection, forceAnimSwitch) {\r\n    if (!newScheduledDirection) {\r\n      return;\r\n    }\r\n    if (forceAnimSwitch || null == this.scheduledDirection || (newScheduledDirection.dx != this.scheduledDirection.dx || newScheduledDirection.dy != this.scheduledDirection.dy)) {\r\n      this.scheduledDirection = newScheduledDirection;\r\n      const clipKey = newScheduledDirection.dx.toString() + newScheduledDirection.dy.toString()\r\n      let clip = this.clips[clipKey];\r\n      if (!clip) {\r\n        // Keep playing the current anim.\r\n        if (0 !== newScheduledDirection.dx || 0 !== newScheduledDirection.dy) {\r\n          console.warn('Clip for clipKey === ' + clipKey + ' is invalid: ' + clip + '.');\r\n        }\r\n      } else {\r\n        this.animComp.play(clip);\r\n      }\r\n    }\r\n  },\r\n\r\n  _addCoveringShelterZReducer(comp) {\r\n    const self = this;\r\n    for (let coveringShelterZReducer of self.coveringShelterZReducers) {\r\n      if (coveringShelterZReducer._id == comp._id) {\r\n        return false;\r\n      }\r\n    }\r\n    self.coveringShelterZReducers.push(comp);\r\n    return true;\r\n  },\r\n\r\n  _removeCoveringShelterZReducer(comp) {\r\n    const self = this;\r\n    self.coveringShelterZReducers = self.coveringShelterZReducers.filter((coveringShelterZReducer) => {\r\n      return coveringShelterZReducer._id != comp._id;\r\n    });\r\n    return true;\r\n  },\r\n\r\n  _addContactedBarrier(collider) {\r\n    const self = this;\r\n    if (!self.contactedBarriers) {\r\n      cc.log(\"self.contactedBarriers is null or undefined\" + self.contactedBarriers)\r\n    }\r\n    for (let contactedBarrier of self.contactedBarriers) {\r\n      if (contactedBarrier.id == collider.id) {\r\n        return false;\r\n      }\r\n    }\r\n    self.contactedBarriers.push(collider);\r\n    return true;\r\n  },\r\n\r\n  _removeContactedBarrier(collider) {\r\n    const self = this;\r\n    self.contactedBarriers = self.contactedBarriers.filter((contactedBarrier) => {\r\n      return contactedBarrier.id != collider.id;\r\n    });\r\n    return true;\r\n  },\r\n\r\n  _addContactedControlledPlayers(comp) {\r\n    const self = this;\r\n    for (let aComp of self.contactedControlledPlayers) {\r\n      if (aComp.uuid == comp.uuid) {\r\n        return false;\r\n      }\r\n    }\r\n    self.contactedControlledPlayers.push(comp);\r\n    return true;\r\n  },\r\n\r\n  _removeContactedControlledPlayer(comp) {\r\n    const self = this;\r\n    self.contactedControlledPlayers = self.contactedControlledPlayers.filter((aComp) => {\r\n      return aComp.uuid != comp.uuid;\r\n    });\r\n    return true;\r\n  },\r\n\r\n  _addContactedNPCPlayers(comp) {\r\n    const self = this;\r\n    for (let aComp of self.contactedNPCPlayers) {\r\n      if (aComp.uuid == comp.uuid) {\r\n        return false;\r\n      }\r\n    }\r\n    self.contactedNPCPlayers.push(comp);\r\n    return true;\r\n  },\r\n\r\n  _removeContactedNPCPlayer(comp) {\r\n    const self = this;\r\n    self.contactedNPCPlayers = self.contactedNPCPlayers.filter((aComp) => {\r\n      return aComp.uuid != comp.uuid;\r\n    });\r\n    return true;\r\n  },\r\n\r\n  _canMoveBy(vecToMoveBy) {\r\n    const self = this;\r\n    const computedNewDifferentPosLocalToParentWithinCurrentFrame = self.node.position.add(vecToMoveBy);\r\n    self.computedNewDifferentPosLocalToParentWithinCurrentFrame = computedNewDifferentPosLocalToParentWithinCurrentFrame;\r\n\r\n    if (tileCollisionManager.isOutOfMapNode(self.mapNode, computedNewDifferentPosLocalToParentWithinCurrentFrame)) {\r\n      return false;\r\n    }\r\n\r\n    const currentSelfColliderCircle = self.node.getComponent(cc.CircleCollider);\r\n    let nextSelfColliderCircle = null;\r\n    if (0 < self.contactedBarriers.length || 0 < self.contactedNPCPlayers.length) {\r\n      /* To avoid unexpected buckling. */\r\n      const mutatedVecToMoveBy = vecToMoveBy.mul(2);\r\n      nextSelfColliderCircle = {\r\n        position: self.node.position.add(vecToMoveBy.mul(2)).add(currentSelfColliderCircle.offset),\r\n        radius: currentSelfColliderCircle.radius,\r\n      };\r\n    } else {\r\n      nextSelfColliderCircle = {\r\n        position: computedNewDifferentPosLocalToParentWithinCurrentFrame.add(currentSelfColliderCircle.offset),\r\n        radius: currentSelfColliderCircle.radius,\r\n      };\r\n    }\r\n\r\n    for (let contactedBarrier of self.contactedBarriers) {\r\n      let contactedBarrierPolygonLocalToParentWithinCurrentFrame = [];\r\n      for (let p of contactedBarrier.points) {\r\n        contactedBarrierPolygonLocalToParentWithinCurrentFrame.push(contactedBarrier.node.position.add(p));\r\n      }\r\n      if (cc.Intersection.polygonCircle(contactedBarrierPolygonLocalToParentWithinCurrentFrame, nextSelfColliderCircle)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n\r\n  /*\r\n   * In a subclass, use \r\n   * \r\n   * _canMoveBy(vecToMoveBy) {\r\n   *   BasePlayer.prototype._canMoveBy.call(this, vecToMoveBy);\r\n   *   // Customized codes.\r\n   * }\r\n   *\r\n   * Reference http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/class.html#override\r\n   */\r\n  },\r\n\r\n  _calculateVecToMoveBy(elapsedTime) {\r\n    const self = this;\r\n    const sDir = self.activeDirection;\r\n\r\n    if (0 == sDir.dx && 0 == sDir.dy) {\r\n      return cc.v2();\r\n    }\r\n\r\n    const distanceToMove = (self.speed * elapsedTime);\r\n    const denominator = Math.sqrt(sDir.dx * sDir.dx + sDir.dy * sDir.dy);\r\n    const unitProjDx = (sDir.dx / denominator);\r\n    const unitProjDy = (sDir.dy / denominator);\r\n    return cc.v2(\r\n      distanceToMove * unitProjDx,\r\n      distanceToMove * unitProjDy,\r\n    );\r\n  },\r\n\r\n  update(dt) {\r\n    const self = this;\r\n    const vecToMoveBy = self._calculateVecToMoveBy(dt);\r\n    if (self._canMoveBy(vecToMoveBy)) {\r\n      self.node.position = self.computedNewDifferentPosLocalToParentWithinCurrentFrame;\r\n    }\r\n  },\r\n\r\n  lateUpdate(dt) {\r\n    const self = this;\r\n    if (0 != self.activeDirection.dx || 0 != self.activeDirection.dy) {\r\n      const newScheduledDirectionInLocalCoordinate = self.ctrl.discretizeDirection(self.activeDirection.dx, self.activeDirection.dy, self.eps);\r\n      self.scheduleNewDirection(newScheduledDirectionInLocalCoordinate);\r\n    }\r\n    const now = new Date().getTime();\r\n    self.lastMovedAt = now;\r\n  },\r\n\r\n  onCollisionEnter(other, self) {\r\n    const playerScriptIns = self.getComponent(self.node.name);\r\n    switch (other.node.name) {\r\n      case \"NPCPlayer\":\r\n        if (\"NPCPlayer\" != self.node.name) {\r\n          other.node.getComponent('NPCPlayer').showProfileTrigger();\r\n        }\r\n        playerScriptIns._addContactedNPCPlayers(other);\r\n        break;\r\n      case \"PolygonBoundaryBarrier\":\r\n        playerScriptIns._addContactedBarrier(other);\r\n        break;\r\n      case \"PolygonBoundaryShelter\":\r\n        break;\r\n      case \"PolygonBoundaryShelterZReducer\":\r\n        playerScriptIns._addCoveringShelterZReducer(other);\r\n        if (1 == playerScriptIns.coveringShelterZReducers.length) {\r\n          setLocalZOrder(self.node, 2);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n\r\n  onCollisionStay(other, self) {\r\n    // TBD.\r\n  },\r\n\r\n  onCollisionExit(other, self) {\r\n    const playerScriptIns = self.getComponent(self.node.name);\r\n    switch (other.node.name) {\r\n      case \"NPCPlayer\":\r\n        other.node.getComponent('NPCPlayer').hideProfileTrigger();\r\n        playerScriptIns._removeContactedNPCPlayer(other);\r\n        break;\r\n      case \"PolygonBoundaryBarrier\":\r\n        playerScriptIns._removeContactedBarrier(other);\r\n        break;\r\n      case \"PolygonBoundaryShelter\":\r\n        break;\r\n      case \"PolygonBoundaryShelterZReducer\":\r\n        playerScriptIns._removeCoveringShelterZReducer(other);\r\n        if (0 == playerScriptIns.coveringShelterZReducers.length) {\r\n          setLocalZOrder(self.node, 5);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n\r\n  _generateRandomDirection() {\r\n    return ALL_DISCRETE_DIRECTIONS_CLOCKWISE[Math.floor(Math.random() * ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length)];\r\n  },\r\n\r\n  _generateRandomDirectionExcluding(toExcludeDx, toExcludeDy) {\r\n    let randomDirectionList = [];\r\n    let exactIdx = null;\r\n    for (let ii = 0; ii < ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length; ++ii) {\r\n      if (toExcludeDx != ALL_DISCRETE_DIRECTIONS_CLOCKWISE[ii].dx || toExcludeDy != ALL_DISCRETE_DIRECTIONS_CLOCKWISE[ii].dy) continue;\r\n      exactIdx = ii;\r\n      break;\r\n    }\r\n    if (null == exactIdx) {\r\n      return this._generateRandomDirection();\r\n    }\r\n\r\n    for (let ii = 0; ii < ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length; ++ii) {\r\n      if (ii == exactIdx || ((ii - 1) % ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length) == exactIdx || ((ii + 1) % ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length) == exactIdx) continue;\r\n      randomDirectionList.push(ALL_DISCRETE_DIRECTIONS_CLOCKWISE[ii]);\r\n    }\r\n    return randomDirectionList[Math.floor(Math.random() * randomDirectionList.length)]\r\n  },\r\n\r\n  updateSpeed(proposedSpeed) {\r\n    if (0 == proposedSpeed && 0 < this.speed) {\r\n      this.startFrozenDisplay(); \r\n    } \r\n    if (0 < proposedSpeed && 0 == this.speed) {\r\n      this.stopFrozenDisplay(); \r\n    } \r\n    this.speed = proposedSpeed; \r\n  },\r\n\r\n  startFrozenDisplay() {\r\n    this.node.opacity = 64; \r\n  },\r\n\r\n  stopFrozenDisplay() {\r\n    this.node.opacity = 255; \r\n  },\r\n});\r\n"]}