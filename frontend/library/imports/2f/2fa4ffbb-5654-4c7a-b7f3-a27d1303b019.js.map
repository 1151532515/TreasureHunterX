{"version":3,"sources":["../../../../assets/scripts/assets/scripts/BasePlayer.js"],"names":["module","export","cc","Class","extends","Component","properties","animComp","type","Animation","default","baseSpeed","Float","speed","lastMovedAt","eps","magicLeanLowerBound","magicLeanUpperBound","start","self","contactedControlledPlayers","contactedNPCPlayers","contactedBarriers","coveringShelterZReducers","computedNewDifferentPosLocalToParentWithinCurrentFrame","actionMangerSingleton","ActionManager","scheduledDirection","dx","dy","activeDirection","onLoad","canvasNode","mapNode","parent","joystickInputControllerScriptIns","getComponent","ctrl","node","play","scheduleNewDirection","newScheduledDirection","forceAnimSwitch","clipKey","toString","clip","clips","console","warn","_addCoveringShelterZReducer","comp","coveringShelterZReducer","_id","push","_removeCoveringShelterZReducer","filter","_addContactedBarrier","collider","contactedBarrier","id","_removeContactedBarrier","_addContactedControlledPlayers","aComp","uuid","_removeContactedControlledPlayer","_addContactedNPCPlayers","_removeContactedNPCPlayer","_canMoveBy","vecToMoveBy","position","add","tileCollisionManager","isOutOfMapNode","currentSelfColliderCircle","CircleCollider","nextSelfColliderCircle","length","mutatedVecToMoveBy","mul","offset","radius","contactedBarrierPolygonLocalToParentWithinCurrentFrame","points","p","Intersection","polygonCircle","_calculateVecToMoveBy","elapsedTime","sDir","v2","distanceToMove","denominator","Math","sqrt","unitProjDx","unitProjDy","update","dt","lateUpdate","newScheduledDirectionInLocalCoordinate","discretizeDirection","now","Date","getTime","onCollisionEnter","other","playerScriptIns","name","showProfileTrigger","setLocalZOrder","onCollisionStay","onCollisionExit","hideProfileTrigger","_generateRandomDirection","ALL_DISCRETE_DIRECTIONS_CLOCKWISE","floor","random","_generateRandomDirectionExcluding","toExcludeDx","toExcludeDy","randomDirectionList","exactIdx","ii"],"mappings":"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","file":"BasePlayer.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["module.export = cc.Class({\n  extends: cc.Component,\n\n  properties: {\n    animComp: {\n      type: cc.Animation,\n      default: null,\n    },\n    baseSpeed: {\n      type: cc.Float,\n      default: 300,\n    },\n    speed: {\n      type: cc.Float,\n      default: 300\n    },\n    lastMovedAt: {\n      type: cc.Float,\n      default: 0 // In \"GMT milliseconds\"\n    },\n    eps: {\n      default: 0.10,\n      type: cc.Float\n    },\n    magicLeanLowerBound: {\n      default: 0.414, // Tangent of (PI/8).\n      type: cc.Float\n    },\n    magicLeanUpperBound: {\n      default: 2.414, // Tangent of (3*PI/8).\n      type: cc.Float\n    },\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  start() {\n    const self = this;\n    self.contactedControlledPlayers = [];\n    self.contactedNPCPlayers = [];\n    self.contactedBarriers = [];\n    self.coveringShelterZReducers = [];\n\n    self.computedNewDifferentPosLocalToParentWithinCurrentFrame = null;\n    self.actionMangerSingleton = new cc.ActionManager();\n    self.scheduledDirection = {\n      dx: 0.0,\n      dy: 0.0\n    };\n\n    self.activeDirection = {\n      dx: 0.0,\n      dy: 0.0\n    };\n  },\n\n  onLoad() {\n    const self = this;\n    const canvasNode = self.mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    self.ctrl = joystickInputControllerScriptIns;\n    self.animComp = self.node.getComponent(cc.Animation);\n    self.animComp.play();\n  },\n\n  scheduleNewDirection(newScheduledDirection, forceAnimSwitch) {\n    if (!newScheduledDirection) {\n      return;\n    }\n    if (forceAnimSwitch || null == this.scheduledDirection || (newScheduledDirection.dx != this.scheduledDirection.dx || newScheduledDirection.dy != this.scheduledDirection.dy)) {\n      this.scheduledDirection = newScheduledDirection;\n      const clipKey = newScheduledDirection.dx.toString() + newScheduledDirection.dy.toString()\n      let clip = this.clips[clipKey];\n      if (!clip) {\n        // Keep playing the current anim.\n        if (0 !== newScheduledDirection.dx || 0 !== newScheduledDirection.dy) {\n          console.warn('Clip for clipKey === ' + clipKey + ' is invalid: ' + clip + '.');\n        }\n      } else {\n        this.animComp.play(clip);\n      }\n    }\n  },\n\n  _addCoveringShelterZReducer(comp) {\n    const self = this;\n    for (let coveringShelterZReducer of self.coveringShelterZReducers) {\n      if (coveringShelterZReducer._id == comp._id) {\n        return false;\n      }\n    }\n    self.coveringShelterZReducers.push(comp);\n    return true;\n  },\n\n  _removeCoveringShelterZReducer(comp) {\n    const self = this;\n    self.coveringShelterZReducers = self.coveringShelterZReducers.filter((coveringShelterZReducer) => {\n      return coveringShelterZReducer._id != comp._id;\n    });\n    return true;\n  },\n\n  _addContactedBarrier(collider) {\n    const self = this;\n    for (let contactedBarrier of self.contactedBarriers) {\n      if (contactedBarrier.id == collider.id) {\n        return false;\n      }\n    }\n    self.contactedBarriers.push(collider);\n    return true;\n  },\n\n  _removeContactedBarrier(collider) {\n    const self = this;\n    self.contactedBarriers = self.contactedBarriers.filter((contactedBarrier) => {\n      return contactedBarrier.id != collider.id;\n    });\n    return true;\n  },\n\n  _addContactedControlledPlayers(comp) {\n    const self = this;\n    for (let aComp of self.contactedControlledPlayers) {\n      if (aComp.uuid == comp.uuid) {\n        return false;\n      }\n    }\n    self.contactedControlledPlayers.push(comp);\n    return true;\n  },\n\n  _removeContactedControlledPlayer(comp) {\n    const self = this;\n    self.contactedControlledPlayers = self.contactedControlledPlayers.filter((aComp) => {\n      return aComp.uuid != comp.uuid;\n    });\n    return true;\n  },\n\n  _addContactedNPCPlayers(comp) {\n    const self = this;\n    for (let aComp of self.contactedNPCPlayers) {\n      if (aComp.uuid == comp.uuid) {\n        return false;\n      }\n    }\n    self.contactedNPCPlayers.push(comp);\n    return true;\n  },\n\n  _removeContactedNPCPlayer(comp) {\n    const self = this;\n    self.contactedNPCPlayers = self.contactedNPCPlayers.filter((aComp) => {\n      return aComp.uuid != comp.uuid;\n    });\n    return true;\n  },\n\n  _canMoveBy(vecToMoveBy) {\n    const self = this;\n    const computedNewDifferentPosLocalToParentWithinCurrentFrame = self.node.position.add(vecToMoveBy);\n    self.computedNewDifferentPosLocalToParentWithinCurrentFrame = computedNewDifferentPosLocalToParentWithinCurrentFrame;\n\n    if (tileCollisionManager.isOutOfMapNode(self.mapNode, computedNewDifferentPosLocalToParentWithinCurrentFrame)) {\n      return false;\n    }\n\n    const currentSelfColliderCircle = self.node.getComponent(cc.CircleCollider);\n    let nextSelfColliderCircle = null;\n    if (0 < self.contactedBarriers.length || 0 < self.contactedNPCPlayers.length) {\n      /* To avoid unexpected buckling. */\n      const mutatedVecToMoveBy = vecToMoveBy.mul(2);\n      nextSelfColliderCircle = {\n        position: self.node.position.add(vecToMoveBy.mul(2)).add(currentSelfColliderCircle.offset),\n        radius: currentSelfColliderCircle.radius,\n      };\n    } else {\n      nextSelfColliderCircle = {\n        position: computedNewDifferentPosLocalToParentWithinCurrentFrame.add(currentSelfColliderCircle.offset),\n        radius: currentSelfColliderCircle.radius,\n      };\n    }\n\n    for (let contactedBarrier of self.contactedBarriers) {\n      let contactedBarrierPolygonLocalToParentWithinCurrentFrame = [];\n      for (let p of contactedBarrier.points) {\n        contactedBarrierPolygonLocalToParentWithinCurrentFrame.push(contactedBarrier.node.position.add(p));\n      }\n      if (cc.Intersection.polygonCircle(contactedBarrierPolygonLocalToParentWithinCurrentFrame, nextSelfColliderCircle)) {\n        return false;\n      }\n    }\n\n    return true;\n\n    /*\n     * In a subclass, use \n     * \n     * _canMoveBy(vecToMoveBy) {\n     *   BasePlayer.prototype._canMoveBy.call(this, vecToMoveBy);\n     *   // Customized codes.\n     * }\n     *\n     * Reference http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/class.html#override\n     */\n  },\n\n  _calculateVecToMoveBy(elapsedTime) {\n    const self = this;\n    const sDir = self.activeDirection;\n\n    if (0 == sDir.dx && 0 == sDir.dy) {\n      return cc.v2();\n    }\n\n    const distanceToMove = (self.speed * elapsedTime);\n    const denominator = Math.sqrt(sDir.dx * sDir.dx + sDir.dy * sDir.dy);\n    const unitProjDx = (sDir.dx / denominator);\n    const unitProjDy = (sDir.dy / denominator);\n    return cc.v2(\n      distanceToMove * unitProjDx,\n      distanceToMove * unitProjDy,\n    );\n  },\n\n  update(dt) {\n    const self = this;\n    const vecToMoveBy = self._calculateVecToMoveBy(dt);\n    if (self._canMoveBy(vecToMoveBy)) {\n      self.node.position = self.computedNewDifferentPosLocalToParentWithinCurrentFrame;\n    }\n  },\n\n  lateUpdate(dt) {\n    const self = this;\n    if (0 != self.activeDirection.dx || 0 != self.activeDirection.dy) {\n      const newScheduledDirectionInLocalCoordinate = self.ctrl.discretizeDirection(self.activeDirection.dx, self.activeDirection.dy, self.eps);\n      self.scheduleNewDirection(newScheduledDirectionInLocalCoordinate);\n    }\n    const now = new Date().getTime();\n    self.lastMovedAt = now;\n  },\n\n  onCollisionEnter(other, self) {\n    const playerScriptIns = self.getComponent(self.node.name);\n    switch (other.node.name) {\n      case \"NPCPlayer\":\n        if(\"NPCPlayer\" != self.node.name){\n          other.node.getComponent('NPCPlayer').showProfileTrigger();\n        }\n        playerScriptIns._addContactedNPCPlayers(other);\n        break;\n      case \"PolygonBoundaryBarrier\":\n        playerScriptIns._addContactedBarrier(other);\n        break;\n      case \"PolygonBoundaryShelter\":\n        break;\n      case \"PolygonBoundaryShelterZReducer\":\n        playerScriptIns._addCoveringShelterZReducer(other);\n        if (1 == playerScriptIns.coveringShelterZReducers.length) {\n          setLocalZOrder(self.node, 2);\n        }\n        break;\n      default:\n        break;\n    }\n  },\n\n  onCollisionStay(other, self) {\n    // TBD.\n  },\n\n  onCollisionExit(other, self) {\n    const playerScriptIns = self.getComponent(self.node.name);\n    switch (other.node.name) {\n      case \"NPCPlayer\":\n        other.node.getComponent('NPCPlayer').hideProfileTrigger();\n        playerScriptIns._removeContactedNPCPlayer(other);\n        break;\n      case \"PolygonBoundaryBarrier\":\n        playerScriptIns._removeContactedBarrier(other);\n        break;\n      case \"PolygonBoundaryShelter\":\n        break;\n      case \"PolygonBoundaryShelterZReducer\":\n        playerScriptIns._removeCoveringShelterZReducer(other);\n        if (0 == playerScriptIns.coveringShelterZReducers.length) {\n          setLocalZOrder(self.node, 5);\n        }\n        break;\n      default:\n        break;\n    }\n  },\n\n  _generateRandomDirection() {\n    return ALL_DISCRETE_DIRECTIONS_CLOCKWISE[Math.floor(Math.random() * ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length)];\n  },\n\n  _generateRandomDirectionExcluding(toExcludeDx, toExcludeDy) {\n    let randomDirectionList = [];\n    let exactIdx = null;\n    for (let ii = 0; ii < ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length; ++ii) {\n      if (toExcludeDx != ALL_DISCRETE_DIRECTIONS_CLOCKWISE[ii].dx || toExcludeDy != ALL_DISCRETE_DIRECTIONS_CLOCKWISE[ii].dy) continue;\n      exactIdx = ii;\n      break;\n    }\n    if (null == exactIdx) {\n      return this._generateRandomDirection();\n    }\n\n    for (let ii = 0; ii < ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length; ++ii) {\n      if (ii == exactIdx || ((ii - 1) % ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length) == exactIdx || ((ii + 1) % ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length) == exactIdx) continue;\n      randomDirectionList.push(ALL_DISCRETE_DIRECTIONS_CLOCKWISE[ii]);\n    }\n    return randomDirectionList[Math.floor(Math.random() * randomDirectionList.length)]\n  },\n});\n"]}