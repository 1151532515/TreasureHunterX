{"version":3,"sources":["../../../../assets/scripts/assets/scripts/BasePlayer.js"],"names":["module","export","cc","Class","extends","Component","properties","animComp","type","Animation","default","baseSpeed","Float","speed","lastMovedAt","eps","magicLeanLowerBound","magicLeanUpperBound","start","self","contactedControlledPlayers","contactedNPCPlayers","contactedBarriers","coveringShelterZReducers","computedNewDifferentPosLocalToParentWithinCurrentFrame","actionMangerSingleton","ActionManager","scheduledDirection","dx","dy","activeDirection","onLoad","node","getComponent","play","scheduleNewDirection","newScheduledDirection","forceAnimSwitch","clipKey","toString","clip","clips","console","warn","_addCoveringShelterZReducer","comp","coveringShelterZReducer","_id","push","_removeCoveringShelterZReducer","filter","_addContactedBarrier","collider","contactedBarrier","id","_removeContactedBarrier","_addContactedControlledPlayers","aComp","uuid","_removeContactedControlledPlayer","_addContactedNPCPlayers","_removeContactedNPCPlayer","_canMoveBy","vecToMoveBy","position","add","tileCollisionManager","isOutOfMapNode","mapNode","currentSelfColliderCircle","nextSelfColliderCircle","length","mutatedVecToMoveBy","mul","offset","radius","contactedBarrierPolygonLocalToParentWithinCurrentFrame","points","p","Intersection","polygonCircle","_calculateVecToMoveBy","elapsedTime","sDir","v2","distanceToMove","denominator","Math","sqrt","unitProjDx","unitProjDy","update","dt","lateUpdate","now","Date","getTime","onCollisionEnter","other","playerScriptIns","name","showProfileTrigger","setLocalZOrder","onCollisionStay","onCollisionExit","hideProfileTrigger","_discretizeDirection","proposedContinuousDirection","abs","criticalRatio","_generateRandomDirection","ALL_DISCRETE_DIRECTIONS_CLOCKWISE","floor","random","_generateRandomDirectionExcluding","toExcludeDx","toExcludeDy","randomDirectionList","exactIdx","ii"],"mappings":"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","file":"BasePlayer.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["module.export = cc.Class({\n  extends: cc.Component,\n\n  properties: {\n    animComp: {\n      type: cc.Animation,\n      default: null,\n    },\n    baseSpeed: {\n      type: cc.Float,\n      default: 300,\n    },\n    speed: {\n      type: cc.Float,\n      default: 300\n    },\n    lastMovedAt: {\n      type: cc.Float,\n      default: 0 // In \"GMT milliseconds\"\n    },\n    eps: {\n      default: 0.10,\n      type: cc.Float\n    },\n    magicLeanLowerBound: {\n      default: 0.414, // Tangent of (PI/8).\n      type: cc.Float\n    },\n    magicLeanUpperBound: {\n      default: 2.414, // Tangent of (3*PI/8).\n      type: cc.Float\n    },\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  start() {\n    const self = this;\n    self.contactedControlledPlayers = [];\n    self.contactedNPCPlayers = [];\n    self.contactedBarriers = [];\n    self.coveringShelterZReducers = [];\n\n    self.computedNewDifferentPosLocalToParentWithinCurrentFrame = null;\n    self.actionMangerSingleton = new cc.ActionManager();\n    self.scheduledDirection = {\n      dx: 0.0,\n      dy: 0.0\n    };\n\n    self.activeDirection = {\n      dx: 0.0,\n      dy: 0.0\n    };\n  },\n\n  onLoad() {\n    const self = this;\n    self.animComp = self.node.getComponent(cc.Animation);\n    self.animComp.play();\n  },\n\n  scheduleNewDirection(newScheduledDirection, forceAnimSwitch) {\n    if (!newScheduledDirection) {\n      return;\n    }\n    if (forceAnimSwitch || null == this.scheduledDirection || (newScheduledDirection.dx != this.scheduledDirection.dx || newScheduledDirection.dy != this.scheduledDirection.dy)) {\n      this.scheduledDirection = newScheduledDirection;\n      const clipKey = newScheduledDirection.dx.toString() + newScheduledDirection.dy.toString()\n      let clip = this.clips[clipKey];\n      if (!clip) {\n        // Keep playing the current anim.\n        if (0 !== newScheduledDirection.dx || 0 !== newScheduledDirection.dy) {\n          console.warn('Clip for clipKey === ' + clipKey + ' is invalid: ' + clip + '.');\n        }\n      } else {\n        this.animComp.play(clip);\n      }\n    }\n  },\n\n  _addCoveringShelterZReducer(comp) {\n    const self = this;\n    for (let coveringShelterZReducer of self.coveringShelterZReducers) {\n      if (coveringShelterZReducer._id == comp._id) {\n        return false;\n      }\n    }\n    self.coveringShelterZReducers.push(comp);\n    return true;\n  },\n\n  _removeCoveringShelterZReducer(comp) {\n    const self = this;\n    self.coveringShelterZReducers = self.coveringShelterZReducers.filter((coveringShelterZReducer) => {\n      return coveringShelterZReducer._id != comp._id;\n    });\n    return true;\n  },\n\n  _addContactedBarrier(collider) {\n    const self = this;\n    for (let contactedBarrier of self.contactedBarriers) {\n      if (contactedBarrier.id == collider.id) {\n        return false;\n      }\n    }\n    self.contactedBarriers.push(collider);\n    return true;\n  },\n\n  _removeContactedBarrier(collider) {\n    const self = this;\n    self.contactedBarriers = self.contactedBarriers.filter((contactedBarrier) => {\n      return contactedBarrier.id != collider.id;\n    });\n    return true;\n  },\n\n  _addContactedControlledPlayers(comp) {\n    const self = this;\n    for (let aComp of self.contactedControlledPlayers) {\n      if (aComp.uuid == comp.uuid) {\n        return false;\n      }\n    }\n    self.contactedControlledPlayers.push(comp);\n    return true;\n  },\n\n  _removeContactedControlledPlayer(comp) {\n    const self = this;\n    self.contactedControlledPlayers = self.contactedControlledPlayers.filter((aComp) => {\n      return aComp.uuid != comp.uuid;\n    });\n    return true;\n  },\n\n  _addContactedNPCPlayers(comp) {\n    const self = this;\n    for (let aComp of self.contactedNPCPlayers) {\n      if (aComp.uuid == comp.uuid) {\n        return false;\n      }\n    }\n    self.contactedNPCPlayers.push(comp);\n    return true;\n  },\n\n  _removeContactedNPCPlayer(comp) {\n    const self = this;\n    self.contactedNPCPlayers = self.contactedNPCPlayers.filter((aComp) => {\n      return aComp.uuid != comp.uuid;\n    });\n    return true;\n  },\n\n  _canMoveBy(vecToMoveBy) {\n    const self = this;\n    const computedNewDifferentPosLocalToParentWithinCurrentFrame = self.node.position.add(vecToMoveBy);\n    self.computedNewDifferentPosLocalToParentWithinCurrentFrame = computedNewDifferentPosLocalToParentWithinCurrentFrame;\n\n    if (tileCollisionManager.isOutOfMapNode(self.mapNode, computedNewDifferentPosLocalToParentWithinCurrentFrame)) {\n      return false;\n    }\n\n    const currentSelfColliderCircle = self.node.getComponent(\"cc.CircleCollider\");\n    let nextSelfColliderCircle = null;\n    if (0 < self.contactedBarriers.length || 0 < self.contactedNPCPlayers.length) {\n      /* To avoid unexpected buckling. */\n      const mutatedVecToMoveBy = vecToMoveBy.mul(2);\n      nextSelfColliderCircle = {\n        position: self.node.position.add(vecToMoveBy.mul(2)).add(currentSelfColliderCircle.offset),\n        radius: currentSelfColliderCircle.radius,\n      };\n    } else {\n      nextSelfColliderCircle = {\n        position: computedNewDifferentPosLocalToParentWithinCurrentFrame.add(currentSelfColliderCircle.offset),\n        radius: currentSelfColliderCircle.radius,\n      };\n    }\n\n    for (let contactedBarrier of self.contactedBarriers) {\n      let contactedBarrierPolygonLocalToParentWithinCurrentFrame = [];\n      for (let p of contactedBarrier.points) {\n        contactedBarrierPolygonLocalToParentWithinCurrentFrame.push(contactedBarrier.node.position.add(p));\n      }\n      if (cc.Intersection.polygonCircle(contactedBarrierPolygonLocalToParentWithinCurrentFrame, nextSelfColliderCircle)) {\n        return false;\n      }\n    }\n\n    return true;\n\n    /*\n     * In a subclass, use \n     * \n     * _canMoveBy(vecToMoveBy) {\n     *   BasePlayer.prototype._canMoveBy.call(this, vecToMoveBy);\n     *   // Customized codes.\n     * }\n     *\n     * Reference http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/class.html#override\n     */\n  },\n\n  _calculateVecToMoveBy(elapsedTime) {\n    const self = this;\n    const sDir = self.scheduledDirection;\n\n    if (0 == sDir.dx && 0 == sDir.dy) {\n      return cc.v2();\n    }\n\n    const distanceToMove = (self.speed * elapsedTime);\n    const denominator = Math.sqrt(sDir.dx * sDir.dx + sDir.dy * sDir.dy);\n    const unitProjDx = (sDir.dx / denominator);\n    const unitProjDy = (sDir.dy / denominator);\n    return cc.v2(\n      distanceToMove * unitProjDx,\n      distanceToMove * unitProjDy,\n    );\n  },\n\n  update(dt) {\n    const self = this;\n    const vecToMoveBy = self._calculateVecToMoveBy(dt);\n    if (self._canMoveBy(vecToMoveBy)) {\n      self.node.position = self.computedNewDifferentPosLocalToParentWithinCurrentFrame;\n    }\n  },\n\n  lateUpdate(dt) {\n    const self = this;\n    const now = new Date().getTime();\n    self.activeDirection = self.scheduledDirection;\n    self.lastMovedAt = now;\n  },\n\n  onCollisionEnter(other, self) {\n    const playerScriptIns = self.getComponent(self.node.name);\n    switch (other.node.name) {\n      case \"NPCPlayer\":\n        if(\"NPCPlayer\" != self.node.name){\n          other.node.getComponent('NPCPlayer').showProfileTrigger();\n        }\n        playerScriptIns._addContactedNPCPlayers(other);\n        break;\n      case \"PolygonBoundaryBarrier\":\n        playerScriptIns._addContactedBarrier(other);\n        break;\n      case \"PolygonBoundaryShelter\":\n        break;\n      case \"PolygonBoundaryShelterZReducer\":\n        playerScriptIns._addCoveringShelterZReducer(other);\n        if (1 == playerScriptIns.coveringShelterZReducers.length) {\n          setLocalZOrder(self.node, 2);\n        }\n        break;\n      default:\n        break;\n    }\n  },\n\n  onCollisionStay(other, self) {\n    // TBD.\n  },\n\n  onCollisionExit(other, self) {\n    const playerScriptIns = self.getComponent(self.node.name);\n    switch (other.node.name) {\n      case \"NPCPlayer\":\n        other.node.getComponent('NPCPlayer').hideProfileTrigger();\n        playerScriptIns._removeContactedNPCPlayer(other);\n        break;\n      case \"PolygonBoundaryBarrier\":\n        playerScriptIns._removeContactedBarrier(other);\n        break;\n      case \"PolygonBoundaryShelter\":\n        break;\n      case \"PolygonBoundaryShelterZReducer\":\n        playerScriptIns._removeCoveringShelterZReducer(other);\n        if (0 == playerScriptIns.coveringShelterZReducers.length) {\n          setLocalZOrder(self.node, 5);\n        }\n        break;\n      default:\n        break;\n    }\n  },\n\n  _discretizeDirection(proposedContinuousDirection) {\n    // Normalization? Is this step even needed when `self.speed` is not large?\n\n    // Discretization.\n    const sDir = {};\n    // 停留原地\n    if (Math.abs(proposedContinuousDirection.dx) < this.eps && Math.abs(proposedContinuousDirection.dy) < this.eps) {\n      sDir.dx = 0;\n      sDir.dy = 0;\n      return sDir;\n    }\n    if (Math.abs(proposedContinuousDirection.dx) < this.eps) {\n      sDir.dx = 0;\n      sDir.dy = proposedContinuousDirection.dy > 0 ? +1 : -1;\n    } else if (Math.abs(sDir.dy) < this.eps) {\n      sDir.dx = proposedContinuousDirection.dx > 0 ? +2 : -2;\n      sDir.dy = 0;\n    } else {\n      // 45度方向\n      const criticalRatio = proposedContinuousDirection.dy / proposedContinuousDirection.dx;\n      if (criticalRatio > this.magicLeanLowerBound && criticalRatio < this.magicLeanUpperBound) {\n        // 一三象限\n        sDir.dx = proposedContinuousDirection.dx > 0 ? +2 : -2;\n        sDir.dy = proposedContinuousDirection.dx > 0 ? +1 : -1;\n      } else if (criticalRatio > -this.magicLeanUpperBound && criticalRatio < -this.magicLeanLowerBound) {\n        // 二四象限\n        sDir.dx = proposedContinuousDirection.dx > 0 ? +2 : -2;\n        sDir.dy = proposedContinuousDirection.dx > 0 ? -1 : +1;\n      } else {\n        // 上下左右四个方向(1即是45度方向)\n        if (Math.abs(criticalRatio) < 1) {\n          sDir.dx = proposedContinuousDirection.dx > 0 ? +2 : -2;\n          sDir.dy = 0;\n        } else {\n          sDir.dx = 0;\n          sDir.dy = proposedContinuousDirection.dy > 0 ? +1 : -1;\n        }\n      }\n    }\n    return sDir;\n  },\n\n  _generateRandomDirection() {\n    return ALL_DISCRETE_DIRECTIONS_CLOCKWISE[Math.floor(Math.random() * ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length)];\n  },\n\n  _generateRandomDirectionExcluding(toExcludeDx, toExcludeDy) {\n    let randomDirectionList = [];\n    let exactIdx = null;\n    for (let ii = 0; ii < ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length; ++ii) {\n      if (toExcludeDx != ALL_DISCRETE_DIRECTIONS_CLOCKWISE[ii].dx || toExcludeDy != ALL_DISCRETE_DIRECTIONS_CLOCKWISE[ii].dy) continue;\n      exactIdx = ii;\n      break;\n    }\n    if (null == exactIdx) {\n      return this._generateRandomDirection();\n    }\n\n    for (let ii = 0; ii < ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length; ++ii) {\n      if (ii == exactIdx || ((ii - 1) % ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length) == exactIdx || ((ii + 1) % ALL_DISCRETE_DIRECTIONS_CLOCKWISE.length) == exactIdx) continue;\n      randomDirectionList.push(ALL_DISCRETE_DIRECTIONS_CLOCKWISE[ii]);\n    }\n    return randomDirectionList[Math.floor(Math.random() * randomDirectionList.length)]\n  },\n});\n"]}