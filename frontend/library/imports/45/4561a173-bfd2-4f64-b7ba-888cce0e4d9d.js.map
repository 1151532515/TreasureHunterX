{"version":3,"sources":["../../../../assets/scripts/assets/scripts/KeyboardControls.js"],"names":["cc","Class","extends","Component","properties","setInputControls","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","macro","KEY","w","activeDirection","dPjY","s","a","dPjX","d","node","KEY_UP","onLoad"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY,EAHL;;AAKPC,oBAAkB,4BAAW;AAC3B,QAAMC,OAAO,IAAb;AACA;AACA;AACAN,OAAGO,WAAH,CAAeC,EAAf,CAAkBR,GAAGS,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,UAASC,KAAT,EAAgB;AACnE,cAAQA,MAAMC,OAAd;AACE,aAAKb,GAAGc,KAAH,CAASC,GAAT,CAAaC,CAAlB;AACEV,eAAKW,eAAL,CAAqBC,IAArB,GAA4B,CAAC,GAA7B;AACA;AACF,aAAKlB,GAAGc,KAAH,CAASC,GAAT,CAAaI,CAAlB;AACEb,eAAKW,eAAL,CAAqBC,IAArB,GAA4B,CAAC,GAA7B;AACA;AACF,aAAKlB,GAAGc,KAAH,CAASC,GAAT,CAAaK,CAAlB;AACEd,eAAKW,eAAL,CAAqBI,IAArB,GAA4B,CAAC,GAA7B;AACA;AACF,aAAKrB,GAAGc,KAAH,CAASC,GAAT,CAAaO,CAAlB;AACEhB,eAAKW,eAAL,CAAqBI,IAArB,GAA4B,CAAC,GAA7B;AACA;AACF;AACE;AAdJ;AAgBD,KAjBD,EAiBGf,KAAKiB,IAjBR;;AAmBA;AACAvB,OAAGO,WAAH,CAAeC,EAAf,CAAkBR,GAAGS,WAAH,CAAeC,SAAf,CAAyBc,MAA3C,EAAmD,UAASZ,KAAT,EAAgB;AACjE,cAAQA,MAAMC,OAAd;AACE,aAAKb,GAAGc,KAAH,CAASC,GAAT,CAAaC,CAAlB;AACE,cAAI,CAAC,GAAD,IAAQV,KAAKW,eAAL,CAAqBC,IAAjC,EAAuC;AACrCZ,iBAAKW,eAAL,CAAqBC,IAArB,GAA4B,GAA5B;AACD;AACD;AACF,aAAKlB,GAAGc,KAAH,CAASC,GAAT,CAAaI,CAAlB;AACE,cAAI,CAAC,GAAD,IAAQb,KAAKW,eAAL,CAAqBC,IAAjC,EAAuC;AACrCZ,iBAAKW,eAAL,CAAqBC,IAArB,GAA4B,GAA5B;AACD;AACD;AACF,aAAKlB,GAAGc,KAAH,CAASC,GAAT,CAAaK,CAAlB;AACE,cAAI,CAAC,GAAD,IAAQd,KAAKW,eAAL,CAAqBI,IAAjC,EAAuC;AACrCf,iBAAKW,eAAL,CAAqBI,IAArB,GAA4B,GAA5B;AACD;AACD;AACF,aAAKrB,GAAGc,KAAH,CAASC,GAAT,CAAaO,CAAlB;AACE,cAAI,CAAC,GAAD,IAAQhB,KAAKW,eAAL,CAAqBI,IAAjC,EAAuC;AACrCf,iBAAKW,eAAL,CAAqBI,IAArB,GAA4B,GAA5B;AACD;AACD;AACF;AACE;AAtBJ;AAwBD,KAzBD,EAyBGf,KAAKiB,IAzBR;AA0BD,GAvDM;;AAyDP;;AAEAE,QA3DO,oBA2DE;AACP;AACA,SAAKR,eAAL,GAAuB;AACrBC,YAAM,GADe;AAErBG,YAAM;AAFe,KAAvB;AAIA,SAAKhB,gBAAL;AACD;AAlEM,CAAT","file":"KeyboardControls.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n  extends: cc.Component,\n\n  properties: {},\n\n  setInputControls: function() {\n    const self = this;\n    // add keyboard event listener\n    // When there is a key being pressed down, judge if it's the designated directional button and set up acceleration in the corresponding direction\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function(event) {\n      switch (event.keyCode) {\n        case cc.macro.KEY.w:\n          self.activeDirection.dPjY = +1.0;\n          break;\n        case cc.macro.KEY.s:\n          self.activeDirection.dPjY = -1.0;\n          break;\n        case cc.macro.KEY.a:\n          self.activeDirection.dPjX = -2.0;\n          break;\n        case cc.macro.KEY.d:\n          self.activeDirection.dPjX = +2.0;\n          break;\n        default:\n          break;\n      }\n    }, self.node);\n\n    // when releasing the button, stop acceleration in this direction\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function(event) {\n      switch (event.keyCode) {\n        case cc.macro.KEY.w:\n          if (+1.0 == self.activeDirection.dPjY) {\n            self.activeDirection.dPjY = 0.0;\n          }\n          break;\n        case cc.macro.KEY.s:\n          if (-1.0 == self.activeDirection.dPjY) {\n            self.activeDirection.dPjY = 0.0;\n          }\n          break;\n        case cc.macro.KEY.a:\n          if (-2.0 == self.activeDirection.dPjX) {\n            self.activeDirection.dPjX = 0.0;\n          }\n          break;\n        case cc.macro.KEY.d:\n          if (+2.0 == self.activeDirection.dPjX) {\n            self.activeDirection.dPjX = 0.0;\n          }\n          break;\n        default:\n          break;\n      }\n    }, self.node);\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    // Properties deliberately hidden from GUI panel.\n    this.activeDirection = {\n      dPjY: 0.0,\n      dPjX: 0.0\n    };\n    this.setInputControls();\n  }\n});\n\n"]}