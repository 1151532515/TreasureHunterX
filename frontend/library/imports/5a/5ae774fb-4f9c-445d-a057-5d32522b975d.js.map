{"version":3,"sources":["../../../../assets/scripts/assets/scripts/ResultPanel.js"],"names":["i18n","require","init","window","language","cc","Class","extends","Component","properties","onCloseDelegate","type","Object","default","onAgainClicked","winnerPanel","Node","loserPanel","resultCompareNode","onLoad","resultPanelNode","node","againButtonNode","getChildByName","homeButtonNode","againBtnOnClick","evt","onClose","homeBtnOnClick","closeWSConnection","director","loadScene","showPlayerInfo","players","winnerNameNode","loserNameNode","compareProgressNode","winnerInfo","loserInfo","playerId","playerInfo","score","getComponent","Label","string","constants","PLAYER_NAME","joinIndex","progressComp","ProgressBar","winnerScore","parseInt","loserScore","ratio","Math","abs","progress","plistDir","loader","loadRes","SpriteAtlas","err","altas","warn","winnerAvatar","getSpriteFrame","loserAvatar","Sprite","spriteFrame","showRibbon","ribbonNode","selfPlayerInfo","JSON","parse","sys","localStorage","selfPlayer","texture","id","SpriteFrame","console","log","parent","removeChild"],"mappings":"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","file":"ResultPanel.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\ncc.Class({\n\n  extends: cc.Component,\n\n  properties: {\n    onCloseDelegate: {\n      type: cc.Object,\n      default: null\n    },\n    onAgainClicked: {\n      type: cc.Object,\n      default: null\n    },\n    winnerPanel: {\n      type: cc.Node,\n      default: null\n    },\n    loserPanel: {\n      type: cc.Node,\n      default: null\n    },\n    resultCompareNode: {\n      type: cc.Node,\n      default: null\n    }\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    const resultPanelNode = this.node;\n    const againButtonNode = resultPanelNode.getChildByName(\"againBtn\");  \n    const homeButtonNode = resultPanelNode.getChildByName(\"homeBtn\");  \n  },\n\n  againBtnOnClick(evt) {\n    this.onClose();\n    if (!this.onAgainClicked) return;\n    this.onAgainClicked();\n  },\n\n  homeBtnOnClick(evt) {\n    window.closeWSConnection();\n    cc.director.loadScene('login');\n  },\n\n  showPlayerInfo(players) {\n    const resultPanelNode = this.node;\n    const winnerNameNode = resultPanelNode.getChildByName(\"winnerName\");\n    const loserNameNode = resultPanelNode.getChildByName(\"loserName\");\n    const resultCompareNode = this.resultCompareNode;\n    const compareProgressNode = resultCompareNode.getChildByName(\"progressbar\");\n    let winnerInfo = null;\n    let loserInfo = null;\n    \n    for(let playerId in players) {\n      const playerInfo = players[playerId];\n      if(!winnerInfo) {\n        winnerInfo =  playerInfo; \n        continue;\n      }\n      if(playerInfo.score >= winnerInfo.score) {\n        loserInfo = winnerInfo;\n        winnerInfo = playerInfo;\n      }else {\n        loserInfo = playerInfo;\n      }\n    }\n    //TODO Hardecode the name\n    winnerNameNode.getComponent(cc.Label).string = constants.PLAYER_NAME[winnerInfo.joinIndex];\n    loserNameNode.getComponent(cc.Label).string = constants.PLAYER_NAME[loserInfo.joinIndex];\n  \n    const progressComp = compareProgressNode.getComponent(cc.ProgressBar);\n    const winnerScore = parseInt(winnerInfo.score);\n    const loserScore = parseInt(loserInfo.score); \n    let ratio = 0.5; \n    if(winnerScore != loserScore){\n      ratio = (loserScore * winnerScore <= 0) ? 1 \n              : Math.abs(winnerScore) / Math.abs((loserScore + winnerScore));\n    }\n    progressComp.progress = ratio; \n    \n    resultCompareNode.getChildByName(\"winnerScore\").getComponent(cc.Label).string = winnerScore;\n    resultCompareNode.getChildByName(\"loserScore\").getComponent(cc.Label).string = loserScore;\n    \n   const plistDir = \"textures/StatusBar\";\n\n   cc.loader.loadRes(plistDir, cc.SpriteAtlas, function (err, altas) {\n    if(err){\n      cc.warn(err);\n      return;\n    }\n    //hardecode avatart by joinIndex\n    let winnerAvatar = altas.getSpriteFrame(winnerInfo.joinIndex == 2 ? \"BlueAvatar\" : \"RedAvatar\")\n    let loserAvatar = altas.getSpriteFrame(loserInfo.joinIndex == 2 ? \"BlueAvatar\" : \"RedAvatar\")\n    resultPanelNode.getChildByName(\"winnerPortrait\").getComponent(cc.Sprite).spriteFrame = winnerAvatar;\n    resultPanelNode.getChildByName(\"loserPortrait\").getComponent(cc.Sprite).spriteFrame = loserAvatar;\n   });\n\n   this.showRibbon(winnerInfo, resultPanelNode.getChildByName(\"ribbon\"));  \n  },\n \n  showRibbon(winnerInfo, ribbonNode) {\n    const selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n    const texture = (selfPlayerInfo.playerId == winnerInfo.id) ? \"textures/resultPanel/WinRibbon\" : \"textures/resultPanel/loseRibbon\";\n    cc.loader.loadRes(texture, cc.SpriteFrame, function (err, spriteFrame) {\n      if(err) {\n        console.log(err);\n        return;\n      }\n      ribbonNode.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n    });\n\n  },\n  \n  onClose(evt) {\n    if (this.node.parent) {\n      this.node.parent.removeChild(this.node); \n    }\n    if (!this.onCloseDelegate) { \n      return;\n    }\n    this.onCloseDelegate();\n  }\n});\n"]}