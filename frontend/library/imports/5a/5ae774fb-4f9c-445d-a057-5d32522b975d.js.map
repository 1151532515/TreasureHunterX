{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\ResultPanel.js"],"names":["i18n","require","init","window","language","cc","Class","extends","Component","properties","onCloseDelegate","type","Object","default","winnerPanel","Node","loserPanel","resultCompareNode","onLoad","resultPanelNode","node","againButtonNode","getChildByName","homeButtonNode","againBtnOnClick","evt","closeWSConnection","clearBoundRoomIdInBothVolatileAndPersistentStorage","sys","localStorage","removeItem","director","loadScene","homeBtnOnClick","showPlayerInfo","players","winnerNameNode","loserNameNode","compareProgressNode","winnerInfo","loserInfo","playerId","playerInfo","score","getComponent","Label","string","name","progressComp","ProgressBar","winnerScore","parseInt","loserScore","ratio","Math","abs","progress","showRibbon","ribbonNode","selfPlayerInfo","JSON","parse","selfPlayer","texture","id","loader","loadRes","SpriteFrame","err","spriteFrame","console","log","Sprite","onClose","active"],"mappings":"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","file":"ResultPanel.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const i18n = require('LanguageData');\r\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\r\ncc.Class({\r\n\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    onCloseDelegate: {\r\n      type: cc.Object,\r\n      default: null\r\n    },\r\n    winnerPanel: {\r\n      type: cc.Node,\r\n      default: null\r\n    },\r\n    loserPanel: {\r\n      type: cc.Node,\r\n      default: null\r\n    },\r\n    resultCompareNode: {\r\n      type: cc.Node,\r\n      default: null\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    const resultPanelNode = this.node;\r\n    const againButtonNode = resultPanelNode.getChildByName(\"againBtn\");  \r\n    const homeButtonNode = resultPanelNode.getChildByName(\"homeBtn\");  \r\n  },\r\n\r\n  againBtnOnClick(evt) {\r\n  //TODO: 目前还没有实现rejoin the room，先跳转到login scene。\r\n      window.closeWSConnection();\r\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\r\n      cc.sys.localStorage.removeItem('selfPlayer');\r\n      cc.director.loadScene('login');\r\n  },\r\n\r\n  homeBtnOnClick(evt) {\r\n  //TODO: 目前没有home scene和相关业务逻辑，先跳转到login scene。\r\n      window.closeWSConnection();\r\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\r\n      cc.sys.localStorage.removeItem('selfPlayer');\r\n      cc.director.loadScene('login');\r\n  },\r\n\r\n  showPlayerInfo(players) {\r\n    const resultPanelNode = this.node;\r\n    const winnerNameNode = resultPanelNode.getChildByName(\"winnerName\");\r\n    const loserNameNode = resultPanelNode.getChildByName(\"loserName\");\r\n    const resultCompareNode = this.resultCompareNode;\r\n    const compareProgressNode = resultCompareNode.getChildByName(\"progressbar\");\r\n    let winnerInfo = null;\r\n    let loserInfo = null;\r\n    \r\n    for(let playerId in players) {\r\n      const playerInfo = players[playerId];\r\n      if(!winnerInfo) {\r\n        winnerInfo =  playerInfo; \r\n        continue;\r\n      }\r\n      if(playerInfo.score >= winnerInfo.score) {\r\n        loserInfo = winnerInfo;\r\n        winnerInfo = playerInfo;\r\n      }else {\r\n        loserInfo = playerInfo;\r\n      }\r\n    }\r\n    winnerNameNode.getComponent(cc.Label).string = winnerInfo.name;\r\n    loserNameNode.getComponent(cc.Label).string = loserInfo.name;\r\n  \r\n    const progressComp = compareProgressNode.getComponent(cc.ProgressBar);\r\n    const winnerScore = parseInt(winnerInfo.score);\r\n    const loserScore = parseInt(loserInfo.score); \r\n    let ratio = 0.5; \r\n    if(winnerScore != loserScore){\r\n      ratio = (loserScore * winnerScore <= 0) ? 1 \r\n              : Math.abs(winnerScore) / Math.abs((loserScore + winnerScore));\r\n    }\r\n    progressComp.progress = ratio; \r\n    \r\n    resultCompareNode.getChildByName(\"winnerScore\").getComponent(cc.Label).string = winnerScore;\r\n    resultCompareNode.getChildByName(\"loserScore\").getComponent(cc.Label).string = loserScore;\r\n    \r\n    this.showRibbon(winnerInfo, resultPanelNode.getChildByName(\"ribbon\"));  \r\n  },\r\n \r\n  showRibbon(winnerInfo, ribbonNode) {\r\n    const selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\r\n    const texture = (selfPlayerInfo.playerId == winnerInfo.id) ? \"textures/resultPanel/WinRibbon\" : \"textures/resultPanel/loseRibbon\";\r\n    cc.loader.loadRes(texture, cc.SpriteFrame, function (err, spriteFrame) {\r\n      if(err) {\r\n        console.log(err);\r\n        return;\r\n      }\r\n      ribbonNode.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n    });\r\n  },\r\n  \r\n  \r\n  onClose(evt) {\r\n    this.node.active = false;\r\n    if(!this.onCloseDelegate) \r\n      return;\r\n    this.onCloseDelegate();\r\n  }\r\n});\r\n"]}