{"version":3,"sources":["../../../../assets/scripts/assets/scripts/TouchEventsManager.js"],"names":["window","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","cc","Class","extends","Component","properties","stickhead","default","type","Node","base","joyStickEps","Float","magicLeanLowerBound","magicLeanUpperBound","pollerFps","Integer","linearScaleFacBase","minScale","maxScale","maxMovingBufferLength","zoomingScaleFacBase","zoomingSpeedBase","linearSpeedBase","canvasNode","mapNode","linearMovingEps","scaleByEps","start","onLoad","cachedStickHeadPosition","v2","activeDirection","dPjX","dPjY","maxHeadDistance","width","_initTouchEvent","_cachedMapNodePosTarget","_cachedZoomRawTarget","mapScriptIns","getComponent","initialized","_startMainLoop","onDestroy","clearInterval","mainLoopTimer","self","zoomingSpeed","setInterval","_inputControlEnabled","length","shift","getNumberOfRunningActions","nextMapNodePosTarget","linearSpeed","finalDiffVec","pos","sub","position","finalDiffVecMag","mag","durationSeconds","log","bufferedTargetPos","x","y","runAction","sequence","moveTo","callFunc","_isMapOverMoved","setPosition","processed","setScale","scale","touchStartPosInMapNode","inTouchPoints","Map","inMultiTouch","on","EventType","TOUCH_START","event","_touchStartEvent","TOUCH_MOVE","_touchMoveEvent","TOUCH_END","_touchEndEvent","TOUCH_CANCEL","_touches","touch","set","_id","size","convertToNodeSpaceAR","currentTouch","mapTargetPos","virtualPlayerPos","tileCollisionManager","isOutOfMapNode","state","has","diffVec","_point","_startPoint","scaleFactor","getScale","diffVecScaled","mul","distance","overMoved","ratio","firstTouch","secondTouch","startMagnitude","currentMagnitude","scaleBy","Math","abs","targetScale","timestamp","Date","now","diffVecMag","delete","_touchCancelEvent","update","dt","eps","criticalRatio"],"mappings":"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","file":"TouchEventsManager.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["window.ALL_MAP_STATES = {\n\n  VISUAL: 0, // For free dragging & zooming.\n\n  EDITING_BELONGING: 1,\n\n};\n\ncc.Class({\n  extends: cc.Component,\n  properties: {\n    // For joystick begins.\n    stickhead: {\n      default: null,\n      type: cc.Node\n    },\n    base: {\n      default: null,\n      type: cc.Node\n    },\n    joyStickEps: {\n      default: 0.10,\n      type: cc.Float\n    },\n    magicLeanLowerBound: {\n      default: 0.414, // Tangent of (PI/8).\n      type: cc.Float\n    },\n    magicLeanUpperBound: {\n      default: 2.414, // Tangent of (3*PI/8).\n      type: cc.Float\n    },\n    // For joystick ends.\n    pollerFps: {\n      default: 10,\n      type: cc.Integer\n    },\n    linearScaleFacBase: {\n      default: 1.00,\n      type: cc.Float\n    },\n    minScale: {\n      default: 1.00,\n      type: cc.Float\n    },\n    maxScale: {\n      default: 2.50,\n      type: cc.Float\n    },\n    maxMovingBufferLength: {\n      default: 1,\n      type: cc.Integer\n    },\n    zoomingScaleFacBase: {\n      default: 0.10,\n      type: cc.Float\n    },\n    zoomingSpeedBase: {\n      default: 4.0,\n      type: cc.Float\n    },\n    linearSpeedBase: {\n      default: 320.0,\n      type: cc.Float\n    },\n    canvasNode: {\n      default: null,\n      type: cc.Node\n    },\n    mapNode: {\n      default: null,\n      type: cc.Node\n    },\n    linearMovingEps: {\n      default: 0.10,\n      type: cc.Float\n    },\n    scaleByEps: {\n      default: 0.0375,\n      type: cc.Float\n    },\n  },\n\n  start() {},\n\n  onLoad() {\n    this.cachedStickHeadPosition = cc.v2(0.0, 0.0);\n    this.activeDirection = {\n      dPjX: 0.0,\n      dPjY: 0.0\n    };\n    this.maxHeadDistance = (0.5 * this.base.width);\n\n    this._initTouchEvent();\n    this._cachedMapNodePosTarget = [];\n    this._cachedZoomRawTarget = null;\n\n    this.mapScriptIns = this.mapNode.getComponent(\"Map\");\n    this.initialized = true;\n\n    this._startMainLoop();\n  },\n\n  onDestroy() {\n    clearInterval(this.mainLoopTimer); \n  },\n\n  _startMainLoop() {\n    const self = this;\n    const linearSpeedBase = self.linearSpeedBase;\n    const zoomingSpeed = self.zoomingSpeedBase;\n\n    self.mainLoopTimer = setInterval(() => {\n      if (false == self.mapScriptIns._inputControlEnabled) return;\n      if (null != self._cachedMapNodePosTarget) {\n        while (self.maxMovingBufferLength < self._cachedMapNodePosTarget.length) {\n          self._cachedMapNodePosTarget.shift();\n        }\n        if (0 < self._cachedMapNodePosTarget.length && 0 == self.mapNode.getNumberOfRunningActions()) {\n          const nextMapNodePosTarget = self._cachedMapNodePosTarget.shift();\n          const linearSpeed = linearSpeedBase;\n          const finalDiffVec = nextMapNodePosTarget.pos.sub(self.mapNode.position);\n          const finalDiffVecMag = finalDiffVec.mag();\n          if (self.linearMovingEps > finalDiffVecMag) {\n            // Jittering.\n            // cc.log(\"Map node moving by finalDiffVecMag == %s is just jittering.\", finalDiffVecMag);\n            return;\n          }\n          const durationSeconds = finalDiffVecMag / linearSpeed;\n          cc.log(\"Map node moving to %o in %s/%s == %s seconds.\", nextMapNodePosTarget.pos, finalDiffVecMag, linearSpeed, durationSeconds);\n          const bufferedTargetPos = cc.v2(nextMapNodePosTarget.pos.x, nextMapNodePosTarget.pos.y);\n          self.mapNode.runAction(cc.sequence(\n            cc.moveTo(durationSeconds, bufferedTargetPos),\n            cc.callFunc(() => {\n              if (self._isMapOverMoved(self.mapNode.position)) {\n                self.mapNode.setPosition(bufferedTargetPos);\n              }\n            }, self)\n          ));\n        }\n      }\n      if (null != self._cachedZoomRawTarget && false == self._cachedZoomRawTarget.processed) {\n        cc.log(`Processing self._cachedZoomRawTarget == ${self._cachedZoomRawTarget}`);\n        self._cachedZoomRawTarget.processed = true;\n        self.canvasNode.setScale(self._cachedZoomRawTarget.scale);\n      }\n    }, 1000 / self.pollerFps);\n  },\n\n  _initTouchEvent() {\n    const self = this;\n    self.touchStartPosInMapNode = null;\n    self.inTouchPoints = new Map();\n    self.inMultiTouch = false;\n\n    self.canvasNode.on(cc.Node.EventType.TOUCH_START, function(event) {\n      self._touchStartEvent(event);\n    });\n    self.canvasNode.on(cc.Node.EventType.TOUCH_MOVE, function(event) {\n      self._touchMoveEvent(event);\n    });\n    self.canvasNode.on(cc.Node.EventType.TOUCH_END, function(event) {\n      self._touchEndEvent(event);\n    });\n    self.canvasNode.on(cc.Node.EventType.TOUCH_CANCEL, function(event) {\n      self._touchEndEvent(event);\n    });\n  },\n\n  _touchStartEvent(event) {\n    for (let touch of event._touches) {\n      this.inTouchPoints.set(touch._id, touch);\n    }\n    if (1 < this.inTouchPoints.size) {\n      this.inMultiTouch = true;\n    }\n    \n    if (!this.inMultiTouch) {\n      this.touchStartPosInMapNode = this.mapNode.convertToNodeSpaceAR(event.currentTouch);\n    }\n  },\n\n  _isMapOverMoved(mapTargetPos) {\n    const virtualPlayerPos = cc.v2(-mapTargetPos.x, -mapTargetPos.y);\n    return tileCollisionManager.isOutOfMapNode(this.mapNode, virtualPlayerPos);\n  },\n\n  _touchMoveEvent(event) {\n    if (ALL_MAP_STATES.VISUAL != this.mapScriptIns.state) {\n      return;\n    }\n    const linearScaleFacBase = this.linearScaleFacBase;\n    const zoomingScaleFacBase = this.zoomingScaleFacBase;\n    if (!this.inMultiTouch) {\n      if (!this.inTouchPoints.has(event.currentTouch._id)) {\n        return;\n      }\n      const diffVec = event.currentTouch._point.sub(event.currentTouch._startPoint);\n      const scaleFactor = linearScaleFacBase / this.canvasNode.getScale();\n      const diffVecScaled = (diffVec).mul(scaleFactor);\n      const distance = diffVecScaled.mag();\n      const overMoved = (distance > this.maxHeadDistance);\n      if (overMoved) {\n        const ratio = (this.maxHeadDistance / distance);\n        this.cachedStickHeadPosition = diffVecScaled.mul(ratio);\n      } else {\n        const ratio = (distance / this.maxHeadDistance);\n        this.cachedStickHeadPosition = diffVecScaled.mul(ratio);\n      }\n    } else {\n      if (2 == event._touches.length) {\n        const firstTouch = event._touches[0];\n        const secondTouch = event._touches[1];\n\n        const startMagnitude = firstTouch._startPoint.sub(secondTouch._startPoint).mag();\n        const currentMagnitude = firstTouch._point.sub(secondTouch._point).mag();\n\n        let scaleBy = (currentMagnitude / startMagnitude);\n        scaleBy = 1 + (scaleBy - 1) * zoomingScaleFacBase;\n        if (1 < scaleBy && Math.abs(scaleBy - 1) < this.scaleByEps) {\n          // Jitterring.\n          cc.log(`ScaleBy == ${scaleBy} is just jittering.`);\n          return;\n        }\n        if (1 > scaleBy && Math.abs(scaleBy - 1) < 0.5 * this.scaleByEps) {\n          // Jitterring.\n          cc.log(`ScaleBy == ${scaleBy} is just jittering.`);\n          return;\n        }\n        const targetScale = this.canvasNode.getScale() * scaleBy;\n        if (this.minScale > targetScale || targetScale > this.maxScale) {\n          return;\n        }\n        this._cachedZoomRawTarget = {\n          scale: targetScale,\n          timestamp: Date.now(),\n          processed: false\n        };\n      }\n    }\n  },\n\n  _touchEndEvent(event) {\n    do {\n      if (this.inMultiTouch) {\n        break;\n      }\n      if (!this.inTouchPoints.has(event.currentTouch._id)) {\n        break;\n      }\n      const diffVec = event.currentTouch._point.sub(event.currentTouch._startPoint);\n      const diffVecMag = diffVec.mag();\n      if (this.linearMovingEps <= diffVecMag) {\n        break;\n      }\n      // Only triggers map-state-switch when `diffVecMag` is sufficiently small.\n\n      if (ALL_MAP_STATES.VISUAL != this.mapScriptIns.state) {\n        break;\n      }\n\n      // TODO: Handle single-finger-click event.\n    } while (false);\n    this.touchStartPosInMapNode = null;\n    this.cachedStickHeadPosition = cc.v2(0.0, 0.0);\n    for (let touch of event._touches) {\n      if(touch){\n        this.inTouchPoints.delete(touch._id);\n      }\n    }\n    if (0 == this.inTouchPoints.size) {\n      this.inMultiTouch = false;\n    }\n  },\n\n  _touchCancelEvent(event) {},\n\n  update(dt) {\n    if (this.inMultiTouch) return;\n    if (true != this.initialized) return;\n    this.stickhead.setPosition(this.cachedStickHeadPosition);\n    const eps = this.joyStickEps;\n\n    if (Math.abs(this.cachedStickHeadPosition.x) < eps && Math.abs(this.cachedStickHeadPosition.y) < eps) {\n      this.activeDirection.dPjX = 0;\n      this.activeDirection.dPjY = 0;\n      return;\n    }\n\n    // Discretization of 8 projected planar directions.\n    if (Math.abs(this.cachedStickHeadPosition.x) < eps) {\n      this.activeDirection.dPjX = 0;\n      this.activeDirection.dPjY = this.cachedStickHeadPosition.y > 0 ? +1 : -1;\n    } else if (Math.abs(this.cachedStickHeadPosition.y) < eps) {\n      this.activeDirection.dPjX = this.cachedStickHeadPosition.x > 0 ? +2 : -2;\n      this.activeDirection.dPjY = 0;\n    } else {\n      const criticalRatio = this.cachedStickHeadPosition.y / this.cachedStickHeadPosition.x;\n      if (criticalRatio > this.magicLeanLowerBound && criticalRatio < this.magicLeanUpperBound) {\n        this.activeDirection.dPjX = this.cachedStickHeadPosition.x > 0 ? +2 : -2;\n        this.activeDirection.dPjY = this.cachedStickHeadPosition.x > 0 ? +1 : -1;\n      } else if (criticalRatio > -this.magicLeanUpperBound && criticalRatio < -this.magicLeanLowerBound) {\n        this.activeDirection.dPjX = this.cachedStickHeadPosition.x > 0 ? +2 : -2;\n        this.activeDirection.dPjY = this.cachedStickHeadPosition.x > 0 ? -1 : +1;\n      } else {\n        if (Math.abs(criticalRatio) < 1) {\n          this.activeDirection.dPjX = this.cachedStickHeadPosition.x > 0 ? +2 : -2;\n          this.activeDirection.dPjY = 0;\n        } else {\n          this.activeDirection.dPjX = 0;\n          this.activeDirection.dPjY = this.cachedStickHeadPosition.y > 0 ? +1 : -1;\n        }\n      }\n    }\n  }\n});\n"]}