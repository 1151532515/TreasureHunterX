{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\TouchEventsManager.js"],"names":["cc","Class","extends","Component","properties","translationListenerNode","default","type","Node","zoomingListenerNode","stickhead","base","joyStickEps","Float","magicLeanLowerBound","magicLeanUpperBound","pollerFps","Integer","linearScaleFacBase","minScale","maxScale","maxMovingBufferLength","zoomingScaleFacBase","zoomingSpeedBase","linearSpeedBase","canvasNode","mapNode","linearMovingEps","scaleByEps","start","onLoad","cachedStickHeadPosition","v2","parent","mainCameraNode","getChildByName","mainCamera","getComponent","Camera","activeDirection","dx","dy","maxHeadDistance","width","_initTouchEvent","_cachedMapNodePosTarget","_cachedZoomRawTarget","mapScriptIns","initialized","_startMainLoop","onDestroy","clearInterval","mainLoopTimer","self","zoomingSpeed","setInterval","_inputControlEnabled","length","shift","getNumberOfRunningActions","nextMapNodePosTarget","linearSpeed","finalDiffVec","pos","sub","position","finalDiffVecMag","mag","durationSeconds","log","bufferedTargetPos","x","y","runAction","sequence","moveTo","callFunc","_isMapOverMoved","setPosition","processed","setScale","scale","on","EventType","TOUCH_START","event","_touchStartEvent","TOUCH_MOVE","_translationEvent","TOUCH_END","_touchEndEvent","TOUCH_CANCEL","inTouchPoints","Map","_zoomingEvent","mapTargetPos","virtualPlayerPos","tileCollisionManager","isOutOfMapNode","theListenerNode","target","_touches","touch","set","_id","ALL_MAP_STATES","VISUAL","state","size","has","currentTouch","diffVec","_point","_startPoint","distance","overMoved","ratio","mul","firstTouch","secondTouch","startMagnitude","currentMagnitude","scaleBy","Math","abs","targetScale","zoomRatio","children","child","diffVecMag","delete","_touchCancelEvent","update","dt","inMultiTouch","eps","cachedStickHeadPositionMag","normalizedDir","discretizeDirection","continuousDx","continuousDy","ret","criticalRatio"],"mappings":"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","file":"TouchEventsManager.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["\r\ncc.Class({\r\n  extends: cc.Component,\r\n  properties: {\r\n    // For joystick begins.\r\n    translationListenerNode: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    zoomingListenerNode: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    stickhead: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    base: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    joyStickEps: {\r\n      default: 0.10,\r\n      type: cc.Float\r\n    },\r\n    magicLeanLowerBound: {\r\n      default: 0.414, // Tangent of (PI/8).\r\n      type: cc.Float\r\n    },\r\n    magicLeanUpperBound: {\r\n      default: 2.414, // Tangent of (3*PI/8).\r\n      type: cc.Float\r\n    },\r\n    // For joystick ends.\r\n    pollerFps: {\r\n      default: 10,\r\n      type: cc.Integer\r\n    },\r\n    linearScaleFacBase: {\r\n      default: 1.00,\r\n      type: cc.Float\r\n    },\r\n    minScale: {\r\n      default: 1.00,\r\n      type: cc.Float\r\n    },\r\n    maxScale: {\r\n      default: 2.50,\r\n      type: cc.Float\r\n    },\r\n    maxMovingBufferLength: {\r\n      default: 1,\r\n      type: cc.Integer\r\n    },\r\n    zoomingScaleFacBase: {\r\n      default: 0.10,\r\n      type: cc.Float\r\n    },\r\n    zoomingSpeedBase: {\r\n      default: 4.0,\r\n      type: cc.Float\r\n    },\r\n    linearSpeedBase: {\r\n      default: 320.0,\r\n      type: cc.Float\r\n    },\r\n    canvasNode: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    mapNode: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    linearMovingEps: {\r\n      default: 0.10,\r\n      type: cc.Float\r\n    },\r\n    scaleByEps: {\r\n      default: 0.0375,\r\n      type: cc.Float\r\n    },\r\n  },\r\n\r\n  start() {},\r\n\r\n  onLoad() {\r\n    this.cachedStickHeadPosition = cc.v2(0.0, 0.0);\r\n    this.canvasNode = this.mapNode.parent;\r\n    this.mainCameraNode = this.canvasNode.getChildByName(\"Main Camera\"); // Cannot drag and assign the `mainCameraNode` from CocosCreator EDITOR directly, otherwise it'll cause an infinite loading time, till v2.1.0.\r\n    this.mainCamera = this.mainCameraNode.getComponent(cc.Camera);\r\n    this.activeDirection = {\r\n      dx: 0.0,\r\n      dy: 0.0\r\n    };\r\n    this.maxHeadDistance = (0.5 * this.base.width);\r\n\r\n    this._initTouchEvent();\r\n    this._cachedMapNodePosTarget = [];\r\n    this._cachedZoomRawTarget = null;\r\n\r\n    this.mapScriptIns = this.mapNode.getComponent(\"Map\");\r\n    this.initialized = true;\r\n\r\n    this._startMainLoop();\r\n  },\r\n\r\n  onDestroy() {\r\n    clearInterval(this.mainLoopTimer); \r\n  },\r\n\r\n  _startMainLoop() {\r\n    const self = this;\r\n    const linearSpeedBase = self.linearSpeedBase;\r\n    const zoomingSpeed = self.zoomingSpeedBase;\r\n\r\n    self.mainLoopTimer = setInterval(() => {\r\n      if (false == self.mapScriptIns._inputControlEnabled) return;\r\n      if (null != self._cachedMapNodePosTarget) {\r\n        while (self.maxMovingBufferLength < self._cachedMapNodePosTarget.length) {\r\n          self._cachedMapNodePosTarget.shift();\r\n        }\r\n        if (0 < self._cachedMapNodePosTarget.length && 0 == self.mapNode.getNumberOfRunningActions()) {\r\n          const nextMapNodePosTarget = self._cachedMapNodePosTarget.shift();\r\n          const linearSpeed = linearSpeedBase;\r\n          const finalDiffVec = nextMapNodePosTarget.pos.sub(self.mapNode.position);\r\n          const finalDiffVecMag = finalDiffVec.mag();\r\n          if (self.linearMovingEps > finalDiffVecMag) {\r\n            // Jittering.\r\n            // cc.log(\"Map node moving by finalDiffVecMag == %s is just jittering.\", finalDiffVecMag);\r\n            return;\r\n          }\r\n          const durationSeconds = finalDiffVecMag / linearSpeed;\r\n          cc.log(\"Map node moving to %o in %s/%s == %s seconds.\", nextMapNodePosTarget.pos, finalDiffVecMag, linearSpeed, durationSeconds);\r\n          const bufferedTargetPos = cc.v2(nextMapNodePosTarget.pos.x, nextMapNodePosTarget.pos.y);\r\n          self.mapNode.runAction(cc.sequence(\r\n            cc.moveTo(durationSeconds, bufferedTargetPos),\r\n            cc.callFunc(() => {\r\n              if (self._isMapOverMoved(self.mapNode.position)) {\r\n                self.mapNode.setPosition(bufferedTargetPos);\r\n              }\r\n            }, self)\r\n          ));\r\n        }\r\n      }\r\n      if (null != self._cachedZoomRawTarget && false == self._cachedZoomRawTarget.processed) {\r\n        cc.log(`Processing self._cachedZoomRawTarget == ${self._cachedZoomRawTarget}`);\r\n        self._cachedZoomRawTarget.processed = true;\r\n        self.mapNode.setScale(self._cachedZoomRawTarget.scale);\r\n      }\r\n    }, 1000 / self.pollerFps);\r\n  },\r\n\r\n  _initTouchEvent() {\r\n    const self = this;\r\n    const translationListenerNode = (self.translationListenerNode ? self.translationListenerNode : self.mapNode);  \r\n    const zoomingListenerNode = (self.zoomingListenerNode ? self.zoomingListenerNode : self.mapNode); \r\n\r\n    translationListenerNode.on(cc.Node.EventType.TOUCH_START, function(event) {\r\n      self._touchStartEvent(event);\r\n    });\r\n    translationListenerNode.on(cc.Node.EventType.TOUCH_MOVE, function(event) {\r\n      self._translationEvent(event);\r\n    });\r\n    translationListenerNode.on(cc.Node.EventType.TOUCH_END, function(event) {\r\n      self._touchEndEvent(event);\r\n    });\r\n    translationListenerNode.on(cc.Node.EventType.TOUCH_CANCEL, function(event) {\r\n      self._touchEndEvent(event);\r\n    });\r\n    translationListenerNode.inTouchPoints = new Map(); \r\n\r\n    zoomingListenerNode.on(cc.Node.EventType.TOUCH_START, function(event) {\r\n      self._touchStartEvent(event);\r\n    });\r\n    zoomingListenerNode.on(cc.Node.EventType.TOUCH_MOVE, function(event) {\r\n      self._zoomingEvent(event);\r\n    });\r\n    zoomingListenerNode.on(cc.Node.EventType.TOUCH_END, function(event) {\r\n      self._touchEndEvent(event);\r\n    });\r\n    zoomingListenerNode.on(cc.Node.EventType.TOUCH_CANCEL, function(event) {\r\n      self._touchEndEvent(event);\r\n    });\r\n    zoomingListenerNode.inTouchPoints = new Map(); \r\n  },\r\n\r\n  _isMapOverMoved(mapTargetPos) {\r\n    const virtualPlayerPos = cc.v2(-mapTargetPos.x, -mapTargetPos.y);\r\n    return tileCollisionManager.isOutOfMapNode(this.mapNode, virtualPlayerPos);\r\n  },\r\n\r\n  _touchStartEvent(event) {\r\n    const theListenerNode = event.target; \r\n    for (let touch of event._touches) {\r\n      theListenerNode.inTouchPoints.set(touch._id, touch);\r\n    }\r\n  },\r\n\r\n  _translationEvent(event) {\r\n    if (ALL_MAP_STATES.VISUAL != this.mapScriptIns.state) {\r\n      return;\r\n    }\r\n    const theListenerNode = event.target; \r\n    const linearScaleFacBase = this.linearScaleFacBase; // Not used yet.\r\n    if (1 != theListenerNode.inTouchPoints.size) {\r\n      return;\r\n    }\r\n    if (!theListenerNode.inTouchPoints.has(event.currentTouch._id))  {\r\n      return;\r\n    }\r\n    const diffVec = event.currentTouch._point.sub(event.currentTouch._startPoint);\r\n    const distance = diffVec.mag();\r\n    const overMoved = (distance > this.maxHeadDistance);\r\n    if (overMoved) {\r\n      const ratio = (this.maxHeadDistance / distance);\r\n      this.cachedStickHeadPosition = diffVec.mul(ratio);\r\n    } else {\r\n      const ratio = (distance / this.maxHeadDistance);\r\n      this.cachedStickHeadPosition = diffVec.mul(ratio);\r\n    }\r\n  },\r\n\r\n  _zoomingEvent(event) {\r\n    if (ALL_MAP_STATES.VISUAL != this.mapScriptIns.state) {\r\n      return;\r\n    }\r\n    const theListenerNode = event.target; \r\n    if (2 != theListenerNode.inTouchPoints.size) {\r\n       return;\r\n    }\r\n    if (2 == event._touches.length) {\r\n      const firstTouch = event._touches[0];\r\n      const secondTouch = event._touches[1];\r\n\r\n      const startMagnitude = firstTouch._startPoint.sub(secondTouch._startPoint).mag();\r\n      const currentMagnitude = firstTouch._point.sub(secondTouch._point).mag();\r\n\r\n      let scaleBy = (currentMagnitude / startMagnitude);\r\n      scaleBy = 1 + (scaleBy - 1) * this.zoomingScaleFacBase;\r\n      if (1 < scaleBy && Math.abs(scaleBy - 1) < this.scaleByEps) {\r\n        // Jitterring.\r\n        cc.log(`ScaleBy == ${scaleBy} is just jittering.`);\r\n        return;\r\n      }\r\n      if (1 > scaleBy && Math.abs(scaleBy - 1) < 0.5 * this.scaleByEps) {\r\n        // Jitterring.\r\n        cc.log(`ScaleBy == ${scaleBy} is just jittering.`);\r\n        return;\r\n      }\r\n      if (!this.mainCamera) return;\r\n      const targetScale = this.mainCamera.zoomRatio * scaleBy;\r\n      if (this.minScale > targetScale || targetScale > this.maxScale) {\r\n        return;\r\n      }\r\n      this.mainCamera.zoomRatio = targetScale;\r\n      for (let child of this.mainCameraNode.children) {\r\n        child.setScale(1/targetScale); \r\n      }\r\n    }\r\n  },\r\n\r\n  _touchEndEvent(event) {\r\n    const theListenerNode = event.target; \r\n    do {\r\n      if (!theListenerNode.inTouchPoints.has(event.currentTouch._id)) {\r\n        break;\r\n      }\r\n      const diffVec = event.currentTouch._point.sub(event.currentTouch._startPoint);\r\n      const diffVecMag = diffVec.mag();\r\n      if (this.linearMovingEps <= diffVecMag) {\r\n        break;\r\n      }\r\n      // Only triggers map-state-switch when `diffVecMag` is sufficiently small.\r\n\r\n      if (ALL_MAP_STATES.VISUAL != this.mapScriptIns.state) {\r\n        break;\r\n      }\r\n\r\n      // TODO: Handle single-finger-click event.\r\n    } while (false);\r\n    this.cachedStickHeadPosition = cc.v2(0.0, 0.0);\r\n    for (let touch of event._touches) {\r\n      if (touch){\r\n        theListenerNode.inTouchPoints.delete(touch._id);\r\n      }\r\n    }\r\n  },\r\n\r\n  _touchCancelEvent(event) {},\r\n\r\n  update(dt) {\r\n    if (this.inMultiTouch) return;\r\n    if (true != this.initialized) return;\r\n    this.stickhead.setPosition(this.cachedStickHeadPosition);\r\n    const eps = this.joyStickEps;\r\n\r\n    if (Math.abs(this.cachedStickHeadPosition.x) < eps && Math.abs(this.cachedStickHeadPosition.y) < eps) {\r\n      this.activeDirection.dx = 0;\r\n      this.activeDirection.dy = 0;\r\n      return;\r\n    }\r\n\r\n    // TODO: Really normalize the following `normalizedDir`.\r\n    const cachedStickHeadPositionMag = this.cachedStickHeadPosition.mag(); \r\n    const normalizedDir = {\r\n      dx: this.cachedStickHeadPosition.x/cachedStickHeadPositionMag,\r\n      dy: this.cachedStickHeadPosition.y/cachedStickHeadPositionMag,\r\n    }; \r\n    this.activeDirection = normalizedDir;\r\n  },\r\n\r\n  discretizeDirection(continuousDx, continuousDy, eps) {\r\n    let ret = {\r\n      dx: 0,\r\n      dy: 0,\r\n    };\r\n    if (Math.abs(continuousDx) < eps) {\r\n      ret.dx = 0;\r\n      ret.dy = continuousDy > 0 ? +1 : -1;\r\n    } else if (Math.abs(continuousDy) < eps) {\r\n      ret.dx = continuousDx > 0 ? +2 : -2;\r\n      ret.dy = 0;\r\n    } else {\r\n      const criticalRatio = continuousDy / continuousDx;\r\n      if (criticalRatio > this.magicLeanLowerBound && criticalRatio < this.magicLeanUpperBound) {\r\n        ret.dx = continuousDx > 0 ? +2 : -2;\r\n        ret.dy = continuousDx > 0 ? +1 : -1;\r\n      } else if (criticalRatio > -this.magicLeanUpperBound && criticalRatio < -this.magicLeanLowerBound) {\r\n        ret.dx = continuousDx > 0 ? +2 : -2;\r\n        ret.dy = continuousDx > 0 ? -1 : +1;\r\n      } else {\r\n        if (Math.abs(criticalRatio) < 1) {\r\n          ret.dx = continuousDx > 0 ? +2 : -2;\r\n          ret.dy = 0;\r\n        } else {\r\n          ret.dx = 0;\r\n          ret.dy = continuousDy > 0 ? +1 : -1;\r\n        }\r\n      }\r\n    }\r\n    return ret;\r\n  },\r\n});\r\n"]}