{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\TouchEventsManager.js"],"names":["cc","Class","extends","Component","properties","stickhead","default","type","Node","base","joyStickEps","Float","magicLeanLowerBound","magicLeanUpperBound","pollerFps","Integer","linearScaleFacBase","minScale","maxScale","maxMovingBufferLength","zoomingScaleFacBase","zoomingSpeedBase","linearSpeedBase","canvasNode","mapNode","linearMovingEps","scaleByEps","start","onLoad","cachedStickHeadPosition","v2","activeDirection","dx","dy","maxHeadDistance","width","_initTouchEvent","_cachedMapNodePosTarget","_cachedZoomRawTarget","mapScriptIns","getComponent","initialized","_startMainLoop","onDestroy","clearInterval","mainLoopTimer","self","zoomingSpeed","setInterval","_inputControlEnabled","length","shift","getNumberOfRunningActions","nextMapNodePosTarget","linearSpeed","finalDiffVec","pos","sub","position","finalDiffVecMag","mag","durationSeconds","log","bufferedTargetPos","x","y","runAction","sequence","moveTo","callFunc","_isMapOverMoved","setPosition","processed","setScale","scale","touchStartPosInMapNode","inTouchPoints","Map","inMultiTouch","on","EventType","TOUCH_START","event","_touchStartEvent","TOUCH_MOVE","_touchMoveEvent","TOUCH_END","_touchEndEvent","TOUCH_CANCEL","_touches","touch","set","_id","size","convertToNodeSpaceAR","currentTouch","mapTargetPos","virtualPlayerPos","tileCollisionManager","isOutOfMapNode","ALL_MAP_STATES","VISUAL","state","has","diffVec","_point","_startPoint","scaleFactor","diffVecScaled","mul","distance","overMoved","ratio","firstTouch","secondTouch","startMagnitude","currentMagnitude","scaleBy","Math","abs","targetScale","timestamp","Date","now","diffVecMag","delete","_touchCancelEvent","update","dt","eps","cachedStickHeadPositionMag","normalizedDir","discretizeDirection","continuousDx","continuousDy","ret","criticalRatio"],"mappings":"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","file":"TouchEventsManager.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["\r\ncc.Class({\r\n  extends: cc.Component,\r\n  properties: {\r\n    // For joystick begins.\r\n    stickhead: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    base: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    joyStickEps: {\r\n      default: 0.10,\r\n      type: cc.Float\r\n    },\r\n    magicLeanLowerBound: {\r\n      default: 0.414, // Tangent of (PI/8).\r\n      type: cc.Float\r\n    },\r\n    magicLeanUpperBound: {\r\n      default: 2.414, // Tangent of (3*PI/8).\r\n      type: cc.Float\r\n    },\r\n    // For joystick ends.\r\n    pollerFps: {\r\n      default: 10,\r\n      type: cc.Integer\r\n    },\r\n    linearScaleFacBase: {\r\n      default: 1.00,\r\n      type: cc.Float\r\n    },\r\n    minScale: {\r\n      default: 1.00,\r\n      type: cc.Float\r\n    },\r\n    maxScale: {\r\n      default: 2.50,\r\n      type: cc.Float\r\n    },\r\n    maxMovingBufferLength: {\r\n      default: 1,\r\n      type: cc.Integer\r\n    },\r\n    zoomingScaleFacBase: {\r\n      default: 0.10,\r\n      type: cc.Float\r\n    },\r\n    zoomingSpeedBase: {\r\n      default: 4.0,\r\n      type: cc.Float\r\n    },\r\n    linearSpeedBase: {\r\n      default: 320.0,\r\n      type: cc.Float\r\n    },\r\n    canvasNode: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    mapNode: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    linearMovingEps: {\r\n      default: 0.10,\r\n      type: cc.Float\r\n    },\r\n    scaleByEps: {\r\n      default: 0.0375,\r\n      type: cc.Float\r\n    },\r\n  },\r\n\r\n  start() {},\r\n\r\n  onLoad() {\r\n    this.cachedStickHeadPosition = cc.v2(0.0, 0.0);\r\n    this.activeDirection = {\r\n      dx: 0.0,\r\n      dy: 0.0\r\n    };\r\n    this.maxHeadDistance = (0.5 * this.base.width);\r\n\r\n    this._initTouchEvent();\r\n    this._cachedMapNodePosTarget = [];\r\n    this._cachedZoomRawTarget = null;\r\n\r\n    this.mapScriptIns = this.mapNode.getComponent(\"Map\");\r\n    this.initialized = true;\r\n\r\n    this._startMainLoop();\r\n  },\r\n\r\n  onDestroy() {\r\n    clearInterval(this.mainLoopTimer); \r\n  },\r\n\r\n  _startMainLoop() {\r\n    const self = this;\r\n    const linearSpeedBase = self.linearSpeedBase;\r\n    const zoomingSpeed = self.zoomingSpeedBase;\r\n\r\n    self.mainLoopTimer = setInterval(() => {\r\n      if (false == self.mapScriptIns._inputControlEnabled) return;\r\n      if (null != self._cachedMapNodePosTarget) {\r\n        while (self.maxMovingBufferLength < self._cachedMapNodePosTarget.length) {\r\n          self._cachedMapNodePosTarget.shift();\r\n        }\r\n        if (0 < self._cachedMapNodePosTarget.length && 0 == self.mapNode.getNumberOfRunningActions()) {\r\n          const nextMapNodePosTarget = self._cachedMapNodePosTarget.shift();\r\n          const linearSpeed = linearSpeedBase;\r\n          const finalDiffVec = nextMapNodePosTarget.pos.sub(self.mapNode.position);\r\n          const finalDiffVecMag = finalDiffVec.mag();\r\n          if (self.linearMovingEps > finalDiffVecMag) {\r\n            // Jittering.\r\n            // cc.log(\"Map node moving by finalDiffVecMag == %s is just jittering.\", finalDiffVecMag);\r\n            return;\r\n          }\r\n          const durationSeconds = finalDiffVecMag / linearSpeed;\r\n          cc.log(\"Map node moving to %o in %s/%s == %s seconds.\", nextMapNodePosTarget.pos, finalDiffVecMag, linearSpeed, durationSeconds);\r\n          const bufferedTargetPos = cc.v2(nextMapNodePosTarget.pos.x, nextMapNodePosTarget.pos.y);\r\n          self.mapNode.runAction(cc.sequence(\r\n            cc.moveTo(durationSeconds, bufferedTargetPos),\r\n            cc.callFunc(() => {\r\n              if (self._isMapOverMoved(self.mapNode.position)) {\r\n                self.mapNode.setPosition(bufferedTargetPos);\r\n              }\r\n            }, self)\r\n          ));\r\n        }\r\n      }\r\n      if (null != self._cachedZoomRawTarget && false == self._cachedZoomRawTarget.processed) {\r\n        cc.log(`Processing self._cachedZoomRawTarget == ${self._cachedZoomRawTarget}`);\r\n        self._cachedZoomRawTarget.processed = true;\r\n        self.mapNode.setScale(self._cachedZoomRawTarget.scale);\r\n      }\r\n    }, 1000 / self.pollerFps);\r\n  },\r\n\r\n  _initTouchEvent() {\r\n    const self = this;\r\n    self.touchStartPosInMapNode = null;\r\n    self.inTouchPoints = new Map();\r\n    self.inMultiTouch = false;\r\n\r\n    self.canvasNode.on(cc.Node.EventType.TOUCH_START, function(event) {\r\n      self._touchStartEvent(event);\r\n    });\r\n    self.canvasNode.on(cc.Node.EventType.TOUCH_MOVE, function(event) {\r\n      self._touchMoveEvent(event);\r\n    });\r\n    self.canvasNode.on(cc.Node.EventType.TOUCH_END, function(event) {\r\n      self._touchEndEvent(event);\r\n    });\r\n    self.canvasNode.on(cc.Node.EventType.TOUCH_CANCEL, function(event) {\r\n      self._touchEndEvent(event);\r\n    });\r\n  },\r\n\r\n  _touchStartEvent(event) {\r\n    for (let touch of event._touches) {\r\n      this.inTouchPoints.set(touch._id, touch);\r\n    }\r\n    if (1 < this.inTouchPoints.size) {\r\n      this.inMultiTouch = true;\r\n    }\r\n    \r\n    if (!this.inMultiTouch) {\r\n      this.touchStartPosInMapNode = this.mapNode.convertToNodeSpaceAR(event.currentTouch);\r\n    }\r\n  },\r\n\r\n  _isMapOverMoved(mapTargetPos) {\r\n    const virtualPlayerPos = cc.v2(-mapTargetPos.x, -mapTargetPos.y);\r\n    return tileCollisionManager.isOutOfMapNode(this.mapNode, virtualPlayerPos);\r\n  },\r\n\r\n  _touchMoveEvent(event) {\r\n    if (ALL_MAP_STATES.VISUAL != this.mapScriptIns.state) {\r\n      return;\r\n    }\r\n    const linearScaleFacBase = this.linearScaleFacBase;\r\n    const zoomingScaleFacBase = this.zoomingScaleFacBase;\r\n    if (!this.inMultiTouch) {\r\n      if (!this.inTouchPoints.has(event.currentTouch._id)) {\r\n        return;\r\n      }\r\n      const diffVec = event.currentTouch._point.sub(event.currentTouch._startPoint);\r\n      const scaleFactor = linearScaleFacBase / this.canvasNode.scale;\r\n      const diffVecScaled = (diffVec).mul(scaleFactor);\r\n      const distance = diffVecScaled.mag();\r\n      const overMoved = (distance > this.maxHeadDistance);\r\n      if (overMoved) {\r\n        const ratio = (this.maxHeadDistance / distance);\r\n        this.cachedStickHeadPosition = diffVecScaled.mul(ratio);\r\n      } else {\r\n        const ratio = (distance / this.maxHeadDistance);\r\n        this.cachedStickHeadPosition = diffVecScaled.mul(ratio);\r\n      }\r\n    } else {\r\n      if (2 == event._touches.length) {\r\n        const firstTouch = event._touches[0];\r\n        const secondTouch = event._touches[1];\r\n\r\n        const startMagnitude = firstTouch._startPoint.sub(secondTouch._startPoint).mag();\r\n        const currentMagnitude = firstTouch._point.sub(secondTouch._point).mag();\r\n\r\n        let scaleBy = (currentMagnitude / startMagnitude);\r\n        scaleBy = 1 + (scaleBy - 1) * zoomingScaleFacBase;\r\n        if (1 < scaleBy && Math.abs(scaleBy - 1) < this.scaleByEps) {\r\n          // Jitterring.\r\n          cc.log(`ScaleBy == ${scaleBy} is just jittering.`);\r\n          return;\r\n        }\r\n        if (1 > scaleBy && Math.abs(scaleBy - 1) < 0.5 * this.scaleByEps) {\r\n          // Jitterring.\r\n          cc.log(`ScaleBy == ${scaleBy} is just jittering.`);\r\n          return;\r\n        }\r\n        const targetScale = this.canvasNode.scale * scaleBy;\r\n        if (this.minScale > targetScale || targetScale > this.maxScale) {\r\n          return;\r\n        }\r\n        this._cachedZoomRawTarget = {\r\n          scale: targetScale,\r\n          timestamp: Date.now(),\r\n          processed: false\r\n        };\r\n      }\r\n    }\r\n  },\r\n\r\n  _touchEndEvent(event) {\r\n    do {\r\n      if (this.inMultiTouch) {\r\n        break;\r\n      }\r\n      if (!this.inTouchPoints.has(event.currentTouch._id)) {\r\n        break;\r\n      }\r\n      const diffVec = event.currentTouch._point.sub(event.currentTouch._startPoint);\r\n      const diffVecMag = diffVec.mag();\r\n      if (this.linearMovingEps <= diffVecMag) {\r\n        break;\r\n      }\r\n      // Only triggers map-state-switch when `diffVecMag` is sufficiently small.\r\n\r\n      if (ALL_MAP_STATES.VISUAL != this.mapScriptIns.state) {\r\n        break;\r\n      }\r\n\r\n      // TODO: Handle single-finger-click event.\r\n    } while (false);\r\n    this.touchStartPosInMapNode = null;\r\n    this.cachedStickHeadPosition = cc.v2(0.0, 0.0);\r\n    for (let touch of event._touches) {\r\n      if(touch){\r\n        this.inTouchPoints.delete(touch._id);\r\n      }\r\n    }\r\n    if (0 == this.inTouchPoints.size) {\r\n      this.inMultiTouch = false;\r\n    }\r\n  },\r\n\r\n  _touchCancelEvent(event) {},\r\n\r\n  update(dt) {\r\n    if (this.inMultiTouch) return;\r\n    if (true != this.initialized) return;\r\n    this.stickhead.setPosition(this.cachedStickHeadPosition);\r\n    const eps = this.joyStickEps;\r\n\r\n    if (Math.abs(this.cachedStickHeadPosition.x) < eps && Math.abs(this.cachedStickHeadPosition.y) < eps) {\r\n      this.activeDirection.dx = 0;\r\n      this.activeDirection.dy = 0;\r\n      return;\r\n    }\r\n\r\n    // TODO: Really normalize the following `normalizedDir`.\r\n    const cachedStickHeadPositionMag = this.cachedStickHeadPosition.mag(); \r\n    const normalizedDir = {\r\n      dx: this.cachedStickHeadPosition.x/cachedStickHeadPositionMag,\r\n      dy: this.cachedStickHeadPosition.y/cachedStickHeadPositionMag,\r\n    }; \r\n    this.activeDirection = normalizedDir;\r\n  },\r\n\r\n  discretizeDirection(continuousDx, continuousDy, eps) {\r\n    let ret = {\r\n      dx: 0,\r\n      dy: 0,\r\n    };\r\n    if (Math.abs(continuousDx) < eps) {\r\n      ret.dx = 0;\r\n      ret.dy = continuousDy > 0 ? +1 : -1;\r\n    } else if (Math.abs(continuousDy) < eps) {\r\n      ret.dx = continuousDx > 0 ? +2 : -2;\r\n      ret.dy = 0;\r\n    } else {\r\n      const criticalRatio = continuousDy / continuousDx;\r\n      if (criticalRatio > this.magicLeanLowerBound && criticalRatio < this.magicLeanUpperBound) {\r\n        ret.dx = continuousDx > 0 ? +2 : -2;\r\n        ret.dy = continuousDx > 0 ? +1 : -1;\r\n      } else if (criticalRatio > -this.magicLeanUpperBound && criticalRatio < -this.magicLeanLowerBound) {\r\n        ret.dx = continuousDx > 0 ? +2 : -2;\r\n        ret.dy = continuousDx > 0 ? -1 : +1;\r\n      } else {\r\n        if (Math.abs(criticalRatio) < 1) {\r\n          ret.dx = continuousDx > 0 ? +2 : -2;\r\n          ret.dy = 0;\r\n        } else {\r\n          ret.dx = 0;\r\n          ret.dy = continuousDy > 0 ? +1 : -1;\r\n        }\r\n      }\r\n    }\r\n    return ret;\r\n  },\r\n});\r\n"]}