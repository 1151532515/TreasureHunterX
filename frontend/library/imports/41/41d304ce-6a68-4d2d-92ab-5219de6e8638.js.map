{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","useDiffFrameAlgo","default","canvasNode","type","Node","tiledAnimPrefab","Prefab","selfPlayerPrefab","treasurePrefab","trapPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","selfPlayerNameLabel","Label","otherPlayerNameLabel","boundRoomIdLabel","countdownLabel","selfPlayerScoreLabel","otherPlayerScoreLabel","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","countdownToBeginGamePrefab","_generateNewFullFrame","refFullFrame","diffFrame","newFullFrame","id","treasures","traps","bullets","players","playersLocalIdStrList","Object","keys","i","length","k","playerId","parseInt","removed","treasuresLocalIdStrList","treasureLocalIdInBattle","trapsLocalIdStrList","trapLocalIdInBattle","bulletsLocalIdStrList","bulletLocalIdInBattle","_dumpToFullFrameCache","fullFrame","self","recentFrameCacheCurrentSize","recentFrameCacheMaxCount","toDelFrameId","recentFrameCache","_onPerUpsyncFrame","instance","resyncing","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","dir","dx","parseFloat","dy","x","selfPlayerNode","y","ackingFrameId","lastRoomDownsyncFrameId","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","upsyncLoopInterval","clearInterval","inputControlTimer","_lazilyTriggerResync","state","popupSimplePressToGo","_onResyncCompleted","log","labelString","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","scale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","widgetsAboveAllNode","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","onLoad","mapNode","node","parent","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","mainCameraNode","mainCamera","Camera","children","child","zoomRatio","battleState","otherPlayerCachedDataDict","otherPlayerNodeDict","treasureInfoDict","treasureNodeDict","trapInfoDict","trapBulletInfoDict","trapBulletNodeDict","trapNodeDict","confirmLogoutNode","resultPanelNode","gameRuleNode","gameRuleScriptIns","showPopopInCanvas","findingPlayerNode","countdownToBeginGameNode","clientUpsyncFps","reconnectWSWithoutRoomId","Promise","resolve","reject","clientSessionPingInterval","clearBoundRoomIdInBothVolatileAndPersistentStorage","then","initPersistentSessionClient","initAfterWSConncted","handleClientSessionCloseOrError","tiledMapIns","TiledMap","parse","sys","localStorage","selfPlayer","assign","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","width","sizeInMapNode","height","origSize","setAnchorPoint","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleRoomDownsyncFrame","refFrameId","console","frameId","isInitiatingFrame","cachedFullFrame","countdownNanos","countdownSeconds","isNaN","roomDownsyncFrame","onBattleStopped","sentAt","playerIdStrList","immediateSelfPlayerInfo","speed","score","anotherPlayer","treasureInfo","trapInfo","bulletInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","resultPanelScriptIns","showPlayerInfo","active","newPlayerNode","toStartWithPos","update","dt","canvasParentNode","boundRoomId","displayName","updateSpeed","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","targetNode","aControlledOtherPlayerScriptIns","newScheduledDirection","discretizeDirection","joyStickEps","scheduleNewDirection","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","normalizedDir","getNumberOfRunningActions","durationSeconds","runAction","moveTo","treasureScriptIns","playPickedUpAnimAndDestroy","s","byClick","localClearance","closeWSConnection","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","initWSConnection","cb","toShowNode"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: { \n    useDiffFrameAlgo: {\n      default: true \n    },\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    selfPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    npcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    type2NpcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    selfPlayerNameLabel: {\n      type: cc.Label,\n      default: null\n    },\n    otherPlayerNameLabel: {\n      type: cc.Label,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    selfPlayerScoreLabel: {\n      type: cc.Label,\n      default: null\n    },\n    otherPlayerScoreLabel: {\n      type: cc.Label,\n      default: null\n    },\n    trapBulletPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    resultPanelPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    gameRulePrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    findingPlayerPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    countdownToBeginGamePrefab: {\n      type:cc.Prefab,\n      default: null\n    }\n  },\n  \n  _generateNewFullFrame: function(refFullFrame, diffFrame) {\n    let newFullFrame = {\n      id: diffFrame.id,\n      treasures: refFullFrame.treasures,\n      traps: refFullFrame.traps,\n      bullets: refFullFrame.bullets,\n      players: refFullFrame.players,\n    };\n\n    const players = diffFrame.players;\n    const playersLocalIdStrList = Object.keys(players);\n    for (let i = 0; i < playersLocalIdStrList.length; ++i) {\n      const k = playersLocalIdStrList[i];\n      const playerId = parseInt(k);\n      if (true == diffFrame.players[playerId].removed) {\n        // cc.log(`Player id == ${playerId} is removed.`);\n        delete newFullFrame.players[playerId];\n      } else {\n        newFullFrame.players[playerId] = diffFrame.players[playerId];  \n      }  \n    }\n    \n    const treasures = diffFrame.treasures;\n    const treasuresLocalIdStrList = Object.keys(treasures);\n    for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n      const k = treasuresLocalIdStrList[i];\n      const treasureLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.treasures[treasureLocalIdInBattle].removed) {\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\n        delete newFullFrame.treasures[treasureLocalIdInBattle];\n      } else {\n        newFullFrame.treasures[treasureLocalIdInBattle] = diffFrame.treasures[treasureLocalIdInBattle];  \n      }  \n    }\n\n    const traps = diffFrame.traps;\n    const trapsLocalIdStrList = Object.keys(traps);\n    for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n      const k = trapsLocalIdStrList[i];\n      const trapLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.traps[trapLocalIdInBattle].removed) {\n        // cc.log(`Trap with localIdInBattle == ${trapLocalIdInBattle} is removed.`);\n        delete newFullFrame.traps[trapLocalIdInBattle];\n      } else {\n        newFullFrame.traps[trapLocalIdInBattle] = diffFrame.traps[trapLocalIdInBattle];  \n      }\n    }\n\n    const bullets = diffFrame.bullets;\n    const bulletsLocalIdStrList = Object.keys(bullets);\n    for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n      const k = bulletsLocalIdStrList[i];\n      const bulletLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.bullets[bulletLocalIdInBattle].removed) {\n        // cc.log(`Bullet with localIdInBattle == ${bulletLocalIdInBattle} is removed.`);\n        delete newFullFrame.bullets[bulletLocalIdInBattle];\n      } else {\n        newFullFrame.bullets[bulletLocalIdInBattle] = diffFrame.bullets[bulletLocalIdInBattle];  \n      }\n    }\n\n    return newFullFrame;\n  },\n\n  _dumpToFullFrameCache: function(fullFrame) {\n    const self = this;\n    while (self.recentFrameCacheCurrentSize >= self.recentFrameCacheMaxCount) {\n      // Trick here: never evict the \"Zero-th Frame\" for resyncing!\n      const toDelFrameId = Object.keys(self.recentFrameCache)[1]; \n      // cc.log(\"toDelFrameId is \" + toDelFrameId + \".\");\n      delete self.recentFrameCache[toDelFrameId];\n      --self.recentFrameCacheCurrentSize;\n    }\n    self.recentFrameCache[fullFrame.id] = fullFrame;\n    ++self.recentFrameCacheCurrentSize;\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (instance.resyncing) return;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n      ackingFrameId: instance.lastRoomDownsyncFrameId,\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  onDestroy() {\n    const self = this;\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  _lazilyTriggerResync() {\n    if (true == this.resyncing) return; \n    this.resyncing = false;\n    if (ALL_MAP_STATES.SHOWING_MODAL_POPUP != this.state) {\n      this.popupSimplePressToGo(\"Resyncing your battle, please wait...\");\n    }\n  },\n\n  _onResyncCompleted() {\n    if (false == this.resyncing) return; \n    cc.log(`_onResyncCompleted`);\n    this.resyncing = true;\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.scale);\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, simplePressToGoDialogNode);\n    setLocalZOrder(simplePressToGoDialogNode, 20);\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n },\n\n  onLoad() {\n    const self = this;\n    self.resyncing = false;\n    self.lastRoomDownsyncFrameId = 0;\n\n    self.recentFrameCache = {};\n    self.recentFrameCacheCurrentSize = 0;\n    self.recentFrameCacheMaxCount = 2048;\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    self.mainCameraNode = canvasNode.getChildByName(\"Main Camera\");\n    self.mainCamera = self.mainCameraNode.getComponent(cc.Camera);\n    for (let child of self.mainCameraNode.children) {\n      child.setScale(1/self.mainCamera.zoomRatio); \n    } \n    self.widgetsAboveAllNode = self.mainCameraNode.getChildByName(\"WidgetsAboveAll\"); \n\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n\n    /** init requeired prefab started */\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\n\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\n    self.gameRuleScriptIns.mapNode = self.node;\n    self.showPopopInCanvas(self.gameRuleNode);\n\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\n    \n    self.countdownToBeginGameNode = cc.instantiate(self.countdownToBeginGamePrefab);\n    \n    /** init requeired prefab ended */\n\n    self.clientUpsyncFps = 20;\n    self.upsyncLoopInterval = null;\n\n    window.reconnectWSWithoutRoomId = function() {\n      return  new Promise((resolve,reject) => {\n      if (window.clientSessionPingInterval) {\n        clearInterval(clientSessionPingInterval);\n      }\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage()\n      return resolve();\n      })\n      .then(() =>{\n        this.initPersistentSessionClient(this.initAfterWSConncted);\n      });\n    }\n\n    window.handleClientSessionCloseOrError = function() {\n      if(!self.battleState)\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n    };\n\n    self.initAfterWSConncted = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      const tiledMapIns = self.node.getComponent(cc.TiledMap);\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      self._inputControlEnabled = false;\n      self.setupInputControls();\n\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n      for (let frameAnim of boundaryObjs.frameAnimations) {\n        const animNode = cc.instantiate(self.tiledAnimPrefab);\n        const anim = animNode.getComponent(cc.Animation);\n        animNode.setPosition(frameAnim.posInMapNode);\n        animNode.width = frameAnim.sizeInMapNode.width;\n        animNode.height = frameAnim.sizeInMapNode.height;\n        animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n        safelyAddChild(self.node, animNode);\n        setLocalZOrder(animNode, 5);\n        anim.addClip(frameAnim.animationClip, \"default\");\n        anim.play(\"default\");\n      }\n\n      self.barrierColliders = [];\n      for (let boundaryObj of boundaryObjs.barriers) {\n        const newBarrier = cc.instantiate(self.barrierPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n        newBarrierColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.barrierColliders.push(newBarrierColliderIns);\n        self.node.addChild(newBarrier);\n      }\n\n      const allLayers = tiledMapIns.getLayers();\n      for (let layer of allLayers) {\n        const layerType = layer.getProperty(\"type\");\n        switch (layerType) {\n          case \"normal\":\n            setLocalZOrder(layer.node, 0);\n            break;\n          case \"barrier_and_shelter\":\n            setLocalZOrder(layer.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      const allObjectGroups = tiledMapIns.getObjectGroups();\n      for (let objectGroup of allObjectGroups) {\n        const objectGroupType = objectGroup.getProperty(\"type\");\n        switch (objectGroupType) {\n          case \"barrier_and_shelter\":\n            setLocalZOrder(objectGroup.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newShelter.setPosition(newBoundaryOffsetInMapNode);\n        newShelter.setAnchorPoint(cc.v2(0, 0));\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n        newShelterColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.node.addChild(newShelter);\n      }\n\n      window.handleRoomDownsyncFrame = function(diffFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n        const refFrameId = diffFrame.refFrameId;\n        if( -99 == refFrameId ) {\n          console.log(\"handleRoomDownsyncFrame and refFrameId < 0 , refFrameId: \" + refFrameId);\n          if(self.findingPlayerNode.parent){\n            self.findingPlayerNode.parent.removeChild(self.findingPlayerNode);\n            self.transitToState(ALL_MAP_STATES.VISUAL);\n          }\n          self.showPopopInCanvas(self.countdownToBeginGameNode);\n          return;\n        } else if( -98 == refFrameId ) {\n          console.log(\"handleRoomDownsyncFrame and refFrameId < 0 , refFrameId: \" + refFrameId);\n          self.showPopopInCanvas(self.findingPlayerNode);\n          return;\n        }\n        const frameId = diffFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        const isInitiatingFrame = (0 >= self.recentFrameCacheCurrentSize || 0 == refFrameId); \n        /*\n        if (frameId % 300 == 0) {\n          // WARNING: For testing only!\n          if (0 < frameId) {\n            self._lazilyTriggerResync(); \n          }\n          cc.log(`${JSON.stringify(diffFrame)}`);\n        }\n        */\n        const cachedFullFrame = self.recentFrameCache[refFrameId];\n        if (\n          !isInitiatingFrame \n          && self.useDiffFrameAlgo \n          && 0 < self.recentFrameCacheCurrentSize // Critical condition to differentiate between \"BattleStarted\" or \"ShouldResync\". \n          && null == cachedFullFrame\n        ) {\n          self._lazilyTriggerResync();\n          // Later incoming diffFrames will all suffice that `0 < self.recentFrameCacheCurrentSize && null == cachedFullFrame`, until `this._onResyncCompleted` is successfully invoked.\n          return;\n        } \n        \n        if (isInitiatingFrame && 0 == refFrameId) {\n          // Reaching here implies that you've received the resync frame.\n          self._onResyncCompleted();\n        }\n        let countdownNanos = diffFrame.countdownNanos;\n        if (countdownNanos < 0) countdownNanos = 0;\n        const countdownSeconds = parseInt(countdownNanos / 1000000000);\n        if (isNaN(countdownSeconds)) {\n          cc.log(`countdownSeconds is NaN for countdownNanos == ${countdownNanos}.`);\n        }\n        self.countdownLabel.string = countdownSeconds;\n        const roomDownsyncFrame = (\n          (isInitiatingFrame || !self.useDiffFrameAlgo)\n          ?\n          diffFrame    \n          :\n          self._generateNewFullFrame(cachedFullFrame, diffFrame) \n        ); \n        if (countdownNanos <= 0) {\n          self.onBattleStopped(roomDownsyncFrame.players);\n          return;\n        }\n        self._dumpToFullFrameCache(roomDownsyncFrame);\n        const sentAt = roomDownsyncFrame.sentAt;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(\"Battle started!\");\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n        // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    }\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    self.enableInputControls();\n    if(self.countdownToBeginGameNode.parent) {\n      self.countdownToBeginGameNode.parent.removeChild(self.countdownToBeginGameNode);\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n    }\n  },\n\n  onBattleStopped(players) {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    const resultPanelNode = self.resultPanelNode;\n    const resultPanelScriptIns =  resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.showPlayerInfo(players);\n    // Such that it doesn't execute \"update(dt)\" anymore. \n    self.selfPlayerNode.active = false;\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.showPopopInCanvas(resultPanelNode);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const newPlayerNode = cc.instantiate(instance.selfPlayerPrefab);\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      self.selfPlayerNameLabel.string = self.selfPlayerInfo.displayName;\n      const score  = self.selfPlayerInfo.score ? self.selfPlayerInfo.score : 0 \n      self.selfPlayerScoreLabel.string = score;\n      if (null != self.selfPlayerScriptIns) {\n        self.selfPlayerScriptIns.updateSpeed(self.selfPlayerInfo.speed);\n      }\n    }\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n     //更新信息\n    if (null != cachedPlayerData) {\n      self.otherPlayerNameLabel.string = cachedPlayerData.displayName;\n      const score  = cachedPlayerData.score ? cachedPlayerData.score : 0 \n      self.otherPlayerScoreLabel.string = score;\n    }\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aControlledOtherPlayerScriptIns = targetNode.getComponent(\"SelfPlayer\"); \n      aControlledOtherPlayerScriptIns.updateSpeed(cachedPlayerData.speed);\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag >= toTeleportDisThreshold) {\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = normalizedDir;\n        }\n      }\n    }\n\n   // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.x,\n        trapInfo.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        /*\n        //初始化trap的标记\n        const pickupBoundary = trapInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n      \n    }\n\n   // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.x,\n        bulletInfo.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }else {\n        targetNode.setPosition(newPos);\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n   // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.x,\n        treasureInfo.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        \n        /* \n        //初始化treasure的标记\n        const pickupBoundary = treasureInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureScriptIns = toRemoveTreasureNodeDict[k].getComponent(\"Treasure\");\n      treasureScriptIns.playPickedUpAnimAndDestroy();\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      if (byClick) {\n        /**\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\n        */\n        window.closeWSConnection();\n      }\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.showPopopInCanvas(self.confirmLogoutNode);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n  \n  initWSConnection(evt, cb) {\n    const self = this;\n    if(cb){ \n      cb()\n    } \n    initPersistentSessionClient(self.initAfterWSConncted);\n  },\n\n  showPopopInCanvas(toShowNode) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, toShowNode);\n    setLocalZOrder(toShowNode, 10);\n  },\n\n});\n"]}