{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","canvasNode","type","Node","default","tiledAnimPrefab","Prefab","selfPlayerPrefab","treasurePrefab","trapPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","selfPlayerIdLabel","Label","boundRoomIdLabel","countdownLabel","selfPlayerScoreLabel","otherPlayerScoreIndicatorPrefab","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","_onPerUpsyncFrame","instance","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","id","dir","dx","parseFloat","dy","x","selfPlayerNode","y","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","self","upsyncLoopInterval","clearInterval","inputControlTimer","popupSimplePressToGo","labelString","state","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","getScale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","onLoad","lastRoomDownsyncFrameId","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","mapNode","node","parent","battleState","otherPlayerCachedDataDict","otherPlayerNodeDict","treasureInfoDict","treasureNodeDict","trapInfoDict","trapBulletInfoDict","trapBulletNodeDict","trapNodeDict","scoreInfoDict","confirmLogoutNode","width","height","resultPanelNode","gameRuleNode","gameRuleScriptIns","showPopopInCanvas","findingPlayerNode","clientUpsyncFps","handleClientSessionCloseOrError","initAfterWSConncted","tiledMapIns","TiledMap","parse","sys","localStorage","selfPlayer","Object","assign","playerId","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","sizeInMapNode","origSize","setAnchorPoint","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleRoomDownsyncFrame","roomDownsyncFrame","frameId","countdownNanos","onBattleStopped","players","parseInt","toString","sentAt","refFrameId","playerIdStrList","keys","i","length","k","immediateSelfPlayerInfo","speed","score","anotherPlayer","treasures","treasuresLocalIdStrList","treasureLocalIdInBattle","treasureInfo","traps","trapsLocalIdStrList","trapLocalIdInBattle","trapInfo","bullets","bulletsLocalIdStrList","bulletLocalIdInBattle","bulletInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","resultPanelScriptIns","showPlayerInfo","scheduleNewDirection","newPlayerNode","toStartWithPos","update","dt","canvasParentNode","boundRoomId","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","scoreNode","debugInfoNode","playerScore","targetNode","newScheduledDirection","discretizeDirection","joyStickEps","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","log","normalizedDir","getNumberOfRunningActions","durationSeconds","runAction","moveTo","s","byClick","localClearance","closeWSConnection","clearBoundRoomIdInBothVolatileAndPersistentStorage","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","showfindingPlayerPopup","cb","initPersistentSessionClient","toShowNode"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    \n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    selfPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    npcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    type2NpcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    selfPlayerIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    selfPlayerScoreLabel: {\n      type: cc.Label,\n      default: null\n    },\n    otherPlayerScoreIndicatorPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    trapBulletPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    resultPanelPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    gameRulePrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    findingPlayerPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  onDestroy() {\n    const self = this;\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n/*\n    if (ALL_MAP_STATES.VISUAL != self.state) {\n      return;\n    }*/\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, simplePressToGoDialogNode);\n    setLocalZOrder(simplePressToGoDialogNode, 20);\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s Will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n },\n\n  //onLoad\n  onLoad() {\n    const self = this;\n    self.lastRoomDownsyncFrameId = 0;\n\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n    self.scoreInfoDict = {};\n\n    /** init confirmLogoutNode started */\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n    self.confirmLogoutNode.width = canvasNode.width;\n    self.confirmLogoutNode.height = canvasNode.height;\n    /** init confirmLogoutNode ended */\n\n    /** init resultPanelNode started */\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\n    self.resultPanelNode.width = canvasNode.width;\n    self.resultPanelNode.height = canvasNode.height;\n    /** init resultPanelNode ended */\n\n    /** init gameRuleNode started */\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\n    self.gameRuleNode.width = canvasNode.width;\n    self.gameRuleNode.height = canvasNode.height;\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\n    self.gameRuleScriptIns.mapNode = self.node;\n    self.showPopopInCanvas(self.gameRuleNode);\n    /** init resultPanelNode ended */\n\n    /** init findingPlayer started */\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\n    self.findingPlayerNode.width = canvasNode.width;\n    self.findingPlayerNode.height = canvasNode.height;\n    /** init findingPlayerNode ended */\n\n    self.clientUpsyncFps = 20;\n    self.upsyncLoopInterval = null;\n\n    window.handleClientSessionCloseOrError = function() {\n      if(!self.battleState)\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n    };\n\n    self.initAfterWSConncted = () => {\n     // self.state = ALL_MAP_STATES.VISUAL;\n      const tiledMapIns = self.node.getComponent(cc.TiledMap);\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      this._inputControlEnabled = false;\n      self.setupInputControls();\n\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n      for (let frameAnim of boundaryObjs.frameAnimations) {\n        const animNode = cc.instantiate(self.tiledAnimPrefab);\n        const anim = animNode.getComponent(cc.Animation);\n        animNode.setPosition(frameAnim.posInMapNode);\n        animNode.width = frameAnim.sizeInMapNode.width;\n        animNode.height = frameAnim.sizeInMapNode.height;\n        animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n        safelyAddChild(self.node, animNode);\n        setLocalZOrder(animNode, 5);\n        anim.addClip(frameAnim.animationClip, \"default\");\n        anim.play(\"default\");\n      }\n\n      self.barrierColliders = [];\n      for (let boundaryObj of boundaryObjs.barriers) {\n        const newBarrier = cc.instantiate(self.barrierPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n        newBarrierColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.barrierColliders.push(newBarrierColliderIns);\n        self.node.addChild(newBarrier);\n      }\n\n      const allLayers = tiledMapIns.getLayers();\n      for (let layer of allLayers) {\n        const layerType = layer.getProperty(\"type\");\n        switch (layerType) {\n          case \"normal\":\n            setLocalZOrder(layer.node, 0);\n            break;\n          case \"barrier_and_shelter\":\n            setLocalZOrder(layer.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      const allObjectGroups = tiledMapIns.getObjectGroups();\n      for (let objectGroup of allObjectGroups) {\n        const objectGroupType = objectGroup.getProperty(\"type\");\n        switch (objectGroupType) {\n          case \"barrier_and_shelter\":\n            setLocalZOrder(objectGroup.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (this.joystickInputControllerNode.parent !== this.node.parent.parent.getChildByName('JoystickContainer')) {\n        this.joystickInputControllerNode.parent = this.node.parent.parent.getChildByName('JoystickContainer');\n      }\n      this.joystickInputControllerNode.parent.width = this.node.parent.width * 0.5;\n      this.joystickInputControllerNode.parent.height = this.node.parent.height;\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newShelter.setPosition(newBoundaryOffsetInMapNode);\n        newShelter.setAnchorPoint(cc.v2(0, 0));\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n        newShelterColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.node.addChild(newShelter);\n      }\n\n      window.handleRoomDownsyncFrame = function(roomDownsyncFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n\n        const frameId = roomDownsyncFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        if (roomDownsyncFrame.countdownNanos == -1) {\n          self.onBattleStopped(roomDownsyncFrame.players);\n          return;\n        }\n        self.countdownLabel.string = parseInt(roomDownsyncFrame.countdownNanos / 1000000000).toString();\n        const sentAt = roomDownsyncFrame.sentAt;\n        const refFrameId = roomDownsyncFrame.refFrameId;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n//初始化trapInfo\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n//初始化trapBulletsInfo\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(\"Battle started!\");\n            self.transitToState(ALL_MAP_STATES.VISUAL);\n            const canvasNode = self.canvasNode;\n            canvasNode.removeChild(self.findingPlayerNode);\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n      // TODO: Cope with FullFrame reconstruction by `refFrameId` and a cache of recent FullFrames.\n      // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    }\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.enableInputControls();\n  },\n\n  onBattleStopped(players) {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    const resultPanelNode = self.resultPanelNode;\n    const resultPanelScriptIns =  resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.showPlayerInfo(players);\n    self.selfPlayerScriptIns.scheduleNewDirection({\n      dx: 0,\n      dy: 0\n    });\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.showPopopInCanvas(resultPanelNode);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const newPlayerNode = cc.instantiate(instance.selfPlayerPrefab);\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      self.selfPlayerIdLabel.string = self.selfPlayerInfo.id;\n      const score  = self.selfPlayerInfo.score ? self.selfPlayerInfo.score : 0 \n      self.selfPlayerScoreLabel.string = score;\n    }\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n     //显示分数\n     if(!self.scoreInfoDict[playerId]){\n        const scoreNode = cc.instantiate(self.otherPlayerScoreIndicatorPrefab);  \n        const debugInfoNode = canvasParentNode.getChildByName(\"DebugInfo\");\n        scoreNode.getChildByName(\"title\").getComponent(cc.Label).string = \"player\"+cachedPlayerData.id+\"'s score:\";\n        safelyAddChild(debugInfoNode,scoreNode);\n        self.scoreInfoDict[playerId] = scoreNode;\n      }\n      const playerScore  = !cachedPlayerData.score ? cachedPlayerData.score  : 0 \n      self.scoreInfoDict[playerId].getChildByName(\"OtherPlayerScoreLabel\").getComponent(cc.Label).string = playerScore;\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        targetNode.getComponent(\"SelfPlayer\").speed = cachedPlayerData.speed;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag >= toTeleportDisThreshold) {\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = normalizedDir;\n        }\n      }\n    }\n\n   // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.x,\n        trapInfo.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        /*\n        //初始化trap的标记\n        const pickupBoundary = trapInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n      \n    }\n\n   // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.x,\n        bulletInfo.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }else {\n        targetNode.setPosition(newPos);\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n   // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.x,\n        treasureInfo.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        \n        /* \n        //初始化treasure的标记\n        const pickupBoundary = treasureInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      toRemoveTreasureNodeDict[k].parent.removeChild(toRemoveTreasureNodeDict[k]);\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      if (byClick) {\n        /**\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\n        */\n        window.closeWSConnection();\n      }\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.showPopopInCanvas(self.confirmLogoutNode);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n  \n showfindingPlayerPopup(evt, cb) {\n    const self = this;\n    if(cb){ \n      cb()\n    } \n    initPersistentSessionClient(self.initAfterWSConncted);\n    self.showPopopInCanvas(self.findingPlayerNode);\n  },\n\n  showPopopInCanvas(toShowNode) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    const canvasNode = self.canvasNode;\n    toShowNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, toShowNode);\n    setLocalZOrder(toShowNode, 10);\n  }\n\n});\n"]}