{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","useDiffFrameAlgo","default","canvasNode","type","Node","tiledAnimPrefab","Prefab","player1Prefab","player2Prefab","treasurePrefab","trapPrefab","acceleratorPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","boundRoomIdLabel","Label","countdownLabel","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","countdownToBeginGamePrefab","playersInfoPrefab","_generateNewFullFrame","refFullFrame","diffFrame","newFullFrame","id","treasures","traps","bullets","players","speedShoes","playersLocalIdStrList","Object","keys","i","length","k","playerId","parseInt","removed","treasuresLocalIdStrList","treasureLocalIdInBattle","trapsLocalIdStrList","trapLocalIdInBattle","bulletsLocalIdStrList","bulletLocalIdInBattle","_dumpToFullFrameCache","fullFrame","self","recentFrameCacheCurrentSize","recentFrameCacheMaxCount","toDelFrameId","recentFrameCache","_onPerUpsyncFrame","instance","resyncing","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","dir","dx","parseFloat","dy","x","selfPlayerNode","y","ackingFrameId","lastRoomDownsyncFrameId","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","battleState","clearBoundRoomIdInBothVolatileAndPersistentStorage","handleRoomDownsyncFrame","upsyncLoopInterval","clearInterval","inputControlTimer","_lazilyTriggerResync","state","resyncingHintPopup","popupSimplePressToGo","t","_onResyncCompleted","log","parent","removeChild","labelString","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","scale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","string","once","dismissDialog","bind","safelyAddChild","widgetsAboveAllNode","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","_resetCurrentMatch","mapNode","node","playersNode","Animation","play","start","active","otherPlayerNodeDict","treasureNodeDict","trapBulletNodeDict","trapNodeDict","acceleratorNodeDict","mainCameraNode","mainCamera","Camera","children","child","zoomRatio","otherPlayerCachedDataDict","treasureInfoDict","trapInfoDict","trapBulletInfoDict","findingPlayerNode","findingPlayerScriptIns","showPopopInCanvas","gameRuleNode","playersInfoNode","onLoad","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","musicEffectManagerScriptIns","confirmLogoutNode","resultPanelNode","resultPanelScriptIns","mapScriptIns","onAgainClicked","shouldReconnectState","sys","localStorage","clientSession","readyState","WebSocket","OPEN","initPersistentSessionClient","initAfterWSConncted","closeWSConnection","gameRuleScriptIns","width","height","countdownToBeginGameNode","player1Node","player2Node","assign","clientUpsyncFps","tiledMapIns","TiledMap","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","posInMapNode","sizeInMapNode","origSize","setAnchorPoint","addClip","animationClip","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleClientSessionCloseOrError","removeItem","parse","selfPlayer","_inputControlEnabled","setupInputControls","refFrameId","matchPlayersFinsihed","initWxSdk","updatePlayersInfo","frameId","isInitiatingFrame","cachedFullFrame","countdownNanos","countdownSeconds","isNaN","roomDownsyncFrame","onBattleStopped","sentAt","playerIdStrList","immediateSelfPlayerInfo","speed","score","joinIndex","anotherPlayer","treasureInfo","acceleratorInfoDict","accelartors","accLocalIdStrList","accLocalIdInBattle","accInfo","trapInfo","bulletInfo","onBattleStarted","expectedRoomId","qDict","getQueryParamDict","history","boundRoomId","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","playBGM","spawnSelfPlayer","stopAllMusic","showPlayerInfo","newPlayerNode","toStartWithPos","showArrowTipNode","update","dt","canvasParentNode","playersScriptIns","updateData","updateSpeed","toRemoveAcceleratorNodeDict","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","targetNode","aControlledOtherPlayerScriptIns","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","normalizedDir","newScheduledDirection","discretizeDirection","joyStickEps","scheduleNewDirection","acceleratorInfo","aBulletScriptIns","localIdInBattle","linearSpeed","treasureNodeScriptIns","setData","getNumberOfRunningActions","durationSeconds","runAction","moveTo","treasureScriptIns","playPickedUpAnimAndDestroy","playHighScoreTreasurePicked","playTreasurePicked","playCrashedByTrapBullet","s","byClick","localClearance","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","initWSConnection","cb","toShowNode","playerInfo","countDownScriptIns"],"mappings":";;;;;;AAAA,IAAMA,OAAOC,QAAQ,cAAR,CAAb;AACAD,KAAKE,IAAL,CAAUC,OAAOC,QAAjB,GAA4B;;AAE5BD,OAAOE,cAAP,GAAwB;AACtBC,UAAQ,CADc,EACX;AACXC,qBAAmB,CAFG;AAGtBC,uBAAqB;AAHC,CAAxB;;AAMAL,OAAOM,iBAAP,GAA2B;AACzBC,WAAS,CADgB;AAEzBC,aAAW,CAFc;AAGzBC,iBAAe,CAHU;AAIzBC,gBAAc;AAJW,CAA3B;;AAOAC,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACVC,sBAAkB;AAChBC,eAAS;AADO,KADR;AAIVC,gBAAY;AACVC,YAAMR,GAAGS,IADC;AAEVH,eAAS;AAFC,KAJF;AAQVI,qBAAiB;AACfF,YAAMR,GAAGW,MADM;AAEfL,eAAS;AAFM,KARP;AAYVM,mBAAe;AACbJ,YAAMR,GAAGW,MADI;AAEbL,eAAS;AAFI,KAZL;AAgBVO,mBAAe;AACbL,YAAMR,GAAGW,MADI;AAEbL,eAAS;AAFI,KAhBL;AAoBVQ,oBAAgB;AACdN,YAAMR,GAAGW,MADK;AAEdL,eAAS;AAFK,KApBN;AAwBVS,gBAAY;AACVP,YAAMR,GAAGW,MADC;AAEVL,eAAS;AAFC,KAxBF;AA4BVU,uBAAmB;AACjBR,YAAMR,GAAGW,MADQ;AAEjBL,eAAS;AAFQ,KA5BT;AAgCVW,mBAAe;AACbT,YAAMR,GAAGW,MADI;AAEbL,eAAS;AAFI,KAhCL;AAoCVY,mBAAe;AACbV,YAAMR,GAAGW,MADI;AAEbL,eAAS;AAFI,KApCL;AAwCVa,2BAAuB;AACrBX,YAAMR,GAAGW,MADY;AAErBL,eAAS;AAFY,KAxCb;AA4CVc,iCAA6B;AAC3BZ,YAAMR,GAAGS,IADkB;AAE3BH,eAAS;AAFkB,KA5CnB;AAgDVe,iCAA6B;AAC3Bb,YAAMR,GAAGS,IADkB;AAE3BH,eAAS;AAFkB,KAhDnB;AAoDVgB,yBAAqB;AACnBd,YAAMR,GAAGW,MADU;AAEnBL,eAAS;AAFU,KApDX;AAwDViB,iCAA6B;AAC3Bf,YAAMR,GAAGW,MADkB;AAE3BL,eAAS;AAFkB,KAxDnB;AA4DVkB,sBAAkB;AAChBhB,YAAMR,GAAGyB,KADO;AAEhBnB,eAAS;AAFO,KA5DR;AAgEVoB,oBAAgB;AACdlB,YAAMR,GAAGyB,KADK;AAEdnB,eAAS;AAFK,KAhEN;AAoEVqB,sBAAkB;AAChBnB,YAAMR,GAAGW,MADO;AAEhBL,eAAS;AAFO,KApER;AAwEVsB,uBAAmB;AACjBpB,YAAMR,GAAGW,MADQ;AAEjBL,eAAS;AAFQ,KAxET;AA4EVuB,oBAAgB;AACdrB,YAAMR,GAAGW,MADK;AAEdL,eAAS;AAFK,KA5EN;AAgFVwB,yBAAqB;AACnBtB,YAAMR,GAAGW,MADU;AAEnBL,eAAS;AAFU,KAhFX;AAoFVyB,gCAA4B;AAC1BvB,YAAMR,GAAGW,MADiB;AAE1BL,eAAS;AAFiB,KApFlB;AAwFV0B,uBAAmB;AACjBxB,YAAMR,GAAGW,MADQ;AAEjBL,eAAS;AAFQ;;AAxFT,GAHL;;AAkGP2B,yBAAuB,+BAASC,YAAT,EAAuBC,SAAvB,EAAkC;AACvD,QAAIC,eAAe;AACjBC,UAAIF,UAAUE,EADG;AAEjBC,iBAAWJ,aAAaI,SAFP;AAGjBC,aAAOL,aAAaK,KAHH;AAIjBC,eAASN,aAAaM,OAJL;AAKjBC,eAASP,aAAaO,OALL;AAMjBC,kBAAYR,aAAaQ;AANR,KAAnB;;AASA,QAAMD,UAAUN,UAAUM,OAA1B;AACA,QAAME,wBAAwBC,OAAOC,IAAP,CAAYJ,OAAZ,CAA9B;AACA,SAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIH,sBAAsBI,MAA1C,EAAkD,EAAED,CAApD,EAAuD;AACrD,UAAME,IAAIL,sBAAsBG,CAAtB,CAAV;AACA,UAAMG,WAAWC,SAASF,CAAT,CAAjB;AACA,UAAI,QAAQb,UAAUM,OAAV,CAAkBQ,QAAlB,EAA4BE,OAAxC,EAAiD;AAC/C;AACA,eAAOf,aAAaK,OAAb,CAAqBQ,QAArB,CAAP;AACD,OAHD,MAGO;AACLb,qBAAaK,OAAb,CAAqBQ,QAArB,IAAiCd,UAAUM,OAAV,CAAkBQ,QAAlB,CAAjC;AACD;AACF;;AAED,QAAMX,YAAYH,UAAUG,SAA5B;AACA,QAAMc,0BAA0BR,OAAOC,IAAP,CAAYP,SAAZ,CAAhC;AACA,SAAK,IAAIQ,KAAI,CAAb,EAAgBA,KAAIM,wBAAwBL,MAA5C,EAAoD,EAAED,EAAtD,EAAyD;AACvD,UAAME,KAAII,wBAAwBN,EAAxB,CAAV;AACA,UAAMO,0BAA0BH,SAASF,EAAT,CAAhC;AACA,UAAI,QAAQb,UAAUG,SAAV,CAAoBe,uBAApB,EAA6CF,OAAzD,EAAkE;AAChE;AACA,eAAOf,aAAaE,SAAb,CAAuBe,uBAAvB,CAAP;AACD,OAHD,MAGO;AACLjB,qBAAaE,SAAb,CAAuBe,uBAAvB,IAAkDlB,UAAUG,SAAV,CAAoBe,uBAApB,CAAlD;AACD;AACF;;AAED,QAAMd,QAAQJ,UAAUI,KAAxB;AACA,QAAMe,sBAAsBV,OAAOC,IAAP,CAAYN,KAAZ,CAA5B;AACA,SAAK,IAAIO,MAAI,CAAb,EAAgBA,MAAIQ,oBAAoBP,MAAxC,EAAgD,EAAED,GAAlD,EAAqD;AACnD,UAAME,MAAIM,oBAAoBR,GAApB,CAAV;AACA,UAAMS,sBAAsBL,SAASF,GAAT,CAA5B;AACA,UAAI,QAAQb,UAAUI,KAAV,CAAgBgB,mBAAhB,EAAqCJ,OAAjD,EAA0D;AACxD;AACA,eAAOf,aAAaG,KAAb,CAAmBgB,mBAAnB,CAAP;AACD,OAHD,MAGO;AACLnB,qBAAaG,KAAb,CAAmBgB,mBAAnB,IAA0CpB,UAAUI,KAAV,CAAgBgB,mBAAhB,CAA1C;AACD;AACF;;AAED,QAAMf,UAAUL,UAAUK,OAA1B;AACA,QAAMgB,wBAAwBZ,OAAOC,IAAP,CAAYL,OAAZ,CAA9B;AACA,SAAK,IAAIM,MAAI,CAAb,EAAgBA,MAAIU,sBAAsBT,MAA1C,EAAkD,EAAED,GAApD,EAAuD;AACrD,UAAME,MAAIQ,sBAAsBV,GAAtB,CAAV;AACA,UAAMW,wBAAwBP,SAASF,GAAT,CAA9B;AACA,UAAI,QAAQb,UAAUK,OAAV,CAAkBiB,qBAAlB,EAAyCN,OAArD,EAA8D;AAC5D;AACA,eAAOf,aAAaI,OAAb,CAAqBiB,qBAArB,CAAP;AACD,OAHD,MAGO;AACLrB,qBAAaI,OAAb,CAAqBiB,qBAArB,IAA8CtB,UAAUK,OAAV,CAAkBiB,qBAAlB,CAA9C;AACD;AACF;;AAED,WAAOrB,YAAP;AACD,GAjKM;;AAmKPsB,yBAAuB,+BAASC,SAAT,EAAoB;AACzC,QAAMC,OAAO,IAAb;AACA,WAAOA,KAAKC,2BAAL,IAAoCD,KAAKE,wBAAhD,EAA0E;AACxE;AACA,UAAMC,eAAenB,OAAOC,IAAP,CAAYe,KAAKI,gBAAjB,EAAmC,CAAnC,CAArB;AACA;AACA,aAAOJ,KAAKI,gBAAL,CAAsBD,YAAtB,CAAP;AACA,QAAEH,KAAKC,2BAAP;AACD;AACDD,SAAKI,gBAAL,CAAsBL,UAAUtB,EAAhC,IAAsCsB,SAAtC;AACA,MAAEC,KAAKC,2BAAP;AACD,GA9KM;;AAgLPI,mBAhLO,+BAgLa;AAClB,QAAMC,WAAW,IAAjB;AACA,QAAIA,SAASC,SAAb,EAAwB;AACxB,QACE,QAAQD,SAASE,cAAjB,IACA,QAAQF,SAASG,mBADjB,IAEA,QAAQH,SAASG,mBAAT,CAA6BC,kBAHvC,EAII;AACJ,QAAMC,kBAAkB;AACtBlC,UAAI6B,SAASE,cAAT,CAAwB/B,EADN;AAEtB;;;;;AAKAmC,WAAK;AACHC,YAAIC,WAAWR,SAASG,mBAAT,CAA6BC,kBAA7B,CAAgDG,EAA3D,CADD;AAEHE,YAAID,WAAWR,SAASG,mBAAT,CAA6BC,kBAA7B,CAAgDK,EAA3D;AAFD,OAPiB;AAWtBC,SAAGF,WAAWR,SAASW,cAAT,CAAwBD,CAAnC,CAXmB;AAYtBE,SAAGJ,WAAWR,SAASW,cAAT,CAAwBC,CAAnC,CAZmB;AAatBC,qBAAeb,SAASc;AAbF,KAAxB;AAeA,QAAMC,UAAU;AACdC,aAAOC,KAAKC,GAAL,EADO;AAEdC,WAAK,iBAFS;AAGdC,YAAMf;AAHQ,KAAhB;AAKAlF,WAAOkG,UAAP,CAAkBC,KAAKC,SAAL,CAAeR,OAAf,CAAlB;AACD,GA7MM;AA+MPS,WA/MO,uBA+MK;AACV,QAAM9B,OAAO,IAAb;AACA,QAAI,QAAQA,KAAK+B,WAAb,IAA4BhG,kBAAkBC,OAAlB,IAA6BgE,KAAK+B,WAAlE,EAA+E;AAC7EtG,aAAOuG,kDAAP;AACD;AACD,QAAI,QAAQvG,OAAOwG,uBAAnB,EAA4C;AAC1CxG,aAAOwG,uBAAP,GAAiC,IAAjC;AACD;AACD,QAAIjC,KAAKkC,kBAAT,EAA6B;AAC3BC,oBAAcnC,KAAKkC,kBAAnB;AACD;AACD,QAAIlC,KAAKoC,iBAAT,EAA4B;AAC1BD,oBAAcnC,KAAKoC,iBAAnB;AACD;AACF,GA7NM;AA+NPC,sBA/NO,kCA+NgB;AACrB,QAAI,QAAQ,KAAK9B,SAAjB,EAA4B;AAC5B,SAAKA,SAAL,GAAiB,IAAjB;AACA,QAAI5E,eAAeG,mBAAf,IAAsC,KAAKwG,KAA/C,EAAsD;AACpD,UAAI,QAAQ,KAAKC,kBAAjB,EAAqC;AACnC,aAAKA,kBAAL,GAA0B,KAAKC,oBAAL,CAA0BlH,KAAKmH,CAAL,CAAO,mBAAP,CAA1B,CAA1B;AACD;AACF;AACF,GAvOM;AAyOPC,oBAzOO,gCAyOc;AACnB,QAAI,SAAS,KAAKnC,SAAlB,EAA6B;AAC7BnE,OAAGuG,GAAH;AACA,SAAKpC,SAAL,GAAiB,KAAjB;AACA,QAAI,QAAQ,KAAKgC,kBAAb,IAAmC,KAAKA,kBAAL,CAAwBK,MAA/D,EAAuE;AACrE,WAAKL,kBAAL,CAAwBK,MAAxB,CAA+BC,WAA/B,CAA2C,KAAKN,kBAAhD;AACD;AACF,GAhPM;AAkPPC,sBAlPO,gCAkPcM,WAlPd,EAkP2B;AAChC,QAAM9C,OAAO,IAAb;AACAA,SAAKsC,KAAL,GAAa3G,eAAeG,mBAA5B;;AAEA,QAAMa,aAAaqD,KAAKrD,UAAxB;AACA,QAAMoG,4BAA4B3G,GAAG4G,WAAH,CAAehD,KAAKrC,2BAApB,CAAlC;AACAoF,8BAA0BE,WAA1B,CAAsC7G,GAAG8G,EAAH,CAAM,CAAN,EAAS,CAAT,CAAtC;AACAH,8BAA0BI,QAA1B,CAAmC,IAAIxG,WAAWyG,KAAlD;AACA,QAAMC,iCAAiCN,0BAA0BO,YAA1B,CAAuC,uBAAvC,CAAvC;AACA,QAAMC,YAAYR,0BAA0BS,cAA1B,CAAyC,KAAzC,CAAlB;AACA,QAAMC,qBAAqB,SAArBA,kBAAqB,GAAM;AAC/BzD,WAAK0D,cAAL,CAAoB/H,eAAeC,MAAnC;AACAe,iBAAWkG,WAAX,CAAuBE,yBAAvB;AACD,KAHD;AAIAA,8BAA0BS,cAA1B,CAAyC,MAAzC,EAAiDF,YAAjD,CAA8DlH,GAAGyB,KAAjE,EAAwE8F,MAAxE,GAAiFb,WAAjF;AACAS,cAAUK,IAAV,CAAe,OAAf,EAAwBP,+BAA+BQ,aAA/B,CAA6CC,IAA7C,CAAkDT,8BAAlD,EAAkFI,kBAAlF,CAAxB;AACAF,cAAUC,cAAV,CAAyB,OAAzB,EAAkCF,YAAlC,CAA+ClH,GAAGyB,KAAlD,EAAyD8F,MAAzD,GAAkE,IAAlE;AACA3D,SAAK0D,cAAL,CAAoB/H,eAAeG,mBAAnC;AACAiI,mBAAe/D,KAAKgE,mBAApB,EAAyCjB,yBAAzC;AACAkB,mBAAelB,yBAAf,EAA0C,EAA1C;AACA,WAAOA,yBAAP;AACD,GAvQM;AAyQPmB,+BAzQO,yCAyQuBpB,WAzQvB,EAyQoCqB,MAzQpC,EAyQ4CC,yDAzQ5C,EAyQuG;AAC5G,QAAMC,aAAa,IAAnB;AACAF,WAAO3B,oBAAP,CAA4BpG,GAAGkI,EAAH,CAAMC,SAAN,CAAgB,+BAAhB,EAAiDzB,WAAjD,EAA8DuB,aAAa,IAA3E,CAA5B;AACAG,eAAW,YAAM;AACfL,aAAOM,MAAP,CAAc,KAAd,EAAqBL,yDAArB;AACD,KAFD,EAEGC,UAFH;AAGD,GA/QM;AAiRPK,oBAjRO,gCAiRc;AACnB,QAAM1E,OAAO,IAAb;AACA,QAAM2E,UAAU3E,KAAK4E,IAArB;AACA,QAAMjI,aAAagI,QAAQ/B,MAA3B;AACA5C,SAAKlC,cAAL,CAAoB6F,MAApB,GAA6B,EAA7B;AACA,QAAI3D,KAAK6E,WAAT,EAAsB;AACpB,WAAK,IAAI3F,CAAT,IAAcc,KAAK6E,WAAnB,EAAgC;AAC9B,YAAID,OAAO5E,KAAK6E,WAAL,CAAiB3F,CAAjB,CAAX;AACA0F,aAAKtB,YAAL,CAAkBlH,GAAG0I,SAArB,EAAgCC,IAAhC,CAAqC,QAArC;AACAH,aAAKtB,YAAL,CAAkB,YAAlB,EAAgC0B,KAAhC;AACAJ,aAAKK,MAAL,GAAc,IAAd;AACD;AACF;AACD,QAAIjF,KAAKkF,mBAAT,EAA8B;AAC5B,WAAK,IAAIhG,GAAT,IAAcc,KAAKkF,mBAAnB,EAAwC;AACtC,YAAIN,QAAO5E,KAAKkF,mBAAL,CAAyBhG,GAAzB,CAAX;AACA,YAAI0F,MAAKhC,MAAT,EAAiB;AACfgC,gBAAKhC,MAAL,CAAYC,WAAZ,CAAwB+B,KAAxB;AACD;AACF;AACF;AACD,QAAI5E,KAAKiB,cAAL,IAAuBjB,KAAKiB,cAAL,CAAoB2B,MAA/C,EAAuD;AACrD5C,WAAKiB,cAAL,CAAoB2B,MAApB,CAA2BC,WAA3B,CAAuC7C,KAAKiB,cAA5C;AACD;AACD,QAAIjB,KAAKmF,gBAAT,EAA2B;AACzB,WAAK,IAAIjG,GAAT,IAAcc,KAAKmF,gBAAnB,EAAqC;AACnC,YAAIP,SAAO5E,KAAKmF,gBAAL,CAAsBjG,GAAtB,CAAX;AACA,YAAI0F,OAAKhC,MAAT,EAAiB;AACfgC,iBAAKhC,MAAL,CAAYC,WAAZ,CAAwB+B,MAAxB;AACD;AACF;AACF;AACD,QAAI5E,KAAKoF,kBAAT,EAA6B;AAC3B,WAAK,IAAIlG,GAAT,IAAcc,KAAKoF,kBAAnB,EAAuC;AACrC,YAAIR,SAAO5E,KAAKoF,kBAAL,CAAwBlG,GAAxB,CAAX;AACA,YAAI0F,OAAKhC,MAAT,EAAiB;AACfgC,iBAAKhC,MAAL,CAAYC,WAAZ,CAAwB+B,MAAxB;AACD;AACF;AACF;AACD,QAAI5E,KAAKqF,YAAT,EAAuB;AACrB,WAAK,IAAInG,GAAT,IAAcc,KAAKqF,YAAnB,EAAiC;AAC/B,YAAIT,SAAO5E,KAAKqF,YAAL,CAAkBnG,GAAlB,CAAX;AACA,YAAI0F,OAAKhC,MAAT,EAAiB;AACfgC,iBAAKhC,MAAL,CAAYC,WAAZ,CAAwB+B,MAAxB;AACD;AACF;AACF;;AAED,QAAI5E,KAAKsF,mBAAT,EAA8B;AAC5B,WAAK,IAAIpG,GAAT,IAAcc,KAAKsF,mBAAnB,EAAwC;AACtC,YAAIV,SAAO5E,KAAKsF,mBAAL,CAAyBpG,GAAzB,CAAX;AACA,YAAI0F,OAAKhC,MAAT,EAAiB;AACfgC,iBAAKhC,MAAL,CAAYC,WAAZ,CAAwB+B,MAAxB;AACD;AACF;AACF;;AAED,QAAI5E,KAAKkC,kBAAT,EAA6B;AAC3BC,oBAAcnC,KAAKkC,kBAAnB;AACD;;AAEDlC,SAAKuF,cAAL,GAAsB5I,WAAW6G,cAAX,CAA0B,aAA1B,CAAtB;AACAxD,SAAKwF,UAAL,GAAkBxF,KAAKuF,cAAL,CAAoBjC,YAApB,CAAiClH,GAAGqJ,MAApC,CAAlB;AA/DmB;AAAA;AAAA;;AAAA;AAgEnB,2BAAkBzF,KAAKuF,cAAL,CAAoBG,QAAtC,8HAAgD;AAAA,YAAvCC,KAAuC;;AAC9CA,cAAMxC,QAAN,CAAe,IAAInD,KAAKwF,UAAL,CAAgBI,SAAnC;AACD;AAlEkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmEnB5F,SAAKgE,mBAAL,GAA2BhE,KAAKuF,cAAL,CAAoB/B,cAApB,CAAmC,iBAAnC,CAA3B;AACAxD,SAAKuF,cAAL,CAAoBtC,WAApB,CAAgC7G,GAAG8G,EAAH,EAAhC;;AAEAlD,SAAKO,SAAL,GAAiB,KAAjB;AACAP,SAAKoB,uBAAL,GAA+B,CAA/B;;AAEApB,SAAKI,gBAAL,GAAwB,EAAxB;AACAJ,SAAKC,2BAAL,GAAmC,CAAnC;AACAD,SAAKE,wBAAL,GAAgC,IAAhC;AACAF,SAAKiB,cAAL,GAAsB,IAAtB;AACAjB,SAAKS,mBAAL,GAA2B,IAA3B;AACAT,SAAKQ,cAAL,GAAsB,IAAtB;AACAR,SAAKkC,kBAAL,GAA0B,IAA1B;AACAlC,SAAK0D,cAAL,CAAoB/H,eAAeC,MAAnC;;AAEAoE,SAAK+B,WAAL,GAAmBhG,kBAAkBC,OAArC;AACAgE,SAAK6F,yBAAL,GAAiC,EAAjC;AACA7F,SAAKkF,mBAAL,GAA2B,EAA3B;AACAlF,SAAK8F,gBAAL,GAAwB,EAAxB;AACA9F,SAAKmF,gBAAL,GAAwB,EAAxB;AACAnF,SAAK+F,YAAL,GAAoB,EAApB;AACA/F,SAAKgG,kBAAL,GAA0B,EAA1B;AACAhG,SAAKoF,kBAAL,GAA0B,EAA1B;AACApF,SAAKqF,YAAL,GAAoB,EAApB;AACArF,SAAKsF,mBAAL,GAA2B,EAA3B;AACA,QAAItF,KAAKiG,iBAAT,EAA4B;AAC1B,UAAMC,yBAAyBlG,KAAKiG,iBAAL,CAAuB3C,YAAvB,CAAoC,eAApC,CAA/B;AACA4C,6BAAuB1K,IAAvB;AACD;AACDwE,SAAKmG,iBAAL,CAAuBnG,KAAKoG,YAA5B;AACArC,mBAAe/D,KAAKgE,mBAApB,EAAyChE,KAAKqG,eAA9C;AACD,GAnXM;AAqXPC,QArXO,oBAqXE;AACP,QAAMtG,OAAO,IAAb;AACA,QAAM2E,UAAU3E,KAAK4E,IAArB;AACA,QAAMjI,aAAagI,QAAQ/B,MAA3B;AACAxG,OAAGmK,QAAH,CAAYC,mBAAZ,GAAkCC,OAAlC,GAA4C,IAA5C;AACArK,OAAGmK,QAAH,CAAYC,mBAAZ,GAAkCE,gBAAlC,GAAqDC,QAArD;AACA3G,SAAK4G,2BAAL,GAAmC5G,KAAK4E,IAAL,CAAUtB,YAAV,CAAuB,oBAAvB,CAAnC;AACA;AACAtD,SAAK6G,iBAAL,GAAyBzK,GAAG4G,WAAH,CAAehD,KAAKtC,mBAApB,CAAzB;AACAsC,SAAK6G,iBAAL,CAAuBvD,YAAvB,CAAoC,eAApC,EAAqDqB,OAArD,GAA+D3E,KAAK4E,IAApE;;AAEA5E,SAAK8G,eAAL,GAAuB1K,GAAG4G,WAAH,CAAehD,KAAKhC,iBAApB,CAAvB;AACA,QAAM+I,uBAAuB/G,KAAK8G,eAAL,CAAqBxD,YAArB,CAAkC,aAAlC,CAA7B;AACAyD,yBAAqBC,YAArB,GAAoChH,IAApC;AACA+G,yBAAqBE,cAArB,GAAsC,YAAM;AAC1CxL,aAAOuG,kDAAP;AACAhC,WAAK0E,kBAAL;AACA,UAAIwC,uBAAuB5H,SAASlD,GAAG+K,GAAH,CAAOC,YAAP,CAAoBF,oBAA7B,CAA3B;AACA,cAAQA,oBAAR;AACE,aAAK,CAAL;AACA,aAAK,CAAL;AACE;AACA;AACF;AACE;AANJ;AAQA,UAAI,QAAQzL,OAAO4L,aAAf,IAAgC5L,OAAO4L,aAAP,CAAqBC,UAArB,IAAmCC,UAAUC,IAAjF,EAAuF;AACrF;AACApL,WAAGuG,GAAH,CAAO,uFAAP;AACAlH,eAAOgM,2BAAP,CAAmCzH,KAAK0H,mBAAxC;AACD,OAJD,MAIO;AACL;AACAtL,WAAGuG,GAAH,CAAO,iGAAP;AACAvG,WAAG+K,GAAH,CAAOC,YAAP,CAAoBF,oBAApB,GAA2C,CAA3C;AACAzL,eAAOkM,iBAAP;AACD;AACF,KAtBD;;AAwBA3H,SAAKoG,YAAL,GAAoBhK,GAAG4G,WAAH,CAAehD,KAAK/B,cAApB,CAApB;AACA+B,SAAK4H,iBAAL,GAAyB5H,KAAKoG,YAAL,CAAkB9C,YAAlB,CAA+B,UAA/B,CAAzB;AACAtD,SAAK4H,iBAAL,CAAuBjD,OAAvB,GAAiC3E,KAAK4E,IAAtC;;AAEA5E,SAAKiG,iBAAL,GAAyB7J,GAAG4G,WAAH,CAAehD,KAAK9B,mBAApB,CAAzB;AACA8B,SAAKiG,iBAAL,CAAuB4B,KAAvB,GAA+B7H,KAAKrD,UAAL,CAAgBkL,KAA/C;AACA7H,SAAKiG,iBAAL,CAAuB6B,MAAvB,GAAgC9H,KAAKrD,UAAL,CAAgBmL,MAAhD;AACA,QAAM5B,yBAAyBlG,KAAKiG,iBAAL,CAAuB3C,YAAvB,CAAoC,eAApC,CAA/B;AACA4C,2BAAuB1K,IAAvB;;AAEAwE,SAAKqG,eAAL,GAAuBjK,GAAG4G,WAAH,CAAehD,KAAK5B,iBAApB,CAAvB;;AAEA4B,SAAK+H,wBAAL,GAAgC3L,GAAG4G,WAAH,CAAehD,KAAK7B,0BAApB,CAAhC;;AAEA6B,SAAK6E,WAAL,GAAmB,EAAnB;AACA,QAAMmD,cAAc5L,GAAG4G,WAAH,CAAehD,KAAKhD,aAApB,CAApB;AACA,QAAMiL,cAAc7L,GAAG4G,WAAH,CAAehD,KAAK/C,aAApB,CAApB;AACA+B,WAAOkJ,MAAP,CAAclI,KAAK6E,WAAnB,EAAgC;AAC9B,SAAGmD;AAD2B,KAAhC;AAGAhJ,WAAOkJ,MAAP,CAAclI,KAAK6E,WAAnB,EAAgC;AAC9B,SAAGoD;AAD2B,KAAhC;AAGA;;AAEAjI,SAAKmI,eAAL,GAAuB,EAAvB;AACAnI,SAAK0E,kBAAL;;AAEA,QAAM0D,cAAcpI,KAAK4E,IAAL,CAAUtB,YAAV,CAAuBlH,GAAGiM,QAA1B,CAApB;AACA,QAAMC,eAAeC,qBAAqBC,sBAArB,CAA4CxI,KAAK4E,IAAjD,CAArB;AAnEO;AAAA;AAAA;;AAAA;AAoEP,4BAAsB0D,aAAaG,eAAnC,mIAAoD;AAAA,YAA3CC,SAA2C;;AAClD,YAAMC,WAAWvM,GAAG4G,WAAH,CAAehD,KAAKlD,eAApB,CAAjB;AACA,YAAM8L,OAAOD,SAASrF,YAAT,CAAsBlH,GAAG0I,SAAzB,CAAb;AACA6D,iBAAS1F,WAAT,CAAqByF,UAAUG,YAA/B;AACAF,iBAASd,KAAT,GAAiBa,UAAUI,aAAV,CAAwBjB,KAAzC;AACAc,iBAASb,MAAT,GAAkBY,UAAUI,aAAV,CAAwBhB,MAA1C;AACAa,iBAASxF,QAAT,CAAkBuF,UAAUI,aAAV,CAAwBjB,KAAxB,GAAgCa,UAAUK,QAAV,CAAmBlB,KAArE,EAA4Ea,UAAUI,aAAV,CAAwBhB,MAAxB,GAAiCY,UAAUK,QAAV,CAAmBjB,MAAhI;AACAa,iBAASK,cAAT,CAAwB5M,GAAG8G,EAAH,CAAM,GAAN,EAAW,CAAX,CAAxB,EAPkD,CAOV;AACxCa,uBAAe/D,KAAK4E,IAApB,EAA0B+D,QAA1B;AACA1E,uBAAe0E,QAAf,EAAyB,CAAzB;AACAC,aAAKK,OAAL,CAAaP,UAAUQ,aAAvB,EAAsC,SAAtC;AACAN,aAAK7D,IAAL,CAAU,SAAV;AACD;AAhFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkFP/E,SAAKmJ,gBAAL,GAAwB,EAAxB;AAlFO;AAAA;AAAA;;AAAA;AAmFP,4BAAwBb,aAAac,QAArC,mIAA+C;AAAA,YAAtCC,WAAsC;;AAC7C,YAAMC,aAAalN,GAAG4G,WAAH,CAAehD,KAAK3C,aAApB,CAAnB;AACA,YAAMkM,6BAA6BnN,GAAG8G,EAAH,CAAMmG,YAAY,CAAZ,EAAerI,CAArB,EAAwBqI,YAAY,CAAZ,EAAenI,CAAvC,CAAnC;AACAoI,mBAAWrG,WAAX,CAAuBsG,0BAAvB;AACAD,mBAAWN,cAAX,CAA0B5M,GAAG8G,EAAH,CAAM,CAAN,EAAS,CAAT,CAA1B;AACA,YAAMsG,wBAAwBF,WAAWhG,YAAX,CAAwBlH,GAAGqN,eAA3B,CAA9B;AACAD,8BAAsBE,MAAtB,GAA+B,EAA/B;AAN6C;AAAA;AAAA;;AAAA;AAO7C,gCAAcL,WAAd,mIAA2B;AAAA,gBAAlBM,CAAkB;;AACzBH,kCAAsBE,MAAtB,CAA6BE,IAA7B,CAAkCD,EAAEE,GAAF,CAAMN,0BAAN,CAAlC;AACD;AAT4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAU7CvJ,aAAKmJ,gBAAL,CAAsBS,IAAtB,CAA2BJ,qBAA3B;AACAxJ,aAAK4E,IAAL,CAAUkF,QAAV,CAAmBR,UAAnB;AACD;AA/FM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgGP,QAAMS,YAAY3B,YAAY4B,SAAZ,EAAlB;AAhGO;AAAA;AAAA;;AAAA;AAiGP,4BAAkBD,SAAlB,mIAA6B;AAAA,YAApBE,KAAoB;;AAC3B,YAAMC,YAAYD,MAAME,WAAN,CAAkB,MAAlB,CAAlB;AACA,gBAAQD,SAAR;AACE,eAAK,QAAL;AACEjG,2BAAegG,MAAMrF,IAArB,EAA2B,CAA3B;AACA;AACF,eAAK,qBAAL;AACEX,2BAAegG,MAAMrF,IAArB,EAA2B,CAA3B;AACA;AACF;AACE;AARJ;AAUD;AA7GM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA+GP,QAAMwF,kBAAkBhC,YAAYiC,eAAZ,EAAxB;AA/GO;AAAA;AAAA;;AAAA;AAgHP,4BAAwBD,eAAxB,mIAAyC;AAAA,YAAhCE,WAAgC;;AACvC,YAAMC,kBAAkBD,YAAYH,WAAZ,CAAwB,MAAxB,CAAxB;AACA,gBAAQI,eAAR;AACE,eAAK,qBAAL;AACEtG,2BAAeqG,YAAY1F,IAA3B,EAAiC,CAAjC;AACA;AACF;AACE;AALJ;AAOD;AAzHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA2HP,4BAAwB0D,aAAakC,gBAArC,mIAAuD;AAAA,YAA9CnB,YAA8C;;AACrD,YAAMoB,aAAarO,GAAG4G,WAAH,CAAehD,KAAKzC,qBAApB,CAAnB;AACA,YAAMgM,6BAA6BnN,GAAG8G,EAAH,CAAMmG,aAAY,CAAZ,EAAerI,CAArB,EAAwBqI,aAAY,CAAZ,EAAenI,CAAvC,CAAnC;AACAuJ,mBAAWxH,WAAX,CAAuBsG,0BAAvB;AACAkB,mBAAWzB,cAAX,CAA0B5M,GAAG8G,EAAH,CAAM,CAAN,EAAS,CAAT,CAA1B;AACA,YAAMwH,wBAAwBD,WAAWnH,YAAX,CAAwBlH,GAAGqN,eAA3B,CAA9B;AACAiB,8BAAsBhB,MAAtB,GAA+B,EAA/B;AANqD;AAAA;AAAA;;AAAA;AAOrD,gCAAcL,YAAd,mIAA2B;AAAA,gBAAlBM,EAAkB;;AACzBe,kCAAsBhB,MAAtB,CAA6BE,IAA7B,CAAkCD,GAAEE,GAAF,CAAMN,0BAAN,CAAlC;AACD;AAToD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUrDvJ,aAAK4E,IAAL,CAAUkF,QAAV,CAAmBW,UAAnB;AACD;AAtIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwIPhP,WAAOkP,+BAAP,GAAyC,YAAW;AAClD,UAAIzD,uBAAuB5H,SAASlD,GAAG+K,GAAH,CAAOC,YAAP,CAAoBF,oBAA7B,CAA3B;AACA,cAAQA,oBAAR;AACE,aAAK,CAAL;AACEA,iCAAuB,CAAvB;AACA9K,aAAG+K,GAAH,CAAOC,YAAP,CAAoBF,oBAApB,GAA2CA,oBAA3C;AACA9K,aAAGuG,GAAH,CAAO,uEAAP;AACAlH,iBAAOgM,2BAAP,CAAmCzH,KAAK0H,mBAAxC;AACA;AACF,aAAK,CAAL;AACEtL,aAAGuG,GAAH,CAAO,2FAAP;AACAvG,aAAG+K,GAAH,CAAOC,YAAP,CAAoBwD,UAApB,CAA+B,sBAA/B;AACA;AACF;AACE;AAZJ;AAcA,UAAI,QAAQ5K,KAAK+B,WAAb,IAA4BhG,kBAAkBC,OAAlB,IAA6BgE,KAAK+B,WAAlE,EAA+E;AAC7EtG,eAAOuG,kDAAP;AACAhC,aAAKkE,6BAAL,CAAmC,qCAAnC,EAA0ElE,IAA1E,EAAgF,IAAhF;AACD;AACF,KApBD;;AAsBAA,SAAK0H,mBAAL,GAA2B,YAAM;AAC/B1H,WAAKQ,cAAL,GAAsBoB,KAAKiJ,KAAL,CAAWzO,GAAG+K,GAAH,CAAOC,YAAP,CAAoB0D,UAA/B,CAAtB;AACA9L,aAAOkJ,MAAP,CAAclI,KAAKQ,cAAnB,EAAmC;AACjC/B,YAAIuB,KAAKQ,cAAL,CAAoBnB;AADS,OAAnC;AAGAW,WAAK0D,cAAL,CAAoB/H,eAAeC,MAAnC;AACAoE,WAAK+K,oBAAL,GAA4B,KAA5B;AACA/K,WAAKgL,kBAAL;AACAvP,aAAOwG,uBAAP,GAAiC,UAAS1D,SAAT,EAAoB;AACnD,YAAIxC,kBAAkBC,OAAlB,IAA6BgE,KAAK+B,WAAlC,IAAiDhG,kBAAkBE,SAAlB,IAA+B+D,KAAK+B,WAArF,IAAoGhG,kBAAkBG,aAAlB,IAAmC8D,KAAK+B,WAAhJ,EAA6J;AAC7J,YAAMkJ,aAAa1M,UAAU0M,UAA7B;AACA,YAAI,CAAC,EAAD,IAAOA,UAAX,EAAuB;AAAE;AACvBjL,eAAKkL,oBAAL,CAA0B3M,UAAUM,OAApC;AACD,SAFD,MAEO,IAAI,CAAC,EAAD,IAAOoM,UAAX,EAAuB;AAAE;AAC9B,cAAIxP,OAAO0P,SAAX,EAAsB;AACpB1P,mBAAO0P,SAAP;AACD;AACD,cAAMjF,0BAAyBlG,KAAKiG,iBAAL,CAAuB3C,YAAvB,CAAoC,eAApC,CAA/B;AACA,cAAI,CAACtD,KAAKiG,iBAAL,CAAuBrD,MAA5B,EAAoC;AAClC5C,iBAAKmG,iBAAL,CAAuBnG,KAAKiG,iBAA5B;AACD;AACDC,kCAAuBkF,iBAAvB,CAAyC7M,UAAUM,OAAnD;AACA;AACD;AACD,YAAMwM,UAAU9M,UAAUE,EAA1B;AACA,YAAI4M,WAAWrL,KAAKoB,uBAApB,EAA6C;AAC3C;AACA;AACD;AACD,YAAMkK,oBAAqB,IAAItL,KAAKC,2BAAT,IAAwC,KAAKgL,UAAxE;AACA;;;;;;;;;AASA,YAAMM,kBAAkBvL,KAAKI,gBAAL,CAAsB6K,UAAtB,CAAxB;AACA,YACE,CAACK,iBAAD,IACGtL,KAAKvD,gBADR,KAEIwO,aAAa,CAAb,IAAkB,IAAIjL,KAAKC,2BAF/B,EAE4D;AAF5D,WAGG,QAAQsL,eAJb,EAKE;AACAvL,eAAKqC,oBAAL;AACA;AACA;AACD;;AAED,YAAIiJ,qBAAqB,KAAKL,UAA9B,EAA0C;AACxC;AACAjL,eAAK0C,kBAAL;AACD;AACD,YAAI8I,iBAAiBjN,UAAUiN,cAA/B;AACA,YAAIA,iBAAiB,CAArB,EACEA,iBAAiB,CAAjB;AACF,YAAMC,mBAAmBnM,SAASkM,iBAAiB,UAA1B,CAAzB;AACA,YAAIE,MAAMD,gBAAN,CAAJ,EAA6B;AAC3BrP,aAAGuG,GAAH,oDAAwD6I,cAAxD;AACD;AACD;AACA;AACA;AACAxL,aAAKlC,cAAL,CAAoB6F,MAApB,GAA6B8H,gBAA7B;AACA,YAAME,oBACLL,qBAAqB,CAACtL,KAAKvD,gBAA5B,GAEE8B,SAFF,GAIEyB,KAAK3B,qBAAL,CAA2BkN,eAA3B,EAA4ChN,SAA5C,CALF;AAOA,YAAIiN,kBAAkB,CAAtB,EAAyB;AACvBxL,eAAK4L,eAAL,CAAqBD,kBAAkB9M,OAAvC;AACA;AACD;AACDmB,aAAKF,qBAAL,CAA2B6L,iBAA3B;AACA,YAAME,SAASF,kBAAkBE,MAAjC;AACA,YAAMhN,UAAU8M,kBAAkB9M,OAAlC;AACA,YAAMiN,kBAAkB9M,OAAOC,IAAP,CAAYJ,OAAZ,CAAxB;AACAmB,aAAK6F,yBAAL,GAAiC,EAAjC;AACA,aAAK,IAAI3G,IAAI,CAAb,EAAgBA,IAAI4M,gBAAgB3M,MAApC,EAA4C,EAAED,CAA9C,EAAiD;AAC/C,cAAME,IAAI0M,gBAAgB5M,CAAhB,CAAV;AACA,cAAMG,WAAWC,SAASF,CAAT,CAAjB;AACA,cAAIC,YAAYW,KAAKQ,cAAL,CAAoB/B,EAApC,EAAwC;AACtC,gBAAMsN,0BAA0BlN,QAAQO,CAAR,CAAhC;AACAJ,mBAAOkJ,MAAP,CAAclI,KAAKQ,cAAnB,EAAmC;AACjCQ,iBAAG+K,wBAAwB/K,CADM;AAEjCE,iBAAG6K,wBAAwB7K,CAFM;AAGjC8K,qBAAOD,wBAAwBC,KAHE;AAIjCjK,2BAAagK,wBAAwBhK,WAJJ;AAKjCkK,qBAAOF,wBAAwBE,KALE;AAMjCC,yBAAWH,wBAAwBG;AANF,aAAnC;AAQA;AACD;AACD,cAAMC,gBAAgBtN,QAAQO,CAAR,CAAtB;AACA;AACAY,eAAK6F,yBAAL,CAA+BxG,QAA/B,IAA2C8M,aAA3C;AACD;AACDnM,aAAK8F,gBAAL,GAAwB,EAAxB;AACA,YAAMpH,YAAYiN,kBAAkBjN,SAApC;AACA,YAAMc,0BAA0BR,OAAOC,IAAP,CAAYP,SAAZ,CAAhC;AACA,aAAK,IAAIQ,MAAI,CAAb,EAAgBA,MAAIM,wBAAwBL,MAA5C,EAAoD,EAAED,GAAtD,EAAyD;AACvD,cAAME,MAAII,wBAAwBN,GAAxB,CAAV;AACA,cAAMO,0BAA0BH,SAASF,GAAT,CAAhC;AACA,cAAMgN,eAAe1N,UAAUU,GAAV,CAArB;AACAY,eAAK8F,gBAAL,CAAsBrG,uBAAtB,IAAiD2M,YAAjD;AACD;AACDpM,aAAKqM,mBAAL,GAA2B,EAA3B;AACA,YAAMC,cAAcX,kBAAkB7M,UAAtC;AACJ,YAAMyN,oBAAoBvN,OAAOC,IAAP,CAAYqN,WAAZ,CAA1B;AACA,aAAK,IAAIpN,OAAI,CAAb,EAAgBA,OAAIqN,kBAAkBpN,MAAtC,EAA8C,EAAED,IAAhD,EAAmD;AAClD,cAAME,MAAImN,kBAAkBrN,IAAlB,CAAV;AACA,cAAMsN,qBAAqBlN,SAASF,GAAT,CAA3B;AACA,cAAMqN,UAAUH,YAAYlN,GAAZ,CAAhB;AACAY,eAAKqM,mBAAL,CAAyBG,kBAAzB,IAA+CC,OAA/C;AACA;;AAEGzM,aAAK+F,YAAL,GAAoB,EAApB;AACA,YAAMpH,QAAQgN,kBAAkBhN,KAAhC;AACA,YAAMe,sBAAsBV,OAAOC,IAAP,CAAYN,KAAZ,CAA5B;AACA,aAAK,IAAIO,OAAI,CAAb,EAAgBA,OAAIQ,oBAAoBP,MAAxC,EAAgD,EAAED,IAAlD,EAAqD;AACnD,cAAME,MAAIM,oBAAoBR,IAApB,CAAV;AACA,cAAMS,sBAAsBL,SAASF,GAAT,CAA5B;AACA,cAAMsN,WAAW/N,MAAMS,GAAN,CAAjB;AACAY,eAAK+F,YAAL,CAAkBpG,mBAAlB,IAAyC+M,QAAzC;AACD;;AAED1M,aAAKgG,kBAAL,GAA0B,EAA1B;AACA,YAAMpH,UAAU+M,kBAAkB/M,OAAlC;AACA,YAAMgB,wBAAwBZ,OAAOC,IAAP,CAAYL,OAAZ,CAA9B;AACA,aAAK,IAAIM,OAAI,CAAb,EAAgBA,OAAIU,sBAAsBT,MAA1C,EAAkD,EAAED,IAApD,EAAuD;AACrD,cAAME,MAAIQ,sBAAsBV,IAAtB,CAAV;AACA,cAAMW,wBAAwBP,SAASF,GAAT,CAA9B;AACA,cAAMuN,aAAa/N,QAAQQ,GAAR,CAAnB;AACAY,eAAKgG,kBAAL,CAAwBnG,qBAAxB,IAAiD8M,UAAjD;AACD;;AAED,YAAI,KAAK3M,KAAKoB,uBAAd,EAAuC;AACrCpB,eAAK+B,WAAL,GAAmBhG,kBAAkBE,SAArC;AACA,cAAI,KAAKoP,OAAT,EAAkB;AAChB;AACArL,iBAAKwC,oBAAL,CAA0BlH,KAAKmH,CAAL,CAAO,eAAP,CAA1B;AACD;AACDzC,eAAK4M,eAAL;AACD;AACD5M,aAAKoB,uBAAL,GAA+BiK,OAA/B;AACF;AACC,OA9ID;AA+ID,KAvJD;;AAyJA;;;AAGA,QAAIwB,iBAAiB,IAArB;AACA,QAAMC,QAAQrR,OAAOsR,iBAAP,EAAd;AACA,QAAID,KAAJ,EAAW;AACTD,uBAAiBC,MAAM,gBAAN,CAAjB;AACD,KAFD,MAEO;AACL,UAAIrR,OAAOuR,OAAP,IAAkBvR,OAAOuR,OAAP,CAAe1K,KAArC,EAA4C;AAC1CuK,yBAAiBpR,OAAOuR,OAAP,CAAe1K,KAAf,CAAqBuK,cAAtC;AACD;AACF;AACD,QAAIA,cAAJ,EAAoB;AAClB7M,WAAKoG,YAAL,CAAkBnB,MAAlB,GAA2B,KAA3B;AACAxJ,aAAOgM,2BAAP,CAAmCzH,KAAK0H,mBAAxC;AACA;AACD,KAJD,MAIO;AACL,UAAItL,GAAG+K,GAAH,CAAOC,YAAP,CAAoB6F,WAAxB,EAAqC;AACnCjN,aAAKoG,YAAL,CAAkBnB,MAAlB,GAA2B,KAA3B;AACAxJ,eAAOgM,2BAAP,CAAmCzH,KAAK0H,mBAAxC;AACA;AACD;AACF;AACF,GAnsBM;AAqsBPsD,oBArsBO,gCAqsBc;AACnB,QAAM1K,WAAW,IAAjB;AACA,QAAMqE,UAAUrE,SAASsE,IAAzB;AACA,QAAMjI,aAAagI,QAAQ/B,MAA3B;AACA,QAAMsK,mCAAmCvQ,WAAW2G,YAAX,CAAwB,oBAAxB,CAAzC;AACA,QAAM6J,2BAA4B,OAAOD,iCAAiCE,SAA1E;;AAEA,QAAMC,OAAOH,gCAAb;AACA5M,aAAS+M,IAAT,GAAgBA,IAAhB;;AAEA/M,aAAS8B,iBAAT,GAA6BkL,YAAY,YAAW;AAClD,UAAI,SAAShN,SAASyK,oBAAtB,EAA4C;AAC5CzK,eAASG,mBAAT,CAA6B8M,eAA7B,GAA+CF,KAAKE,eAApD;AACD,KAH4B,EAG1BJ,wBAH0B,CAA7B;AAID,GAntBM;AAqtBPK,qBArtBO,iCAqtBe;AACpB,SAAKzC,oBAAL,GAA4B,IAA5B;AACD,GAvtBM;AAytBP0C,sBAztBO,kCAytBgB;AACrB,SAAK1C,oBAAL,GAA4B,KAA5B;AACD,GA3tBM;AA6tBP6B,iBA7tBO,6BA6tBW;AAChB,QAAM5M,OAAO,IAAb;AACA,QAAIA,KAAK4G,2BAAT,EACE5G,KAAK4G,2BAAL,CAAiC8G,OAAjC;AACF,QAAM/Q,aAAaqD,KAAKrD,UAAxB;AACAqD,SAAK2N,eAAL;AACA3N,SAAKkC,kBAAL,GAA0BoL,YAAYtN,KAAKK,iBAAL,CAAuByD,IAAvB,CAA4B9D,IAA5B,CAAZ,EAA+CA,KAAKmI,eAApD,CAA1B;AACAnI,SAAK0D,cAAL,CAAoB/H,eAAeC,MAAnC;AACAoE,SAAKwN,mBAAL;AACA,QAAIxN,KAAK+H,wBAAL,CAA8BnF,MAAlC,EAA0C;AACxC5C,WAAK+H,wBAAL,CAA8BnF,MAA9B,CAAqCC,WAArC,CAAiD7C,KAAK+H,wBAAtD;AACA/H,WAAK0D,cAAL,CAAoB/H,eAAeC,MAAnC;AACD;AACF,GA1uBM;AA4uBPgQ,iBA5uBO,2BA4uBS/M,OA5uBT,EA4uBkB;AACvB,QAAMmB,OAAO,IAAb;AACA,QAAIA,KAAK4G,2BAAT,EAAsC;AACpC5G,WAAK4G,2BAAL,CAAiCgH,YAAjC;AACD;AACD,QAAMjR,aAAaqD,KAAKrD,UAAxB;AACA,QAAMmK,kBAAkB9G,KAAK8G,eAA7B;AACA,QAAMC,uBAAuBD,gBAAgBxD,YAAhB,CAA6B,aAA7B,CAA7B;AACAyD,yBAAqB8G,cAArB,CAAoChP,OAApC;AACApD,WAAOuG,kDAAP,GATuB,CASsC;AAC7D;AACAhC,SAAKiB,cAAL,CAAoBgE,MAApB,GAA6B,KAA7B;AACAjF,SAAK+B,WAAL,GAAmBhG,kBAAkBG,aAArC;AACA8D,SAAKmG,iBAAL,CAAuBW,eAAvB;AACD,GA1vBM;AA4vBP6G,iBA5vBO,6BA4vBW;AAChB,QAAMrN,WAAW,IAAjB;AACA,QAAM4L,YAAY,KAAK1L,cAAL,CAAoB0L,SAAtC;AACA,QAAM4B,gBAAgB,KAAKjJ,WAAL,CAAiBqH,SAAjB,CAAtB;AACA,QAAM9D,cAAc9H,SAASsE,IAAT,CAActB,YAAd,CAA2BlH,GAAGiM,QAA9B,CAApB;AACA,QAAI0F,iBAAiB3R,GAAG8G,EAAH,CAAM5C,SAASE,cAAT,CAAwBQ,CAA9B,EAAiCV,SAASE,cAAT,CAAwBU,CAAzD,CAArB;AACA4M,kBAAc7K,WAAd,CAA0B8K,cAA1B;AACAD,kBAAcxK,YAAd,CAA2B,YAA3B,EAAyCqB,OAAzC,GAAmDrE,SAASsE,IAA5D;;AAEAtE,aAASsE,IAAT,CAAckF,QAAd,CAAuBgE,aAAvB;AACAxN,aAASG,mBAAT,GAA+BqN,cAAcxK,YAAd,CAA2B,YAA3B,CAA/B;AACAhD,aAASG,mBAAT,CAA6BuN,gBAA7B;;AAEA/J,mBAAe6J,aAAf,EAA8B,CAA9B;AACAxN,aAASW,cAAT,GAA0B6M,aAA1B;AACD,GA3wBM;AA6wBPG,QA7wBO,kBA6wBAC,EA7wBA,EA6wBI;AACT,QAAMlO,OAAO,IAAb;AACA,QAAM2E,UAAU3E,KAAK4E,IAArB;AACA,QAAMjI,aAAagI,QAAQ/B,MAA3B;AACA,QAAMuL,mBAAmBxR,WAAWiG,MAApC;AACA,QAAI,QAAQnH,OAAOwR,WAAnB,EAAgC;AAC9BjN,WAAKpC,gBAAL,CAAsB+F,MAAtB,GAA+BlI,OAAOwR,WAAtC;AACD;AACD,QAAI,QAAQjN,KAAKQ,cAAjB,EAAiC;AAC/B,UAAM4N,mBAAmBpO,KAAKqG,eAAL,CAAqB/C,YAArB,CAAkC,aAAlC,CAAzB;AACA8K,uBAAiBC,UAAjB,CAA4BrO,KAAKQ,cAAjC;AACA,UAAI,QAAQR,KAAKS,mBAAjB,EAAsC;AACpCT,aAAKS,mBAAL,CAAyB6N,WAAzB,CAAqCtO,KAAKQ,cAAL,CAAoBwL,KAAzD;AACD;AACF;;AAED,QAAIuC,8BAA8B,EAAlC;AACAvP,WAAOkJ,MAAP,CAAcqG,2BAAd,EAA2CvO,KAAKsF,mBAAhD;;AAEA,QAAIkJ,yBAAyB,EAA7B;AACAxP,WAAOkJ,MAAP,CAAcsG,sBAAd,EAAsCxO,KAAKkF,mBAA3C;;AAEA,QAAIuJ,2BAA2B,EAA/B;AACAzP,WAAOkJ,MAAP,CAAcuG,wBAAd,EAAwCzO,KAAKmF,gBAA7C;;AAEA,QAAIuJ,uBAAuB,EAA3B;AACA1P,WAAOkJ,MAAP,CAAcwG,oBAAd,EAAoC1O,KAAKqF,YAAzC;;AAEA;;;AAGA,QAAIsJ,yBAAyB,EAA7B;AACA3P,WAAOkJ,MAAP,CAAcyG,sBAAd,EAAsC3O,KAAKoF,kBAA3C;;AAEA,SAAK,IAAIhG,CAAT,IAAcY,KAAK6F,yBAAnB,EAA8C;AAC5C,UAAMxG,WAAWC,SAASF,CAAT,CAAjB;AACA,UAAMwP,mBAAmB5O,KAAK6F,yBAAL,CAA+BxG,QAA/B,CAAzB;AACA,UAAMwP,SAASzS,GAAG8G,EAAH,CACb0L,iBAAiB5N,CADJ,EAEb4N,iBAAiB1N,CAFJ,CAAf;AAIA;AACA,UAAI,QAAQ0N,gBAAZ,EAA8B;AAC5B,YAAMR,oBAAmBpO,KAAKqG,eAAL,CAAqB/C,YAArB,CAAkC,aAAlC,CAAzB;AACA8K,0BAAiBC,UAAjB,CAA4BO,gBAA5B;AACD;AACD,UAAIE,aAAa9O,KAAKkF,mBAAL,CAAyB7F,QAAzB,CAAjB;AACA,UAAI,CAACyP,UAAL,EAAiB;AACfA,qBAAa9O,KAAK6E,WAAL,CAAiB+J,iBAAiB1C,SAAlC,CAAb;AACA4C,mBAAWxL,YAAX,CAAwB,YAAxB,EAAsCqB,OAAtC,GAAgDA,OAAhD;AACA3E,aAAKkF,mBAAL,CAAyB7F,QAAzB,IAAqCyP,UAArC;AACA/K,uBAAeY,OAAf,EAAwBmK,UAAxB;AACAA,mBAAW7L,WAAX,CAAuB4L,MAAvB;AACA5K,uBAAe6K,UAAf,EAA2B,CAA3B;AACD;AACD,UAAMC,kCAAkCD,WAAWxL,YAAX,CAAwB,YAAxB,CAAxC;AACAyL,sCAAgCT,WAAhC,CAA4CM,iBAAiB5C,KAA7D;;AAEA,UAAMgD,SAAS5S,GAAG8G,EAAH,CACb4L,WAAW9N,CADE,EAEb8N,WAAW5N,CAFE,CAAf;AAIA,UAAM+N,cAAcJ,OAAOhF,GAAP,CAAWmF,MAAX,CAApB;AACA,UAAME,iBAAiBD,YAAYE,GAAZ,EAAvB;AACA,UAAMC,yBAA0BR,iBAAiB5C,KAAjB,GAAyBkC,EAAzB,GAA8B,GAA9D;AACA,UAAMmB,wBAAyBT,iBAAiB5C,KAAjB,GAAyBkC,EAAzB,GAA8B,GAA7D;AACA,UAAIgB,iBAAiBG,qBAArB,EAA4C;AAC1CN,wCAAgCxB,eAAhC,GAAkD;AAChD1M,cAAI,CAD4C;AAEhDE,cAAI;AAF4C,SAAlD;AAID,OALD,MAKO;AACL,YAAImO,iBAAiBE,sBAArB,EAA6C;AAC3ChT,aAAGuG,GAAH,aAAiBiM,iBAAiBnQ,EAAlC,kDAAiFyQ,cAAjF,oCAA8HE,sBAA9H;AACAL,0CAAgCxB,eAAhC,GAAkD;AAChD1M,gBAAI,CAD4C;AAEhDE,gBAAI;AAF4C,WAAlD;AAIA;AACA+N,qBAAW7L,WAAX,CAAuB4L,MAAvB;AACD,SARD,MAQO;AACL;AACA,cAAMS,gBAAgB;AACpBzO,gBAAIoO,YAAYjO,CAAZ,GAAgBkO,cADA;AAEpBnO,gBAAIkO,YAAY/N,CAAZ,GAAgBgO;AAFA,WAAtB;AAIA,cAAIxD,MAAM4D,cAAczO,EAApB,KAA2B6K,MAAM4D,cAAcvO,EAApB,CAA/B,EAAwD;AACtDgO,4CAAgCxB,eAAhC,GAAkD;AAChD1M,kBAAI,CAD4C;AAEhDE,kBAAI;AAF4C,aAAlD;AAID,WALD,MAKO;AACLgO,4CAAgCxB,eAAhC,GAAkD+B,aAAlD;AACD;AACF;AACF;;AAED,UAAI,KAAKV,iBAAiBhO,GAAjB,CAAqBC,EAA1B,IAAgC,KAAK+N,iBAAiBhO,GAAjB,CAAqBG,EAA9D,EAAkE;AAChE,YAAMwO,wBAAwBvP,KAAKqN,IAAL,CAAUmC,mBAAV,CAA8BZ,iBAAiBhO,GAAjB,CAAqBC,EAAnD,EAAuD+N,iBAAiBhO,GAAjB,CAAqBG,EAA5E,EAAgFf,KAAKqN,IAAL,CAAUoC,WAA1F,CAA9B;AACAV,wCAAgCW,oBAAhC,CAAqDH,qBAArD,EAA4E,KAA5E,CAAkF,mCAAlF;AACD;;AAED,UAAI,QAAQf,uBAAuBnP,QAAvB,CAAZ,EAA8C;AAC5C,eAAOmP,uBAAuBnP,QAAvB,CAAP;AACD;AACF;;AAED;AACA,SAAK,IAAID,GAAT,IAAcY,KAAKqM,mBAAnB,EAAwC;AACtC,UAAMG,qBAAqBlN,SAASF,GAAT,CAA3B;AACA,UAAMuQ,kBAAkB3P,KAAKqM,mBAAL,CAAyBG,kBAAzB,CAAxB;AACA,UAAMqC,UAASzS,GAAG8G,EAAH,CACbyM,gBAAgB3O,CADH,EAEb2O,gBAAgBzO,CAFH,CAAf;AAIA,UAAI4N,cAAa9O,KAAKsF,mBAAL,CAAyBkH,kBAAzB,CAAjB;AACA,UAAI,CAACsC,WAAL,EAAiB;AACfA,sBAAa1S,GAAG4G,WAAH,CAAehD,KAAK5C,iBAApB,CAAb;AACA4C,aAAKsF,mBAAL,CAAyBkH,kBAAzB,IAA+CsC,WAA/C;AACA/K,uBAAeY,OAAf,EAAwBmK,WAAxB;AACAA,oBAAW7L,WAAX,CAAuB4L,OAAvB;AACA5K,uBAAe6K,WAAf,EAA2B,CAA3B;AACD;AACD,UAAI,QAAQP,4BAA4B/B,kBAA5B,CAAZ,EAA6D;AAC3D,eAAO+B,4BAA4B/B,kBAA5B,CAAP;AACD;AACF;AACD;AACA,SAAK,IAAIpN,GAAT,IAAcY,KAAK+F,YAAnB,EAAiC;AAC/B,UAAMpG,sBAAsBL,SAASF,GAAT,CAA5B;AACA,UAAMsN,WAAW1M,KAAK+F,YAAL,CAAkBpG,mBAAlB,CAAjB;AACA,UAAMkP,WAASzS,GAAG8G,EAAH,CACbwJ,SAAS1L,CADI,EAEb0L,SAASxL,CAFI,CAAf;AAIA,UAAI4N,eAAa9O,KAAKqF,YAAL,CAAkB1F,mBAAlB,CAAjB;AACA,UAAI,CAACmP,YAAL,EAAiB;AACfA,uBAAa1S,GAAG4G,WAAH,CAAehD,KAAK7C,UAApB,CAAb;AACA6C,aAAKqF,YAAL,CAAkB1F,mBAAlB,IAAyCmP,YAAzC;AACA/K,uBAAeY,OAAf,EAAwBmK,YAAxB;AACAA,qBAAW7L,WAAX,CAAuB4L,QAAvB;AACA5K,uBAAe6K,YAAf,EAA2B,CAA3B;AACD;AACD,UAAI,QAAQJ,qBAAqB/O,mBAArB,CAAZ,EAAuD;AACrD,eAAO+O,qBAAqB/O,mBAArB,CAAP;AACD;AACF;;AAED;AACA,SAAK,IAAIP,IAAT,IAAcY,KAAKgG,kBAAnB,EAAuC;AACrC,UAAMnG,wBAAwBP,SAASF,IAAT,CAA9B;AACA,UAAMuN,aAAa3M,KAAKgG,kBAAL,CAAwBnG,qBAAxB,CAAnB;AACA,UAAMgP,WAASzS,GAAG8G,EAAH,CACbyJ,WAAW3L,CADE,EAEb2L,WAAWzL,CAFE,CAAf;AAIA,UAAI4N,eAAa9O,KAAKoF,kBAAL,CAAwBvF,qBAAxB,CAAjB;AACA,UAAI,CAACiP,YAAL,EAAiB;AACfA,uBAAa1S,GAAG4G,WAAH,CAAehD,KAAKjC,gBAApB,CAAb;AACAiC,aAAKoF,kBAAL,CAAwBvF,qBAAxB,IAAiDiP,YAAjD;AACA/K,uBAAeY,OAAf,EAAwBmK,YAAxB;AACAA,qBAAW7L,WAAX,CAAuB4L,QAAvB;AACA5K,uBAAe6K,YAAf,EAA2B,CAA3B;AACD;AACD,UAAMc,mBAAmBd,aAAWxL,YAAX,CAAwB,QAAxB,CAAzB;AACAsM,uBAAiBC,eAAjB,GAAmChQ,qBAAnC;AACA+P,uBAAiBE,WAAjB,GAA+BnD,WAAWmD,WAAX,GAAyB,UAAxD,CAjBqC,CAiB+B;;AAEpE,UAAMd,UAAS5S,GAAG8G,EAAH,CACb4L,aAAW9N,CADE,EAEb8N,aAAW5N,CAFE,CAAf;AAIA,UAAM+N,eAAcJ,SAAOhF,GAAP,CAAWmF,OAAX,CAApB;AACA,UAAME,kBAAiBD,aAAYE,GAAZ,EAAvB;AACA,UAAMC,0BAA0BQ,iBAAiBE,WAAjB,GAA+B5B,EAA/B,GAAoC,GAApE;AACA,UAAMmB,yBAAyBO,iBAAiBE,WAAjB,GAA+B5B,EAA/B,GAAoC,GAAnE;AACA,UAAIgB,kBAAiBG,sBAArB,EAA4C;AAC1CO,yBAAiBrC,eAAjB,GAAmC;AACjC1M,cAAI,CAD6B;AAEjCE,cAAI;AAF6B,SAAnC;AAID,OALD,MAKO;AACL,YAAImO,kBAAiBE,uBAArB,EAA6C;AAC3ChT,aAAGuG,GAAH,aAAiB9C,qBAAjB,kDAAmFqP,eAAnF,oCAAgIE,uBAAhI;AACAQ,2BAAiBrC,eAAjB,GAAmC;AACjC1M,gBAAI,CAD6B;AAEjCE,gBAAI;AAF6B,WAAnC;AAIA;AACA+N,uBAAW7L,WAAX,CAAuB4L,QAAvB;AACD,SARD,MAQO;AACL;AACA,cAAMS,iBAAgB;AACpBzO,gBAAIoO,aAAYjO,CAAZ,GAAgBkO,eADA;AAEpBnO,gBAAIkO,aAAY/N,CAAZ,GAAgBgO;AAFA,WAAtB;AAIA,cAAIxD,MAAM4D,eAAczO,EAApB,KAA2B6K,MAAM4D,eAAcvO,EAApB,CAA/B,EAAwD;AACtD6O,6BAAiBrC,eAAjB,GAAmC;AACjC1M,kBAAI,CAD6B;AAEjCE,kBAAI;AAF6B,aAAnC;AAID,WALD,MAKO;AACL6O,6BAAiBrC,eAAjB,GAAmC+B,cAAnC;AACD;AACF;AACF;AACD,UAAI,QAAQX,uBAAuB9O,qBAAvB,CAAZ,EAA2D;AACzD,eAAO8O,uBAAuB9O,qBAAvB,CAAP;AACD;AACF;;AAED;AACA,SAAK,IAAIT,IAAT,IAAcY,KAAK8F,gBAAnB,EAAqC;AACnC,UAAMrG,0BAA0BH,SAASF,IAAT,CAAhC;AACA,UAAMgN,eAAepM,KAAK8F,gBAAL,CAAsBrG,uBAAtB,CAArB;AACA,UAAMoP,WAASzS,GAAG8G,EAAH,CACbkJ,aAAapL,CADA,EAEboL,aAAalL,CAFA,CAAf;AAIA,UAAI4N,eAAa9O,KAAKmF,gBAAL,CAAsB1F,uBAAtB,CAAjB;AACA,UAAI,CAACqP,YAAL,EAAiB;AACfA,uBAAa1S,GAAG4G,WAAH,CAAehD,KAAK9C,cAApB,CAAb;AACA,YAAM6S,wBAAwBjB,aAAWxL,YAAX,CAAwB,UAAxB,CAA9B;AACAyM,8BAAsBC,OAAtB,CAA8B5D,YAA9B;AACApM,aAAKmF,gBAAL,CAAsB1F,uBAAtB,IAAiDqP,YAAjD;AACA/K,uBAAeY,OAAf,EAAwBmK,YAAxB;AACAA,qBAAW7L,WAAX,CAAuB4L,QAAvB;AACA5K,uBAAe6K,YAAf,EAA2B,CAA3B;AACD;;AAED,UAAI,QAAQL,yBAAyBhP,uBAAzB,CAAZ,EAA+D;AAC7D,eAAOgP,yBAAyBhP,uBAAzB,CAAP;AACD;AACD,UAAI,IAAIqP,aAAWmB,yBAAX,EAAR,EAAgD;AAC9C;AACA;AACD;AACD,UAAMjB,WAAS5S,GAAG8G,EAAH,CACb4L,aAAW9N,CADE,EAEb8N,aAAW5N,CAFE,CAAf;AAIA,UAAM+N,gBAAcJ,SAAOhF,GAAP,CAAWmF,QAAX,CAApB;AACA,UAAMkB,kBAAkBhC,EAAxB,CA9BmC,CA8BP;AAC5BY,mBAAWqB,SAAX,CAAqB/T,GAAGgU,MAAH,CAAUF,eAAV,EAA2BrB,QAA3B,CAArB;AACD;;AAED;AACA,SAAK,IAAIzP,IAAT,IAAcoP,sBAAd,EAAsC;AACpC,UAAMnP,YAAWC,SAASF,IAAT,CAAjB;AACAoP,6BAAuBpP,IAAvB,EAA0BwD,MAA1B,CAAiCC,WAAjC,CAA6C2L,uBAAuBpP,IAAvB,CAA7C;AACA,aAAOY,KAAKkF,mBAAL,CAAyB7F,SAAzB,CAAP;AACD;;AAED;AACA,SAAK,IAAID,IAAT,IAAcqP,wBAAd,EAAwC;AACtC,UAAMhP,2BAA0BH,SAASF,IAAT,CAAhC;AACA,UAAMiR,oBAAoB5B,yBAAyBrP,IAAzB,EAA4BkE,YAA5B,CAAyC,UAAzC,CAA1B;AACA+M,wBAAkBC,0BAAlB;AACA,UAAItQ,KAAK4G,2BAAT,EAAsC;AACpC,YAAI,KAAKyJ,kBAAkBzT,IAA3B,EAAiC;AAC/BoD,eAAK4G,2BAAL,CAAiC2J,2BAAjC;AACD,SAFD,MAEO;AACLvQ,eAAK4G,2BAAL,CAAiC4J,kBAAjC;AACD;AACF;AACD,aAAOxQ,KAAKmF,gBAAL,CAAsB1F,wBAAtB,CAAP;AACD;;AAED;AACA,SAAK,IAAIL,IAAT,IAAcsP,oBAAd,EAAoC;AAClC,UAAM/O,uBAAsBL,SAASF,IAAT,CAA5B;AACAsP,2BAAqBtP,IAArB,EAAwBwD,MAAxB,CAA+BC,WAA/B,CAA2C6L,qBAAqBtP,IAArB,CAA3C;AACA,aAAOY,KAAKqF,YAAL,CAAkB1F,oBAAlB,CAAP;AACD;;AAED;AACA,SAAK,IAAIP,IAAT,IAAcmP,2BAAd,EAA2C;AACzC,UAAM/B,sBAAqBlN,SAASF,IAAT,CAA3B;AACAmP,kCAA4BnP,IAA5B,EAA+BwD,MAA/B,CAAsCC,WAAtC,CAAkD0L,4BAA4BnP,IAA5B,CAAlD;AACA,aAAOY,KAAKsF,mBAAL,CAAyBkH,mBAAzB,CAAP;AACD;;AAED;AACA,SAAK,IAAIpN,IAAT,IAAcuP,sBAAd,EAAsC;AACpC,UAAM9O,yBAAwBP,SAASF,IAAT,CAA9B;AACAuP,6BAAuBvP,IAAvB,EAA0BwD,MAA1B,CAAiCC,WAAjC,CAA6C8L,uBAAuBvP,IAAvB,CAA7C;AACA,aAAOY,KAAKoF,kBAAL,CAAwBvF,sBAAxB,CAAP;AACA,UAAIG,KAAK4G,2BAAT,EAAsC;AACpC5G,aAAK4G,2BAAL,CAAiC6J,uBAAjC;AACD;AACF;AACF,GAhjCM;AAkjCP/M,gBAljCO,0BAkjCQgN,CAljCR,EAkjCW;AAChB,QAAM1Q,OAAO,IAAb;AACAA,SAAKsC,KAAL,GAAaoO,CAAb;AACD,GArjCM;AAujCPjM,QAvjCO,kBAujCAkM,OAvjCA,CAujCQ,qFAvjCR,EAujCgGvM,yDAvjChG,EAujC2J;AAChK,QAAMwM,iBAAiB,SAAjBA,cAAiB,GAAW;AAChCnV,aAAOkM,iBAAP;AACA,UAAI,QAAQvD,yDAAZ,EAAuE;AACrE3I,eAAOuG,kDAAP;AACD;AACD5F,SAAG+K,GAAH,CAAOC,YAAP,CAAoBwD,UAApB,CAA+B,YAA/B;AACAxO,SAAGmK,QAAH,CAAYsK,SAAZ,CAAsB,OAAtB;AACD,KAPD;;AASA,QAAM7Q,OAAO,IAAb;AACA,QAAI,QAAQ5D,GAAG+K,GAAH,CAAOC,YAAP,CAAoB0D,UAAhC,EAA4C;AAC1C,UAAMA,aAAalJ,KAAKiJ,KAAL,CAAWzO,GAAG+K,GAAH,CAAOC,YAAP,CAAoB0D,UAA/B,CAAnB;AACA,UAAMgG,iBAAiB;AACrBC,sBAAcjG,WAAWiG;AADJ,OAAvB;AAGA,UAAI;AACFC,qBAAaC,IAAb,CAAkB;AAChBC,eAAKC,eAAeC,QAAf,GAA0B,KAA1B,GAAkCD,eAAeE,IAAjD,GAAwD,GAAxD,GAA8DF,eAAeG,IAA7E,GAAoFC,UAAUC,UAAV,CAAqBC,GAAzG,GAA+GF,UAAUC,UAAV,CAAqBE,MAApI,GAA6IH,UAAUC,UAAV,CAAqBG,OAAlK,GAA4KJ,UAAUC,UAAV,CAAqBI,cAAjM,GAAkNL,UAAUC,UAAV,CAAqBK,MAD5N;AAEhBjV,gBAAM,MAFU;AAGhB8E,gBAAMoP,cAHU;AAIhBgB,mBAAS,iBAASC,GAAT,EAAc;AACrB,gBAAIA,IAAIC,GAAJ,IAAWT,UAAUU,QAAV,CAAmBC,EAAlC,EAAsC;AACpC9V,iBAAGuG,GAAH,qBAAyBoP,GAAzB;AACD;AACDnB;AACD,WATe;AAUhBuB,iBAAO,eAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8B;AACnC1B;AACD,WAZe;AAahB2B,mBAAS,mBAAW;AAClB3B;AACD;AAfe,SAAlB;AAiBD,OAlBD,CAkBE,OAAO4B,CAAP,EAAU,CAAE,CAlBd,SAkBuB;AACrB;AACA5B;AACD;AACF,KA3BD,MA2BO;AACLA;AACD;AACF,GAhmCM;AAkmCP6B,iBAlmCO,2BAkmCSC,GAlmCT,EAkmCc;AACnB,QAAM1S,OAAO,IAAb;AACAA,SAAKmG,iBAAL,CAAuBnG,KAAK6G,iBAA5B;AACD,GArmCM;AAumCP8L,+BAvmCO,2CAumCyB;AAC9B,QAAM3S,OAAO,IAAb;AACAA,SAAK0D,cAAL,CAAoB/H,eAAeC,MAAnC;AACA,QAAMe,aAAaqD,KAAKrD,UAAxB;AACAA,eAAWkG,WAAX,CAAuB7C,KAAK6G,iBAA5B;AACA7G,SAAKwN,mBAAL;AACD,GA7mCM;AA+mCPoF,kBA/mCO,4BA+mCUF,GA/mCV,EA+mCeG,EA/mCf,EA+mCmB;AACxB,QAAM7S,OAAO,IAAb;AACAvE,WAAOgM,2BAAP,CAAmCzH,KAAK0H,mBAAxC;AACA,QAAImL,EAAJ,EAAQ;AACNA;AACD;AACF,GArnCM;AAunCP1M,mBAvnCO,6BAunCW2M,UAvnCX,EAunCuB;AAC5B,QAAM9S,OAAO,IAAb;AACAA,SAAKyN,oBAAL;AACAzN,SAAK0D,cAAL,CAAoB/H,eAAeG,mBAAnC;AACAiI,mBAAe/D,KAAKgE,mBAApB,EAAyC8O,UAAzC;AACA7O,mBAAe6O,UAAf,EAA2B,EAA3B;AACD,GA7nCM;AA+nCP5H,sBA/nCO,gCA+nCcrM,OA/nCd,EA+nCuB;AAC5B,QAAMmB,OAAO,IAAb;AACA,QAAMkG,yBAAyBlG,KAAKiG,iBAAL,CAAuB3C,YAAvB,CAAoC,eAApC,CAA/B;AACA4C,2BAAuBkF,iBAAvB,CAAyCvM,OAAzC;AACApD,WAAO+I,UAAP,CAAkB,YAAM;AACtB,UAAIxE,KAAKiG,iBAAL,CAAuBrD,MAA3B,EAAmC;AACjC5C,aAAKiG,iBAAL,CAAuBrD,MAAvB,CAA8BC,WAA9B,CAA0C7C,KAAKiG,iBAA/C;AACAjG,aAAK0D,cAAL,CAAoB/H,eAAeC,MAAnC;AACA,aAAK,IAAIsD,CAAT,IAAcL,OAAd,EAAuB;AACrB;AACA,cAAMkU,aAAalU,QAAQK,CAAR,CAAnB;AACA,cAAMkP,mBAAmBpO,KAAKqG,eAAL,CAAqB/C,YAArB,CAAkC,aAAlC,CAAzB;AACA8K,2BAAiBC,UAAjB,CAA4B0E,UAA5B;AACD;AACF;AACD,UAAMC,qBAAqBhT,KAAK+H,wBAAL,CAA8BzE,YAA9B,CAA2C,sBAA3C,CAA3B;AACA0P,yBAAmBhD,OAAnB;AACAhQ,WAAKmG,iBAAL,CAAuBnG,KAAK+H,wBAA5B;AACA;AACD,KAfD,EAeG,IAfH;AAgBD;AAnpCM,CAAT","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    useDiffFrameAlgo: {\n      default: true\n    },\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    player1Prefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    player2Prefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    acceleratorPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    trapBulletPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    resultPanelPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    gameRulePrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    findingPlayerPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    countdownToBeginGamePrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    playersInfoPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n\n  },\n\n  _generateNewFullFrame: function(refFullFrame, diffFrame) {\n    let newFullFrame = {\n      id: diffFrame.id,\n      treasures: refFullFrame.treasures,\n      traps: refFullFrame.traps,\n      bullets: refFullFrame.bullets,\n      players: refFullFrame.players,\n      speedShoes: refFullFrame.speedShoes,\n    };\n\n    const players = diffFrame.players;\n    const playersLocalIdStrList = Object.keys(players);\n    for (let i = 0; i < playersLocalIdStrList.length; ++i) {\n      const k = playersLocalIdStrList[i];\n      const playerId = parseInt(k);\n      if (true == diffFrame.players[playerId].removed) {\n        // cc.log(`Player id == ${playerId} is removed.`);\n        delete newFullFrame.players[playerId];\n      } else {\n        newFullFrame.players[playerId] = diffFrame.players[playerId];\n      }\n    }\n\n    const treasures = diffFrame.treasures;\n    const treasuresLocalIdStrList = Object.keys(treasures);\n    for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n      const k = treasuresLocalIdStrList[i];\n      const treasureLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.treasures[treasureLocalIdInBattle].removed) {\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\n        delete newFullFrame.treasures[treasureLocalIdInBattle];\n      } else {\n        newFullFrame.treasures[treasureLocalIdInBattle] = diffFrame.treasures[treasureLocalIdInBattle];\n      }\n    }\n\n    const traps = diffFrame.traps;\n    const trapsLocalIdStrList = Object.keys(traps);\n    for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n      const k = trapsLocalIdStrList[i];\n      const trapLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.traps[trapLocalIdInBattle].removed) {\n        // cc.log(`Trap with localIdInBattle == ${trapLocalIdInBattle} is removed.`);\n        delete newFullFrame.traps[trapLocalIdInBattle];\n      } else {\n        newFullFrame.traps[trapLocalIdInBattle] = diffFrame.traps[trapLocalIdInBattle];\n      }\n    }\n\n    const bullets = diffFrame.bullets;\n    const bulletsLocalIdStrList = Object.keys(bullets);\n    for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n      const k = bulletsLocalIdStrList[i];\n      const bulletLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.bullets[bulletLocalIdInBattle].removed) {\n        // cc.log(`Bullet with localIdInBattle == ${bulletLocalIdInBattle} is removed.`);\n        delete newFullFrame.bullets[bulletLocalIdInBattle];\n      } else {\n        newFullFrame.bullets[bulletLocalIdInBattle] = diffFrame.bullets[bulletLocalIdInBattle];\n      }\n    }\n\n    return newFullFrame;\n  },\n\n  _dumpToFullFrameCache: function(fullFrame) {\n    const self = this;\n    while (self.recentFrameCacheCurrentSize >= self.recentFrameCacheMaxCount) {\n      // Trick here: never evict the \"Zero-th Frame\" for resyncing!\n      const toDelFrameId = Object.keys(self.recentFrameCache)[1];\n      // cc.log(\"toDelFrameId is \" + toDelFrameId + \".\");\n      delete self.recentFrameCache[toDelFrameId];\n      --self.recentFrameCacheCurrentSize;\n    }\n    self.recentFrameCache[fullFrame.id] = fullFrame;\n    ++self.recentFrameCacheCurrentSize;\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (instance.resyncing) return;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n      ackingFrameId: instance.lastRoomDownsyncFrameId,\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  onDestroy() {\n    const self = this;\n    if (null == self.battleState || ALL_BATTLE_STATES.WAITING == self.battleState) {\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n    }\n    if (null != window.handleRoomDownsyncFrame) {\n      window.handleRoomDownsyncFrame = null;\n    }\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  _lazilyTriggerResync() {\n    if (true == this.resyncing) return;\n    this.resyncing = true;\n    if (ALL_MAP_STATES.SHOWING_MODAL_POPUP != this.state) {\n      if (null == this.resyncingHintPopup) {\n        this.resyncingHintPopup = this.popupSimplePressToGo(i18n.t(\"gameTip.resyncing\"));\n      }\n    }\n  },\n\n  _onResyncCompleted() {\n    if (false == this.resyncing) return;\n    cc.log(`_onResyncCompleted`);\n    this.resyncing = false;\n    if (null != this.resyncingHintPopup && this.resyncingHintPopup.parent) {\n      this.resyncingHintPopup.parent.removeChild(this.resyncingHintPopup);\n    }\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.scale);\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, simplePressToGoDialogNode);\n    setLocalZOrder(simplePressToGoDialogNode, 20);\n    return simplePressToGoDialogNode;\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n  },\n\n  _resetCurrentMatch() {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    self.countdownLabel.string = \"\";\n    if (self.playersNode) {\n      for (let i in self.playersNode) {\n        let node = self.playersNode[i];\n        node.getComponent(cc.Animation).play(\"Bottom\");\n        node.getComponent(\"SelfPlayer\").start();\n        node.active = true;\n      }\n    }\n    if (self.otherPlayerNodeDict) {\n      for (let i in self.otherPlayerNodeDict) {\n        let node = self.otherPlayerNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.selfPlayerNode && self.selfPlayerNode.parent) {\n      self.selfPlayerNode.parent.removeChild(self.selfPlayerNode);\n    }\n    if (self.treasureNodeDict) {\n      for (let i in self.treasureNodeDict) {\n        let node = self.treasureNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.trapBulletNodeDict) {\n      for (let i in self.trapBulletNodeDict) {\n        let node = self.trapBulletNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.trapNodeDict) {\n      for (let i in self.trapNodeDict) {\n        let node = self.trapNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n\n    if (self.acceleratorNodeDict) {\n      for (let i in self.acceleratorNodeDict) {\n        let node = self.acceleratorNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n\n    self.mainCameraNode = canvasNode.getChildByName(\"Main Camera\");\n    self.mainCamera = self.mainCameraNode.getComponent(cc.Camera);\n    for (let child of self.mainCameraNode.children) {\n      child.setScale(1 / self.mainCamera.zoomRatio);\n    }\n    self.widgetsAboveAllNode = self.mainCameraNode.getChildByName(\"WidgetsAboveAll\");\n    self.mainCameraNode.setPosition(cc.v2());\n\n    self.resyncing = false;\n    self.lastRoomDownsyncFrameId = 0;\n\n    self.recentFrameCache = {};\n    self.recentFrameCacheCurrentSize = 0;\n    self.recentFrameCacheMaxCount = 2048;\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n    self.acceleratorNodeDict = {};\n    if (self.findingPlayerNode) {\n      const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n      findingPlayerScriptIns.init();\n    }\n    self.showPopopInCanvas(self.gameRuleNode);\n    safelyAddChild(self.widgetsAboveAllNode, self.playersInfoNode);\n  },\n\n  onLoad() {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n    self.musicEffectManagerScriptIns = self.node.getComponent(\"MusicEffectManager\");\n    /** init requeired prefab started */\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\n    const resultPanelScriptIns = self.resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.mapScriptIns = self;\n    resultPanelScriptIns.onAgainClicked = () => {\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      self._resetCurrentMatch();\n      let shouldReconnectState = parseInt(cc.sys.localStorage.shouldReconnectState);\n      switch (shouldReconnectState) {\n        case 2:\n        case 1:\n          // Clicking too fast?\n          return;\n        default:\n          break;\n      }\n      if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) {\n        // Already disconnected. \n        cc.log(\"Ws session is already closed when `again/replay` button is clicked. Reconnecting now.\");\n        window.initPersistentSessionClient(self.initAfterWSConncted);\n      } else {\n        // Should disconnect first and reconnect within `window.handleClientSessionCloseOrError`. \n        cc.log(\"Ws session is not closed yet when `again/replay` button is clicked, closing the ws session now.\");\n        cc.sys.localStorage.shouldReconnectState = 2;\n        window.closeWSConnection();\n      }\n    };\n\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\n    self.gameRuleScriptIns.mapNode = self.node;\n\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\n    self.findingPlayerNode.width = self.canvasNode.width;\n    self.findingPlayerNode.height = self.canvasNode.height;\n    const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n    findingPlayerScriptIns.init();\n\n    self.playersInfoNode = cc.instantiate(self.playersInfoPrefab);\n\n    self.countdownToBeginGameNode = cc.instantiate(self.countdownToBeginGamePrefab);\n\n    self.playersNode = {};\n    const player1Node = cc.instantiate(self.player1Prefab);\n    const player2Node = cc.instantiate(self.player2Prefab);\n    Object.assign(self.playersNode, {\n      1: player1Node\n    });\n    Object.assign(self.playersNode, {\n      2: player2Node\n    });\n    /** init requeired prefab ended */\n\n    self.clientUpsyncFps = 20;\n    self._resetCurrentMatch();\n\n    const tiledMapIns = self.node.getComponent(cc.TiledMap);\n    const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n    for (let frameAnim of boundaryObjs.frameAnimations) {\n      const animNode = cc.instantiate(self.tiledAnimPrefab);\n      const anim = animNode.getComponent(cc.Animation);\n      animNode.setPosition(frameAnim.posInMapNode);\n      animNode.width = frameAnim.sizeInMapNode.width;\n      animNode.height = frameAnim.sizeInMapNode.height;\n      animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n      animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n      safelyAddChild(self.node, animNode);\n      setLocalZOrder(animNode, 5);\n      anim.addClip(frameAnim.animationClip, \"default\");\n      anim.play(\"default\");\n    }\n\n    self.barrierColliders = [];\n    for (let boundaryObj of boundaryObjs.barriers) {\n      const newBarrier = cc.instantiate(self.barrierPrefab);\n      const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n      newBarrier.setPosition(newBoundaryOffsetInMapNode);\n      newBarrier.setAnchorPoint(cc.v2(0, 0));\n      const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n      newBarrierColliderIns.points = [];\n      for (let p of boundaryObj) {\n        newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n      }\n      self.barrierColliders.push(newBarrierColliderIns);\n      self.node.addChild(newBarrier);\n    }\n    const allLayers = tiledMapIns.getLayers();\n    for (let layer of allLayers) {\n      const layerType = layer.getProperty(\"type\");\n      switch (layerType) {\n        case \"normal\":\n          setLocalZOrder(layer.node, 0);\n          break;\n        case \"barrier_and_shelter\":\n          setLocalZOrder(layer.node, 3);\n          break;\n        default:\n          break;\n      }\n    }\n\n    const allObjectGroups = tiledMapIns.getObjectGroups();\n    for (let objectGroup of allObjectGroups) {\n      const objectGroupType = objectGroup.getProperty(\"type\");\n      switch (objectGroupType) {\n        case \"barrier_and_shelter\":\n          setLocalZOrder(objectGroup.node, 3);\n          break;\n        default:\n          break;\n      }\n    }\n\n    for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n      const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n      const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n      newShelter.setPosition(newBoundaryOffsetInMapNode);\n      newShelter.setAnchorPoint(cc.v2(0, 0));\n      const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n      newShelterColliderIns.points = [];\n      for (let p of boundaryObj) {\n        newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n      }\n      self.node.addChild(newShelter);\n    }\n\n    window.handleClientSessionCloseOrError = function() {\n      let shouldReconnectState = parseInt(cc.sys.localStorage.shouldReconnectState);\n      switch (shouldReconnectState) {\n        case 2:\n          shouldReconnectState = 1;\n          cc.sys.localStorage.shouldReconnectState = shouldReconnectState;\n          cc.log(\"Reconnecting because 2 == shouldReconnectState and it's now set to 1.\");\n          window.initPersistentSessionClient(self.initAfterWSConncted);\n          return;\n        case 1:\n          cc.log(\"Neither reconnecting nor alerting because 1 == shouldReconnectState and it's now removed.\");\n          cc.sys.localStorage.removeItem(\"shouldReconnectState\");\n          return;\n        default:\n          break;\n      }\n      if (null == self.battleState || ALL_BATTLE_STATES.WAITING == self.battleState) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n      }\n    };\n\n    self.initAfterWSConncted = () => {\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      self._inputControlEnabled = false;\n      self.setupInputControls();\n      window.handleRoomDownsyncFrame = function(diffFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n        const refFrameId = diffFrame.refFrameId;\n        if (-99 == refFrameId) { //显示倒计时\n          self.matchPlayersFinsihed(diffFrame.players);\n        } else if (-98 == refFrameId) { //显示匹配玩家\n          if (window.initWxSdk) {\n            window.initWxSdk();\n          }\n          const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n          if (!self.findingPlayerNode.parent) {\n            self.showPopopInCanvas(self.findingPlayerNode);\n          }\n          findingPlayerScriptIns.updatePlayersInfo(diffFrame.players);\n          return;\n        }\n        const frameId = diffFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        const isInitiatingFrame = (0 > self.recentFrameCacheCurrentSize || 0 == refFrameId);\n        /*\n        if (frameId % 300 == 0) {\n          // WARNING: For testing only!\n          if (0 < frameId) {\n            self._lazilyTriggerResync(); \n          }\n          cc.log(`${JSON.stringify(diffFrame)}`);\n        }\n        */\n        const cachedFullFrame = self.recentFrameCache[refFrameId];\n        if (\n          !isInitiatingFrame\n          && self.useDiffFrameAlgo\n          && (refFrameId > 0 || 0 < self.recentFrameCacheCurrentSize) // Critical condition to differentiate between \"BattleStarted\" or \"ShouldResync\". \n          && null == cachedFullFrame\n        ) {\n          self._lazilyTriggerResync();\n          // Later incoming diffFrames will all suffice that `0 < self.recentFrameCacheCurrentSize && null == cachedFullFrame`, until `this._onResyncCompleted` is successfully invoked.\n          return;\n        }\n\n        if (isInitiatingFrame && 0 == refFrameId) {\n          // Reaching here implies that you've received the resync frame.\n          self._onResyncCompleted();\n        }\n        let countdownNanos = diffFrame.countdownNanos;\n        if (countdownNanos < 0)\n          countdownNanos = 0;\n        const countdownSeconds = parseInt(countdownNanos / 1000000000);\n        if (isNaN(countdownSeconds)) {\n          cc.log(`countdownSeconds is NaN for countdownNanos == ${countdownNanos}.`);\n        }\n        // if(self.musicEffectManagerScriptIns && 10 == countdownSeconds ) {\n        //   self.musicEffectManagerScriptIns.playCountDown10SecToEnd();\n        // }\n        self.countdownLabel.string = countdownSeconds;\n        const roomDownsyncFrame = (\n        (isInitiatingFrame || !self.useDiffFrameAlgo)\n          ?\n          diffFrame\n          :\n          self._generateNewFullFrame(cachedFullFrame, diffFrame)\n        );\n        if (countdownNanos <= 0) {\n          self.onBattleStopped(roomDownsyncFrame.players);\n          return;\n        }\n        self._dumpToFullFrameCache(roomDownsyncFrame);\n        const sentAt = roomDownsyncFrame.sentAt;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n              joinIndex: immediateSelfPlayerInfo.joinIndex,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n        self.acceleratorInfoDict = {};\n        const accelartors = roomDownsyncFrame.speedShoes;\n\t\t\t\tconst accLocalIdStrList = Object.keys(accelartors);\n\t\t\t\tfor (let i = 0; i < accLocalIdStrList.length; ++i) {\n\t\t\t\t\tconst k = accLocalIdStrList[i];\n\t\t\t\t\tconst accLocalIdInBattle = parseInt(k);\n\t\t\t\t\tconst accInfo = accelartors[k];\n\t\t\t\t\tself.acceleratorInfoDict[accLocalIdInBattle] = accInfo;\n\t\t\t\t}\n\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(i18n.t(\"gameTip.start\"));\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n      // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    }\n\n    /*\n    * The following code snippet is a dirty fix.\n    */\n    let expectedRoomId = null;\n    const qDict = window.getQueryParamDict();\n    if (qDict) {\n      expectedRoomId = qDict[\"expectedRoomId\"];\n    } else {\n      if (window.history && window.history.state) {\n        expectedRoomId = window.history.state.expectedRoomId;\n      }\n    }\n    if (expectedRoomId) {\n      self.gameRuleNode.active = false;\n      window.initPersistentSessionClient(self.initAfterWSConncted);\n      return;\n    } else {\n      if (cc.sys.localStorage.boundRoomId) {\n        self.gameRuleNode.active = false;\n        window.initPersistentSessionClient(self.initAfterWSConncted);\n        return;\n      }\n    }\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    if (self.musicEffectManagerScriptIns)\n      self.musicEffectManagerScriptIns.playBGM();\n    const canvasNode = self.canvasNode;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    self.enableInputControls();\n    if (self.countdownToBeginGameNode.parent) {\n      self.countdownToBeginGameNode.parent.removeChild(self.countdownToBeginGameNode);\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n    }\n  },\n\n  onBattleStopped(players) {\n    const self = this;\n    if (self.musicEffectManagerScriptIns) {\n      self.musicEffectManagerScriptIns.stopAllMusic();\n    }\n    const canvasNode = self.canvasNode;\n    const resultPanelNode = self.resultPanelNode;\n    const resultPanelScriptIns = resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.showPlayerInfo(players);\n    window.clearBoundRoomIdInBothVolatileAndPersistentStorage(); //清除cached boundRoomId\n    // Such that it doesn't execute \"update(dt)\" anymore. \n    self.selfPlayerNode.active = false;\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.showPopopInCanvas(resultPanelNode);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const joinIndex = this.selfPlayerInfo.joinIndex;\n    const newPlayerNode = this.playersNode[joinIndex];\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n    instance.selfPlayerScriptIns.showArrowTipNode();\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n      playersScriptIns.updateData(self.selfPlayerInfo);\n      if (null != self.selfPlayerScriptIns) {\n        self.selfPlayerScriptIns.updateSpeed(self.selfPlayerInfo.speed);\n      }\n    }\n\n    let toRemoveAcceleratorNodeDict = {};\n    Object.assign(toRemoveAcceleratorNodeDict, self.acceleratorNodeDict);\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    /*\n    * NOTE: At the beginning of each GUI update cycle, mark all `self.trapBulletNode` as `toRemoveBulletNode`, while only those that persist in `self.trapBulletInfoDict` are NOT finally removed. This approach aims to reduce the lines of codes for coping with node removal in the RoomDownsyncFrame algorithm.\n    */\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n      //更新玩家信息展示\n      if (null != cachedPlayerData) {\n        const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n        playersScriptIns.updateData(cachedPlayerData);\n      }\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = self.playersNode[cachedPlayerData.joinIndex];\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aControlledOtherPlayerScriptIns = targetNode.getComponent(\"SelfPlayer\");\n      aControlledOtherPlayerScriptIns.updateSpeed(cachedPlayerData.speed);\n\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        aControlledOtherPlayerScriptIns.activeDirection = {\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag > toTeleportDisThreshold) {\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          aControlledOtherPlayerScriptIns.activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          if (isNaN(normalizedDir.dx) || isNaN(normalizedDir.dy)) {\n            aControlledOtherPlayerScriptIns.activeDirection = {\n              dx: 0,\n              dy: 0,\n            };\n          } else {\n            aControlledOtherPlayerScriptIns.activeDirection = normalizedDir;\n          }\n        }\n      }\n\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        aControlledOtherPlayerScriptIns.scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n    }\n\n    // 更新加速鞋显示 \n    for (let k in self.acceleratorInfoDict) {\n      const accLocalIdInBattle = parseInt(k);\n      const acceleratorInfo = self.acceleratorInfoDict[accLocalIdInBattle];\n      const newPos = cc.v2(\n        acceleratorInfo.x,\n        acceleratorInfo.y\n      );\n      let targetNode = self.acceleratorNodeDict[accLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.acceleratorPrefab);\n        self.acceleratorNodeDict[accLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      if (null != toRemoveAcceleratorNodeDict[accLocalIdInBattle]) {\n        delete toRemoveAcceleratorNodeDict[accLocalIdInBattle];\n      }\n    }\n    // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.x,\n        trapInfo.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n    }\n\n    // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.x,\n        bulletInfo.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aBulletScriptIns = targetNode.getComponent(\"Bullet\");\n      aBulletScriptIns.localIdInBattle = bulletLocalIdInBattle;\n      aBulletScriptIns.linearSpeed = bulletInfo.linearSpeed * 1000000000; // The `bullet.LinearSpeed` on server-side is denoted in pts/nanoseconds. \n\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y,\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (aBulletScriptIns.linearSpeed * dt * 100);\n      const notToMoveDisThreshold = (aBulletScriptIns.linearSpeed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        aBulletScriptIns.activeDirection = {\n          dx: 0,\n          dy: 0,\n        };\n      } else {\n        if (toMoveByVecMag > toTeleportDisThreshold) {\n          cc.log(`Bullet ${bulletLocalIdInBattle} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          aBulletScriptIns.activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          if (isNaN(normalizedDir.dx) || isNaN(normalizedDir.dy)) {\n            aBulletScriptIns.activeDirection = {\n              dx: 0,\n              dy: 0,\n            };\n          } else {\n            aBulletScriptIns.activeDirection = normalizedDir;\n          }\n        }\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n    }\n\n    // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.x,\n        treasureInfo.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        const treasureNodeScriptIns = targetNode.getComponent(\"Treasure\");\n        treasureNodeScriptIns.setData(treasureInfo);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureScriptIns = toRemoveTreasureNodeDict[k].getComponent(\"Treasure\");\n      treasureScriptIns.playPickedUpAnimAndDestroy();\n      if (self.musicEffectManagerScriptIns) {\n        if (2 == treasureScriptIns.type) {\n          self.musicEffectManagerScriptIns.playHighScoreTreasurePicked();\n        } else {\n          self.musicEffectManagerScriptIns.playTreasurePicked();\n        }\n      }\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed accelerators.\n    for (let k in toRemoveAcceleratorNodeDict) {\n      const accLocalIdInBattle = parseInt(k);\n      toRemoveAcceleratorNodeDict[k].parent.removeChild(toRemoveAcceleratorNodeDict[k]);\n      delete self.acceleratorNodeDict[accLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (self.musicEffectManagerScriptIns) {\n        self.musicEffectManagerScriptIns.playCrashedByTrapBullet();\n      }\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      window.closeWSConnection();\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.showPopopInCanvas(self.confirmLogoutNode);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n\n  initWSConnection(evt, cb) {\n    const self = this;\n    window.initPersistentSessionClient(self.initAfterWSConncted);\n    if (cb) {\n      cb()\n    }\n  },\n\n  showPopopInCanvas(toShowNode) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, toShowNode);\n    setLocalZOrder(toShowNode, 10);\n  },\n\n  matchPlayersFinsihed(players) {\n    const self = this;\n    const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n    findingPlayerScriptIns.updatePlayersInfo(players);\n    window.setTimeout(() => {\n      if (self.findingPlayerNode.parent) {\n        self.findingPlayerNode.parent.removeChild(self.findingPlayerNode);\n        self.transitToState(ALL_MAP_STATES.VISUAL);\n        for (let i in players) {\n          //更新在线玩家信息面板的信息\n          const playerInfo = players[i];\n          const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n          playersScriptIns.updateData(playerInfo);\n        }\n      }\n      const countDownScriptIns = self.countdownToBeginGameNode.getComponent(\"CountdownToBeginGame\");\n      countDownScriptIns.setData();\n      self.showPopopInCanvas(self.countdownToBeginGameNode);\n      return;\n    }, 2000);\n  },\n});\n"]}