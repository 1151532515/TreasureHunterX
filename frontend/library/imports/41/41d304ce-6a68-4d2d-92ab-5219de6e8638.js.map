{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","canvasNode","type","Node","default","tiledAnimPrefab","Prefab","selfPlayerPrefab","treasurePrefab","trapPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","selfPlayerIdLabel","Label","boundRoomIdLabel","countdownLabel","selfPlayerScoreLabel","otherPlayerScoreIndicatorPrefab","trapBulletPrefab","_onPerUpsyncFrame","instance","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","id","dir","dx","parseFloat","dy","x","selfPlayerNode","y","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","self","upsyncLoopInterval","clearInterval","inputControlTimer","popupSimplePressToGo","labelString","state","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","getScale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","onLoad","lastRoomDownsyncFrameId","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","mapNode","node","parent","battleState","otherPlayerCachedDataDict","otherPlayerNodeDict","treasureInfoDict","treasureNodeDict","trapInfoDict","trapBulletInfoDict","trapBulletNodeDict","trapNodeDict","scoreInfoDict","confirmLogoutNode","width","height","clientUpsyncFps","handleClientSessionCloseOrError","initPersistentSessionClient","tiledMapIns","TiledMap","parse","sys","localStorage","selfPlayer","Object","assign","playerId","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","sizeInMapNode","origSize","setAnchorPoint","setLocalZOrder","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleRoomDownsyncFrame","roomDownsyncFrame","frameId","countdownNanos","onBattleStopped","parseInt","toString","sentAt","refFrameId","players","playerIdStrList","keys","i","length","k","immediateSelfPlayerInfo","speed","score","anotherPlayer","treasures","treasuresLocalIdStrList","treasureLocalIdInBattle","treasureInfo","traps","trapsLocalIdStrList","trapLocalIdInBattle","trapInfo","bullets","bulletsLocalIdStrList","bulletLocalIdInBattle","bulletInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","scheduleNewDirection","newPlayerNode","toStartWithPos","update","dt","canvasParentNode","boundRoomId","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","scoreNode","debugInfoNode","playerScore","targetNode","newScheduledDirection","discretizeDirection","joyStickEps","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","log","normalizedDir","pickupBoundary","anchor","immediatePosition","getNumberOfRunningActions","durationSeconds","runAction","moveTo","s","byClick","localClearance","closeWSConnection","clearBoundRoomIdInBothVolatileAndPersistentStorage","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    selfPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    npcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    type2NpcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    selfPlayerIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    selfPlayerScoreLabel: {\n      type: cc.Label,\n      default: null\n    },\n    otherPlayerScoreIndicatorPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    trapBulletPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  onDestroy() {\n    const self = this;\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    if (ALL_MAP_STATES.VISUAL != self.state) {\n      return;\n    }\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, simplePressToGoDialogNode);\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s Will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n  },\n\n  //onLoad\n  onLoad() {\n    const self = this;\n    self.lastRoomDownsyncFrameId = 0;\n\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n    self.scoreInfoDict = {};\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n    self.confirmLogoutNode.width = canvasNode.width;\n    self.confirmLogoutNode.height = canvasNode.height;\n\n    self.clientUpsyncFps = 20;\n    self.upsyncLoopInterval = null;\n\n    window.handleClientSessionCloseOrError = function() {\n      self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n    };\n\n    initPersistentSessionClient(() => {\n      self.state = ALL_MAP_STATES.VISUAL;\n      const tiledMapIns = self.node.getComponent(cc.TiledMap);\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      this._inputControlEnabled = false;\n      self.setupInputControls();\n\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n      for (let frameAnim of boundaryObjs.frameAnimations) {\n        const animNode = cc.instantiate(self.tiledAnimPrefab);\n        const anim = animNode.getComponent(cc.Animation);\n        animNode.setPosition(frameAnim.posInMapNode);\n        animNode.width = frameAnim.sizeInMapNode.width;\n        animNode.height = frameAnim.sizeInMapNode.height;\n        animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n        safelyAddChild(self.node, animNode);\n        setLocalZOrder(animNode, 5);\n        anim.addClip(frameAnim.animationClip, \"default\");\n        anim.play(\"default\");\n      }\n\n      self.barrierColliders = [];\n      for (let boundaryObj of boundaryObjs.barriers) {\n        const newBarrier = cc.instantiate(self.barrierPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n        newBarrierColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.barrierColliders.push(newBarrierColliderIns);\n        self.node.addChild(newBarrier);\n      }\n\n      const allLayers = tiledMapIns.getLayers();\n      for (let layer of allLayers) {\n        const layerType = layer.getProperty(\"type\");\n        switch (layerType) {\n          case \"normal\":\n            setLocalZOrder(layer.node, 0);\n            break;\n          case \"barrier_and_shelter\":\n            setLocalZOrder(layer.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      const allObjectGroups = tiledMapIns.getObjectGroups();\n      for (let objectGroup of allObjectGroups) {\n        const objectGroupType = objectGroup.getProperty(\"type\");\n        switch (objectGroupType) {\n          case \"barrier_and_shelter\":\n            setLocalZOrder(objectGroup.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (this.joystickInputControllerNode.parent !== this.node.parent.parent.getChildByName('JoystickContainer')) {\n        this.joystickInputControllerNode.parent = this.node.parent.parent.getChildByName('JoystickContainer');\n      }\n      this.joystickInputControllerNode.parent.width = this.node.parent.width * 0.5;\n      this.joystickInputControllerNode.parent.height = this.node.parent.height;\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newShelter.setPosition(newBoundaryOffsetInMapNode);\n        newShelter.setAnchorPoint(cc.v2(0, 0));\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n        newShelterColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.node.addChild(newShelter);\n      }\n\n      window.handleRoomDownsyncFrame = function(roomDownsyncFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n\n        const frameId = roomDownsyncFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        if (roomDownsyncFrame.countdownNanos == -1) {\n          self.onBattleStopped();\n          return;\n        }\n        self.countdownLabel.string = parseInt(roomDownsyncFrame.countdownNanos / 1000000000).toString();\n        const sentAt = roomDownsyncFrame.sentAt;\n        const refFrameId = roomDownsyncFrame.refFrameId;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n//初始化trapInfo\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n//初始化trapBulletsInfo\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(\"Battle started!\");\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n      // TODO: Cope with FullFrame reconstruction by `refFrameId` and a cache of recent FullFrames.\n      // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    });\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.enableInputControls();\n  },\n\n  onBattleStopped() {\n    const self = this;\n    self.selfPlayerScriptIns.scheduleNewDirection({\n      dx: 0,\n      dy: 0\n    });\n    self.disableInputControls();\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.alertForGoingBackToLoginScene(\"Battle stopped!\", self, false);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const newPlayerNode = cc.instantiate(instance.selfPlayerPrefab);\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      self.selfPlayerIdLabel.string = self.selfPlayerInfo.id;\n      const score  = self.selfPlayerInfo.score ? self.selfPlayerInfo.score : 0 \n      self.selfPlayerScoreLabel.string = score;\n    }\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n     //显示分数\n     if(!self.scoreInfoDict[playerId]){\n        const scoreNode = cc.instantiate(self.otherPlayerScoreIndicatorPrefab);  \n        const debugInfoNode = canvasParentNode.getChildByName(\"DebugInfo\");\n        scoreNode.getChildByName(\"title\").getComponent(cc.Label).string = \"player\"+cachedPlayerData.id+\"'s score:\";\n        safelyAddChild(debugInfoNode,scoreNode);\n        self.scoreInfoDict[playerId] = scoreNode;\n      }\n      const playerScore  = !cachedPlayerData.score ? cachedPlayerData.score  : 0 \n      self.scoreInfoDict[playerId].getChildByName(\"OtherPlayerScoreLabel\").getComponent(cc.Label).string = playerScore;\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        targetNode.getComponent(\"SelfPlayer\").speed = cachedPlayerData.speed;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag >= toTeleportDisThreshold) {\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = normalizedDir;\n        }\n      }\n    }\n\n   // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.pickupBoundary.anchor.x,\n        trapInfo.pickupBoundary.anchor.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        /*\n        //初始化trap的标记\n        const pickupBoundary = trapInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n      \n    }\n\n   // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.immediatePosition.x,\n        bulletInfo.immediatePosition.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }else {\n        targetNode.setPosition(newPos);\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n   // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.pickupBoundary.anchor.x,\n        treasureInfo.pickupBoundary.anchor.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        \n        /* \n        //初始化treasure的标记\n        const pickupBoundary = treasureInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      toRemoveTreasureNodeDict[k].parent.removeChild(toRemoveTreasureNodeDict[k]);\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      if (byClick) {\n        /**\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\n        */\n        window.closeWSConnection();\n      }\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    const canvasNode = self.canvasNode;\n    self.confirmLogoutNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, self.confirmLogoutNode);\n    setLocalZOrder(self.confirmLogoutNode, 10);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n});\n"]}