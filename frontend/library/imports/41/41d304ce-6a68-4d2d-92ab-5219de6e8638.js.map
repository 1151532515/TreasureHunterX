{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","canvasNode","type","Node","default","tiledAnimPrefab","Prefab","selfPlayerPrefab","treasurePrefab","trapPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","selfPlayerIdLabel","Label","boundRoomIdLabel","countdownLabel","selfPlayerScoreLabel","otherPlayerScoreIndicatorPrefab","_onPerUpsyncFrame","instance","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","id","dir","dx","parseFloat","dy","x","selfPlayerNode","y","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","self","upsyncLoopInterval","clearInterval","inputControlTimer","popupSimplePressToGo","labelString","state","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","getScale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","onLoad","lastRoomDownsyncFrameId","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","mapNode","node","parent","battleState","otherPlayerCachedDataDict","otherPlayerNodeDict","treasureInfoDict","treasureNodeDict","trapInfoDict","trapNodeDict","scoreInfoDict","confirmLogoutNode","width","height","clientUpsyncFps","handleClientSessionCloseOrError","initPersistentSessionClient","tiledMapIns","TiledMap","parse","sys","localStorage","selfPlayer","Object","assign","playerId","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","sizeInMapNode","origSize","setAnchorPoint","setLocalZOrder","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleRoomDownsyncFrame","roomDownsyncFrame","frameId","countdownNanos","onBattleStopped","parseInt","toString","sentAt","refFrameId","players","playerIdStrList","keys","i","length","k","immediateSelfPlayerInfo","speed","score","anotherPlayer","treasures","treasuresLocalIdStrList","treasureLocalIdInBattle","treasureInfo","traps","trapsLocalIdStrList","trapLocalIdInBattle","trapInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","scheduleNewDirection","newPlayerNode","toStartWithPos","update","dt","canvasParentNode","boundRoomId","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","cachedPlayerData","newPos","scoreNode","debugInfoNode","playerScore","targetNode","newScheduledDirection","discretizeDirection","joyStickEps","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","log","normalizedDir","pickupBoundary","anchor","newColliderIns","point","getNumberOfRunningActions","durationSeconds","runAction","moveTo","s","byClick","localClearance","closeWSConnection","clearBoundRoomIdInBothVolatileAndPersistentStorage","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    selfPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    npcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    type2NpcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    selfPlayerIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    selfPlayerScoreLabel: {\n      type: cc.Label,\n      default: null\n    },\n    otherPlayerScoreIndicatorPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  onDestroy() {\n    const self = this;\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    if (ALL_MAP_STATES.VISUAL != self.state) {\n      return;\n    }\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, simplePressToGoDialogNode);\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s Will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n  },\n\n  //onLoad\n  onLoad() {\n    const self = this;\n    self.lastRoomDownsyncFrameId = 0;\n\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapNodeDict = {};\n    self.scoreInfoDict = {};\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n    self.confirmLogoutNode.width = canvasNode.width;\n    self.confirmLogoutNode.height = canvasNode.height;\n\n    self.clientUpsyncFps = 20;\n    self.upsyncLoopInterval = null;\n\n    window.handleClientSessionCloseOrError = function() {\n      self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n    };\n\n    initPersistentSessionClient(() => {\n      self.state = ALL_MAP_STATES.VISUAL;\n      const tiledMapIns = self.node.getComponent(cc.TiledMap);\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      this._inputControlEnabled = false;\n      self.setupInputControls();\n\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n      for (let frameAnim of boundaryObjs.frameAnimations) {\n        const animNode = cc.instantiate(self.tiledAnimPrefab);\n        const anim = animNode.getComponent(cc.Animation);\n        animNode.setPosition(frameAnim.posInMapNode);\n        animNode.width = frameAnim.sizeInMapNode.width;\n        animNode.height = frameAnim.sizeInMapNode.height;\n        animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n        safelyAddChild(self.node, animNode);\n        setLocalZOrder(animNode, 5);\n        anim.addClip(frameAnim.animationClip, \"default\");\n        anim.play(\"default\");\n      }\n\n      self.barrierColliders = [];\n      for (let boundaryObj of boundaryObjs.barriers) {\n        const newBarrier = cc.instantiate(self.barrierPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n        newBarrierColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.barrierColliders.push(newBarrierColliderIns);\n        self.node.addChild(newBarrier);\n      }\n\n      const allLayers = tiledMapIns.getLayers();\n      for (let layer of allLayers) {\n        const layerType = layer.getProperty(\"type\");\n        switch (layerType) {\n          case \"normal\":\n            setLocalZOrder(layer.node, 0);\n            break;\n          case \"barrier_and_shelter\":\n            setLocalZOrder(layer.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      const allObjectGroups = tiledMapIns.getObjectGroups();\n      for (let objectGroup of allObjectGroups) {\n        const objectGroupType = objectGroup.getProperty(\"type\");\n        switch (objectGroupType) {\n          case \"barrier_and_shelter\":\n            setLocalZOrder(objectGroup.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (this.joystickInputControllerNode.parent !== this.node.parent.parent.getChildByName('JoystickContainer')) {\n        this.joystickInputControllerNode.parent = this.node.parent.parent.getChildByName('JoystickContainer');\n      }\n      this.joystickInputControllerNode.parent.width = this.node.parent.width * 0.5;\n      this.joystickInputControllerNode.parent.height = this.node.parent.height;\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newShelter.setPosition(newBoundaryOffsetInMapNode);\n        newShelter.setAnchorPoint(cc.v2(0, 0));\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n        newShelterColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.node.addChild(newShelter);\n      }\n\n      window.handleRoomDownsyncFrame = function(roomDownsyncFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n\n        const frameId = roomDownsyncFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        if (roomDownsyncFrame.countdownNanos == -1) {\n          self.onBattleStopped();\n          return;\n        }\n        self.countdownLabel.string = parseInt(roomDownsyncFrame.countdownNanos / 1000000000).toString();\n        const sentAt = roomDownsyncFrame.sentAt;\n        const refFrameId = roomDownsyncFrame.refFrameId;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n//初始化trapInfo\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(\"Battle started!\");\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n      // TODO: Cope with FullFrame reconstruction by `refFrameId` and a cache of recent FullFrames.\n      // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    });\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.enableInputControls();\n  },\n\n  onBattleStopped() {\n    const self = this;\n    self.selfPlayerScriptIns.scheduleNewDirection({\n      dx: 0,\n      dy: 0\n    });\n    self.disableInputControls();\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.alertForGoingBackToLoginScene(\"Battle stopped!\", self, false);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const newPlayerNode = cc.instantiate(instance.selfPlayerPrefab);\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      self.selfPlayerIdLabel.string = self.selfPlayerInfo.id;\n      const score  = self.selfPlayerInfo.score ? self.selfPlayerInfo.score : 0 \n      self.selfPlayerScoreLabel.string = score;\n    }\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n     //显示分数\n     if(!self.scoreInfoDict[playerId]){\n        const scoreNode = cc.instantiate(self.otherPlayerScoreIndicatorPrefab);  \n        const debugInfoNode = canvasParentNode.getChildByName(\"DebugInfo\");\n        scoreNode.getChildByName(\"title\").getComponent(cc.Label).string = \"player\"+cachedPlayerData.id+\"'s score:\";\n        safelyAddChild(debugInfoNode,scoreNode);\n        self.scoreInfoDict[playerId] = scoreNode;\n      }\n      const playerScore  = !cachedPlayerData.score ? cachedPlayerData.score  : 0 \n      self.scoreInfoDict[playerId].getChildByName(\"OtherPlayerScoreLabel\").getComponent(cc.Label).string = playerScore;\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        targetNode.getComponent(\"SelfPlayer\").speed = cachedPlayerData.speed;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag >= toTeleportDisThreshold) {\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = normalizedDir;\n        }\n      }\n    }\n\n   // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.pickupBoundary.anchor.x,\n        trapInfo.pickupBoundary.anchor.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        //初始化trap的标记\n        const pickupBoundary = trapInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n           for (let point of pickupBoundary.points) {\n             const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n             newColliderIns.points.push(p);\n           }\n      }\n\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n   // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.pickupBoundary.anchor.x,\n        treasureInfo.pickupBoundary.anchor.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        //初始化treasure的标记\n        const pickupBoundary = treasureInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n           for (let point of pickupBoundary.points) {\n             const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n             newColliderIns.points.push(p);\n           }\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      toRemoveTreasureNodeDict[k].parent.removeChild(toRemoveTreasureNodeDict[k]);\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      if (byClick) {\n        /**\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\n        */\n        window.closeWSConnection();\n      }\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    const canvasNode = self.canvasNode;\n    self.confirmLogoutNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, self.confirmLogoutNode);\n    setLocalZOrder(self.confirmLogoutNode, 10);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n});\n"]}