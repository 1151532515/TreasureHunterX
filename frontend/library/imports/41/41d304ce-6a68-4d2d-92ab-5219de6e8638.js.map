{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","useDiffFrameAlgo","default","canvasNode","type","Node","tiledAnimPrefab","Prefab","player1Prefab","player2Prefab","treasurePrefab","trapPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","boundRoomIdLabel","Label","countdownLabel","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","countdownToBeginGamePrefab","playersInfoPrefab","_generateNewFullFrame","refFullFrame","diffFrame","newFullFrame","id","treasures","traps","bullets","players","playersLocalIdStrList","Object","keys","i","length","k","playerId","parseInt","removed","treasuresLocalIdStrList","treasureLocalIdInBattle","trapsLocalIdStrList","trapLocalIdInBattle","bulletsLocalIdStrList","bulletLocalIdInBattle","_dumpToFullFrameCache","fullFrame","self","recentFrameCacheCurrentSize","recentFrameCacheMaxCount","toDelFrameId","recentFrameCache","_onPerUpsyncFrame","instance","resyncing","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","dir","dx","parseFloat","dy","x","selfPlayerNode","y","ackingFrameId","lastRoomDownsyncFrameId","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","handleRoomDownsyncFrame","upsyncLoopInterval","clearInterval","inputControlTimer","_lazilyTriggerResync","state","resyncingHintPopup","popupSimplePressToGo","_onResyncCompleted","log","parent","removeChild","labelString","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","scale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","string","once","dismissDialog","bind","safelyAddChild","widgetsAboveAllNode","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","_resetCurrentMatch","mapNode","node","playersNode","Animation","play","start","active","otherPlayerNodeDict","treasureNodeDict","trapBulletNodeDict","trapNodeDict","mainCameraNode","mainCamera","Camera","children","child","zoomRatio","battleState","otherPlayerCachedDataDict","treasureInfoDict","trapInfoDict","trapBulletInfoDict","findingPlayerNode","findingPlayerScriptIns","showPopopInCanvas","gameRuleNode","playersInfoNode","onLoad","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","confirmLogoutNode","resultPanelNode","resultPanelScriptIns","mapScriptIns","onAgainClicked","shouldReconnectState","sys","localStorage","clientSession","readyState","WebSocket","OPEN","initPersistentSessionClient","initAfterWSConncted","closeWSConnection","gameRuleScriptIns","countdownToBeginGameNode","player1Node","player2Node","assign","clientUpsyncFps","tiledMapIns","TiledMap","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","posInMapNode","width","sizeInMapNode","height","origSize","setAnchorPoint","addClip","animationClip","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleClientSessionCloseOrError","removeItem","parse","selfPlayer","_inputControlEnabled","setupInputControls","refFrameId","matchPlayersFinsihed","updatePlayersInfo","frameId","isInitiatingFrame","cachedFullFrame","countdownNanos","countdownSeconds","isNaN","roomDownsyncFrame","onBattleStopped","sentAt","playerIdStrList","immediateSelfPlayerInfo","speed","score","joinIndex","anotherPlayer","treasureInfo","trapInfo","bulletInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","showPlayerInfo","clearBoundRoomIdInBothVolatileAndPersistentStorage","newPlayerNode","toStartWithPos","showArrowTipNode","update","dt","canvasParentNode","boundRoomId","playersScriptIns","updateData","updateSpeed","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","targetNode","aControlledOtherPlayerScriptIns","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","normalizedDir","newScheduledDirection","discretizeDirection","joyStickEps","scheduleNewDirection","aBulletScriptIns","localIdInBattle","linearSpeed","treasureNodeScriptIns","setData","getNumberOfRunningActions","durationSeconds","runAction","moveTo","treasureScriptIns","playPickedUpAnimAndDestroy","s","byClick","localClearance","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","initWSConnection","cb","toShowNode","playerInfo","countDownScriptIns"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    useDiffFrameAlgo: {\n      default: true\n    },\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    player1Prefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    player2Prefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    trapBulletPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    resultPanelPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    gameRulePrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    findingPlayerPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    countdownToBeginGamePrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    playersInfoPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n\n  },\n\n  _generateNewFullFrame: function(refFullFrame, diffFrame) {\n    let newFullFrame = {\n      id: diffFrame.id,\n      treasures: refFullFrame.treasures,\n      traps: refFullFrame.traps,\n      bullets: refFullFrame.bullets,\n      players: refFullFrame.players,\n    };\n\n    const players = diffFrame.players;\n    const playersLocalIdStrList = Object.keys(players);\n    for (let i = 0; i < playersLocalIdStrList.length; ++i) {\n      const k = playersLocalIdStrList[i];\n      const playerId = parseInt(k);\n      if (true == diffFrame.players[playerId].removed) {\n        // cc.log(`Player id == ${playerId} is removed.`);\n        delete newFullFrame.players[playerId];\n      } else {\n        newFullFrame.players[playerId] = diffFrame.players[playerId];\n      }\n    }\n\n    const treasures = diffFrame.treasures;\n    const treasuresLocalIdStrList = Object.keys(treasures);\n    for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n      const k = treasuresLocalIdStrList[i];\n      const treasureLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.treasures[treasureLocalIdInBattle].removed) {\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\n        delete newFullFrame.treasures[treasureLocalIdInBattle];\n      } else {\n        newFullFrame.treasures[treasureLocalIdInBattle] = diffFrame.treasures[treasureLocalIdInBattle];\n      }\n    }\n\n    const traps = diffFrame.traps;\n    const trapsLocalIdStrList = Object.keys(traps);\n    for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n      const k = trapsLocalIdStrList[i];\n      const trapLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.traps[trapLocalIdInBattle].removed) {\n        // cc.log(`Trap with localIdInBattle == ${trapLocalIdInBattle} is removed.`);\n        delete newFullFrame.traps[trapLocalIdInBattle];\n      } else {\n        newFullFrame.traps[trapLocalIdInBattle] = diffFrame.traps[trapLocalIdInBattle];\n      }\n    }\n\n    const bullets = diffFrame.bullets;\n    const bulletsLocalIdStrList = Object.keys(bullets);\n    for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n      const k = bulletsLocalIdStrList[i];\n      const bulletLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.bullets[bulletLocalIdInBattle].removed) {\n        // cc.log(`Bullet with localIdInBattle == ${bulletLocalIdInBattle} is removed.`);\n        delete newFullFrame.bullets[bulletLocalIdInBattle];\n      } else {\n        newFullFrame.bullets[bulletLocalIdInBattle] = diffFrame.bullets[bulletLocalIdInBattle];\n      }\n    }\n\n    return newFullFrame;\n  },\n\n  _dumpToFullFrameCache: function(fullFrame) {\n    const self = this;\n    while (self.recentFrameCacheCurrentSize >= self.recentFrameCacheMaxCount) {\n      // Trick here: never evict the \"Zero-th Frame\" for resyncing!\n      const toDelFrameId = Object.keys(self.recentFrameCache)[1];\n      // cc.log(\"toDelFrameId is \" + toDelFrameId + \".\");\n      delete self.recentFrameCache[toDelFrameId];\n      --self.recentFrameCacheCurrentSize;\n    }\n    self.recentFrameCache[fullFrame.id] = fullFrame;\n    ++self.recentFrameCacheCurrentSize;\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (instance.resyncing) return;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n      ackingFrameId: instance.lastRoomDownsyncFrameId,\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  onDestroy() {\n    const self = this;\n    if (null != window.handleRoomDownsyncFrame) {\n      window.handleRoomDownsyncFrame = null;\n    }\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  _lazilyTriggerResync() {\n    if (true == this.resyncing) return;\n    this.resyncing = true;\n    if (ALL_MAP_STATES.SHOWING_MODAL_POPUP != this.state) {\n      if (null == this.resyncingHintPopup) {\n        this.resyncingHintPopup = this.popupSimplePressToGo(\"Resyncing your battle, please wait...\");\n      }\n    }\n  },\n\n  _onResyncCompleted() {\n    if (false == this.resyncing) return;\n    cc.log(`_onResyncCompleted`);\n    this.resyncing = false;\n    if (null != this.resyncingHintPopup && this.resyncingHintPopup.parent) {\n      this.resyncingHintPopup.parent.removeChild(this.resyncingHintPopup);\n    }\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.scale);\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, simplePressToGoDialogNode);\n    setLocalZOrder(simplePressToGoDialogNode, 20);\n    return simplePressToGoDialogNode;\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n  },\n\n  _resetCurrentMatch() {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    self.countdownLabel.string = \"\";\n    if(self.playersNode) {\n      for (let i in self.playersNode) {\n        let node = self.playersNode[i];\n        node.getComponent(cc.Animation).play(\"Bottom\");\n        node.getComponent(\"SelfPlayer\").start();  \n        node.active = true;\n      }\n    }\n    if (self.otherPlayerNodeDict) {\n      for (let i in self.otherPlayerNodeDict) {\n        let node = self.otherPlayerNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.selfPlayerNode && self.selfPlayerNode.parent) {\n      self.selfPlayerNode.parent.removeChild(self.selfPlayerNode);\n    }\n    if(self.treasureNodeDict) {\n      for (let i in self.treasureNodeDict) {\n        let node = self.treasureNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if(self.trapBulletNodeDict) {\n      for (let i in self.trapBulletNodeDict) {\n        let node = self.trapBulletNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if(self.trapNodeDict) {\n      for (let i in self.trapNodeDict) {\n      let node = self.trapNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n\n    self.mainCameraNode = canvasNode.getChildByName(\"Main Camera\");\n    self.mainCamera = self.mainCameraNode.getComponent(cc.Camera);\n    for (let child of self.mainCameraNode.children) {\n      child.setScale(1 / self.mainCamera.zoomRatio);\n    }\n    self.widgetsAboveAllNode = self.mainCameraNode.getChildByName(\"WidgetsAboveAll\");\n    self.mainCameraNode.setPosition(cc.v2());\n\n    self.resyncing = false;\n    self.lastRoomDownsyncFrameId = 0;\n\n    self.recentFrameCache = {};\n    self.recentFrameCacheCurrentSize = 0;\n    self.recentFrameCacheMaxCount = 2048;\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n    if (self.findingPlayerNode) {\n      const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");  \n      findingPlayerScriptIns.init();\n    }\n    self.showPopopInCanvas(self.gameRuleNode);\n    safelyAddChild(self.widgetsAboveAllNode, self.playersInfoNode);\n  },\n\n  onLoad() {\n    const self = this;\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    /** init requeired prefab started */\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\n    const resultPanelScriptIns = self.resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.mapScriptIns = self;\n    resultPanelScriptIns.onAgainClicked = () => {\n      self._resetCurrentMatch();\n      let shouldReconnectState = parseInt(cc.sys.localStorage.shouldReconnectState); \n      switch (shouldReconnectState) {\n        case 2:\n        case 1:\n          // Clicking too fast?\n          return;\n        default:\n          break;\n      }\n      if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) {\n        // Already disconnected. \n        cc.log(\"Ws session is already closed when `again/replay` button is clicked. Reconnecting now.\");\n        window.initPersistentSessionClient(self.initAfterWSConncted);\n      } else {\n        // Should disconnect first and reconnect within `window.handleClientSessionCloseOrError`. \n        cc.log(\"Ws session is not closed yet when `again/replay` button is clicked, closing the ws session now.\");\n        cc.sys.localStorage.shouldReconnectState = 2;\n        window.closeWSConnection();\n      }\n    };\n\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\n    self.gameRuleScriptIns.mapNode = self.node;\n\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\n    const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n    findingPlayerScriptIns.init();\n\n    self.playersInfoNode = cc.instantiate(self.playersInfoPrefab);\n\n    self.countdownToBeginGameNode = cc.instantiate(self.countdownToBeginGamePrefab);\n\n    self.playersNode = {};\n    const player1Node = cc.instantiate(self.player1Prefab);\n    const player2Node = cc.instantiate(self.player2Prefab);\n    Object.assign(self.playersNode, {\n      1: player1Node\n    });\n    Object.assign(self.playersNode, {\n      2: player2Node\n    });\n    /** init requeired prefab ended */\n\n    self.clientUpsyncFps = 20;\n    self._resetCurrentMatch();\n\n    const tiledMapIns = self.node.getComponent(cc.TiledMap);\n    const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n    for (let frameAnim of boundaryObjs.frameAnimations) {\n      const animNode = cc.instantiate(self.tiledAnimPrefab);\n      const anim = animNode.getComponent(cc.Animation);\n      animNode.setPosition(frameAnim.posInMapNode);\n      animNode.width = frameAnim.sizeInMapNode.width;\n      animNode.height = frameAnim.sizeInMapNode.height;\n      animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n      animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n      safelyAddChild(self.node, animNode);\n      setLocalZOrder(animNode, 5);\n      anim.addClip(frameAnim.animationClip, \"default\");\n      anim.play(\"default\");\n    }\n\n    self.barrierColliders = [];\n    for (let boundaryObj of boundaryObjs.barriers) {\n      const newBarrier = cc.instantiate(self.barrierPrefab);\n      const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n      newBarrier.setPosition(newBoundaryOffsetInMapNode);\n      newBarrier.setAnchorPoint(cc.v2(0, 0));\n      const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n      newBarrierColliderIns.points = [];\n      for (let p of boundaryObj) {\n        newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n      }\n      self.barrierColliders.push(newBarrierColliderIns);\n      self.node.addChild(newBarrier);\n    }\n    const allLayers = tiledMapIns.getLayers();\n    for (let layer of allLayers) {\n      const layerType = layer.getProperty(\"type\");\n      switch (layerType) {\n        case \"normal\":\n          setLocalZOrder(layer.node, 0);\n          break;\n        case \"barrier_and_shelter\":\n          setLocalZOrder(layer.node, 3);\n          break;\n        default:\n          break;\n      }\n    }\n\n    const allObjectGroups = tiledMapIns.getObjectGroups();\n    for (let objectGroup of allObjectGroups) {\n      const objectGroupType = objectGroup.getProperty(\"type\");\n      switch (objectGroupType) {\n        case \"barrier_and_shelter\":\n          setLocalZOrder(objectGroup.node, 3);\n          break;\n        default:\n          break;\n      }\n    }\n\n    for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n      const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n      const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n      newShelter.setPosition(newBoundaryOffsetInMapNode);\n      newShelter.setAnchorPoint(cc.v2(0, 0));\n      const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n      newShelterColliderIns.points = [];\n      for (let p of boundaryObj) {\n        newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n      }\n      self.node.addChild(newShelter);\n    }\n\n    window.handleClientSessionCloseOrError = function() {\n      let shouldReconnectState = parseInt(cc.sys.localStorage.shouldReconnectState);\n      switch (shouldReconnectState) {\n        case 2:\n          shouldReconnectState = 1;\n          cc.sys.localStorage.shouldReconnectState = shouldReconnectState;\n          cc.log(\"Reconnecting because 2 == shouldReconnectState and it's now set to 1.\");\n          window.initPersistentSessionClient(self.initAfterWSConncted);\n          return;\n        case 1:\n          cc.log(\"Neither reconnecting nor alerting because 1 == shouldReconnectState and it's now removed.\");\n          cc.sys.localStorage.removeItem(\"shouldReconnectState\");\n          return;\n        default:\n          break;\n      }\n      if (null == self.battleState || ALL_BATTLE_STATES.WAITING == self.battleState) {\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n      }\n    };\n\n    self.initAfterWSConncted = () => {\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      self._inputControlEnabled = false;\n      self.setupInputControls();\n\n      window.handleRoomDownsyncFrame = function(diffFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n        const refFrameId = diffFrame.refFrameId;\n        if (-99 == refFrameId) { //显示倒计时\n          self.matchPlayersFinsihed(diffFrame.players);\n        } else if (-98 == refFrameId) { //显示匹配玩家\n          const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n          if (!self.findingPlayerNode.parent) {\n            self.showPopopInCanvas(self.findingPlayerNode);\n          }\n          findingPlayerScriptIns.updatePlayersInfo(diffFrame.players);\n          return;\n        }\n        const frameId = diffFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        const isInitiatingFrame = (0 > self.recentFrameCacheCurrentSize || 0 == refFrameId);\n        /*\n        if (frameId % 300 == 0) {\n          // WARNING: For testing only!\n          if (0 < frameId) {\n            self._lazilyTriggerResync(); \n          }\n          cc.log(`${JSON.stringify(diffFrame)}`);\n        }\n        */\n        const cachedFullFrame = self.recentFrameCache[refFrameId];\n        if (\n          !isInitiatingFrame\n          && self.useDiffFrameAlgo\n          && (refFrameId > 0 || 0 < self.recentFrameCacheCurrentSize) // Critical condition to differentiate between \"BattleStarted\" or \"ShouldResync\". \n          && null == cachedFullFrame\n        ) {\n          self._lazilyTriggerResync();\n          // Later incoming diffFrames will all suffice that `0 < self.recentFrameCacheCurrentSize && null == cachedFullFrame`, until `this._onResyncCompleted` is successfully invoked.\n          return;\n        }\n\n        if (isInitiatingFrame && 0 == refFrameId) {\n          // Reaching here implies that you've received the resync frame.\n          self._onResyncCompleted();\n        }\n        let countdownNanos = diffFrame.countdownNanos;\n        if (countdownNanos < 0)\n          countdownNanos = 0;\n        const countdownSeconds = parseInt(countdownNanos / 1000000000);\n        if (isNaN(countdownSeconds)) {\n          cc.log(`countdownSeconds is NaN for countdownNanos == ${countdownNanos}.`);\n        }\n        self.countdownLabel.string = countdownSeconds;\n        const roomDownsyncFrame = (\n        (isInitiatingFrame || !self.useDiffFrameAlgo)\n          ?\n          diffFrame\n          :\n          self._generateNewFullFrame(cachedFullFrame, diffFrame)\n        );\n        if (countdownNanos <= 0) {\n          self.onBattleStopped(roomDownsyncFrame.players);\n          return;\n        }\n        self._dumpToFullFrameCache(roomDownsyncFrame);\n        const sentAt = roomDownsyncFrame.sentAt;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n              joinIndex: immediateSelfPlayerInfo.joinIndex,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(\"Battle started!\");\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n      // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    }\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    self.enableInputControls();\n    if (self.countdownToBeginGameNode.parent) {\n      self.countdownToBeginGameNode.parent.removeChild(self.countdownToBeginGameNode);\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n    }\n  },\n\n  onBattleStopped(players) {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    const resultPanelNode = self.resultPanelNode;\n    const resultPanelScriptIns = resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.showPlayerInfo(players);\n    window.clearBoundRoomIdInBothVolatileAndPersistentStorage(); //清除cached boundRoomId\n    // Such that it doesn't execute \"update(dt)\" anymore. \n    self.selfPlayerNode.active = false;\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.showPopopInCanvas(resultPanelNode);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const joinIndex = this.selfPlayerInfo.joinIndex;\n    const newPlayerNode = this.playersNode[joinIndex];\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n    instance.selfPlayerScriptIns.showArrowTipNode();\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n      playersScriptIns.updateData(self.selfPlayerInfo);\n      if (null != self.selfPlayerScriptIns) {\n        self.selfPlayerScriptIns.updateSpeed(self.selfPlayerInfo.speed);\n      }\n    }\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    /*\n    * NOTE: At the beginning of each GUI update cycle, mark all `self.trapBulletNode` as `toRemoveBulletNode`, while only those that persist in `self.trapBulletInfoDict` are NOT finally removed. This approach aims to reduce the lines of codes for coping with node removal in the RoomDownsyncFrame algorithm.\n    */\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n      //更新玩家信息展示\n      if (null != cachedPlayerData) {\n        const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n        playersScriptIns.updateData(cachedPlayerData);\n      }\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = self.playersNode[cachedPlayerData.joinIndex];\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aControlledOtherPlayerScriptIns = targetNode.getComponent(\"SelfPlayer\");\n      aControlledOtherPlayerScriptIns.updateSpeed(cachedPlayerData.speed);\n\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        aControlledOtherPlayerScriptIns.activeDirection = {\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag > toTeleportDisThreshold) {\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          aControlledOtherPlayerScriptIns.activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          if (isNaN(normalizedDir.dx) || isNaN(normalizedDir.dy)) {\n            aControlledOtherPlayerScriptIns.activeDirection = {\n              dx: 0,\n              dy: 0,\n            };\n          } else {\n            aControlledOtherPlayerScriptIns.activeDirection = normalizedDir;\n          } \n        }\n      }\n\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        aControlledOtherPlayerScriptIns.scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n    }\n\n    // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.x,\n        trapInfo.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n    }\n\n    // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.x,\n        bulletInfo.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      } \n      const aBulletScriptIns = targetNode.getComponent(\"Bullet\"); \n      aBulletScriptIns.localIdInBattle = bulletLocalIdInBattle;\n      aBulletScriptIns.linearSpeed = bulletInfo.linearSpeed * 1000000000; // The `bullet.LinearSpeed` on server-side is denoted in pts/nanoseconds. \n\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y,\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (aBulletScriptIns.linearSpeed * dt * 100);\n      const notToMoveDisThreshold = (aBulletScriptIns.linearSpeed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        aBulletScriptIns.activeDirection = {\n          dx: 0,\n          dy: 0,\n        };\n      } else {\n        if (toMoveByVecMag > toTeleportDisThreshold) {\n          cc.log(`Bullet ${bulletLocalIdInBattle} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          aBulletScriptIns.activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          if (isNaN(normalizedDir.dx) || isNaN(normalizedDir.dy)) {\n            aBulletScriptIns.activeDirection = {\n              dx: 0,\n              dy: 0,\n            };\n          } else {\n            aBulletScriptIns.activeDirection = normalizedDir;\n          } \n        }\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n    }\n\n    // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.x,\n        treasureInfo.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        const treasureNodeScriptIns = targetNode.getComponent(\"Treasure\");\n        treasureNodeScriptIns.setData(treasureInfo);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureScriptIns = toRemoveTreasureNodeDict[k].getComponent(\"Treasure\");\n      treasureScriptIns.playPickedUpAnimAndDestroy();\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      window.closeWSConnection();\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.showPopopInCanvas(self.confirmLogoutNode);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n\n  initWSConnection(evt, cb) {\n    const self = this;\n    window.initPersistentSessionClient(self.initAfterWSConncted);\n    if (cb) {\n      cb()\n    }\n  },\n\n  showPopopInCanvas(toShowNode) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, toShowNode);\n    setLocalZOrder(toShowNode, 10);\n  },\n\n  matchPlayersFinsihed(players) {\n    const self = this;\n    const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n    findingPlayerScriptIns.updatePlayersInfo(players);\n    window.setTimeout(() => {\n      if (self.findingPlayerNode.parent) {\n        self.findingPlayerNode.parent.removeChild(self.findingPlayerNode);\n        self.transitToState(ALL_MAP_STATES.VISUAL);\n        for (let i in players) {\n          //更新在线玩家信息面板的信息\n          const playerInfo = players[i];\n          const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n          playersScriptIns.updateData(playerInfo);\n        }\n      }\n      const countDownScriptIns = self.countdownToBeginGameNode.getComponent(\"CountdownToBeginGame\"); \n      countDownScriptIns.setData();\n      self.showPopopInCanvas(self.countdownToBeginGameNode);\n      return;\n    }, 2000);\n  },\n});\n"]}