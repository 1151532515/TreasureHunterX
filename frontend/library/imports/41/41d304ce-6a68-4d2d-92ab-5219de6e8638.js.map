{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","cc","Class","extends","Component","properties","selfPlayer","canvasNode","type","Node","default","tiledAnimPrefab","Prefab","selfPlayerPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","boundRoomIdLabel","Label","onDestroy","clearInterval","inputControlTimer","_onPerUpsyncFrame","instance","upsyncFrameData","id","selfPlayerId","dir","dPjX","parseFloat","ctrl","activeDirection","dPjY","x","y","wrapped","msgId","Date","now","act","data","clientSession","send","JSON","stringify","onLoad","self","mapNode","node","parent","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","otherPlayerNodeDict","confirmLogoutNode","instantiate","getComponent","width","height","clientUpsyncFps","upsyncLoopInterval","initPersistentSessionClient","state","tiledMapIns","TiledMap","parse","sys","localStorage","playerId","spawnSelfPlayer","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","setPosition","posInMapNode","sizeInMapNode","setScale","origSize","setAnchorPoint","v2","safelyAddChild","setLocalZOrder","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","getChildByName","sheltersZReducer","newShelter","newShelterColliderIns","setInterval","bind","handleDownsyncRoomFrame","roomFrame","frameId","sentAt","refFrameId","players","anotherPlayer","renderAnotherControlledPlayer","mapIns","log","targetNode","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","selfPlayerScriptIns","keyboardInputControllerScriptIns","newScheduledDirectionInWorldCoordinate","dx","dy","newScheduledDirectionInLocalCoordinate","scheduleNewDirection","enableInputControls","disableInputControls","newPlayer","uid","update","dt","boundRoomId","string","transitToState","s","logout","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","closeFlag","closeWSConnection","removeItem","loadScene","onLogoutClicked","evt","getScale","onLogoutConfirmationDismissed","removeChild"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    selfPlayer: null,\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    selfPlayerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    npcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    type2NpcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  onDestroy () {\n    clearInterval(this.inputControlTimer)\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this; \n    const upsyncFrameData = {\n      id: instance.selfPlayerId,\n      dir: {\n        dPjX: parseFloat(instance.ctrl.activeDirection.dPjX),\n        dPjY: parseFloat(instance.ctrl.activeDirection.dPjY),\n      },\n      x: instance.selfPlayer.x,\n      y: instance.selfPlayer.y, \n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData, \n    }\n    window.clientSession.send(JSON.stringify(wrapped)); \n  },\n\n  onLoad() {\n    const self = this;\n    self.msgId = 0;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    self.otherPlayerNodeDict = {};\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n    self.confirmLogoutNode.width = canvasNode.width;\n    self.confirmLogoutNode.height = canvasNode.height;\n\n    self.clientUpsyncFps = 24;\n    self.upsyncLoopInterval = null;\n\n    initPersistentSessionClient(() => {\n      self.state = ALL_MAP_STATES.VISUAL;\n      const tiledMapIns = self.node.getComponent(cc.TiledMap); \n      self.selfPlayerId = JSON.parse(cc.sys.localStorage.selfPlayer).playerId;\n      self.spawnSelfPlayer();\n      this._inputControlEnabled = true;\n      self.setupInputControls();\n\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node); \n      for (let frameAnim of boundaryObjs.frameAnimations) {\n        const animNode = cc.instantiate(self.tiledAnimPrefab);  \n        const anim = animNode.getComponent(cc.Animation); \n        animNode.setPosition(frameAnim.posInMapNode);\n        animNode.width = frameAnim.sizeInMapNode.width;\n        animNode.height = frameAnim.sizeInMapNode.height;\n        animNode.setScale(frameAnim.sizeInMapNode.width/frameAnim.origSize.width, frameAnim.sizeInMapNode.height/frameAnim.origSize.height);\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n        safelyAddChild(self.node, animNode);  \n        setLocalZOrder(animNode, 5);  \n        anim.addClip(frameAnim.animationClip, \"default\");\n        anim.play(\"default\");\n      } \n\n      self.barrierColliders = [];\n      for (let boundaryObj of boundaryObjs.barriers) {\n        const newBarrier = cc.instantiate(self.barrierPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y); \n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider); \n        newBarrierColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode)); \n        }  \n        self.barrierColliders.push(newBarrierColliderIns);\n        self.node.addChild(newBarrier);\n      }\n\n      const allLayers = tiledMapIns.getLayers();\n      for (let layer of allLayers) {\n        const layerType = layer.getProperty(\"type\"); \n        switch (layerType) {\n          case \"normal\":\n            setLocalZOrder(layer.node, 0);\n            break;\n          case \"barrier_and_shelter\":\n            setLocalZOrder(layer.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      const allObjectGroups = tiledMapIns.getObjectGroups(); \n      for (let objectGroup of allObjectGroups) {\n        const objectGroupType = objectGroup.getProperty(\"type\"); \n        switch (objectGroupType) {\n          case \"barrier_and_shelter\":\n            setLocalZOrder(objectGroup.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (this.joystickInputControllerNode.parent !== this.node.parent.parent.getChildByName('JoystickContainer')) {\n        this.joystickInputControllerNode.parent = this.node.parent.parent.getChildByName('JoystickContainer');\n      }\n      this.joystickInputControllerNode.parent.width = this.node.parent.width * 0.5;\n      this.joystickInputControllerNode.parent.height = this.node.parent.height;\n\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y); \n        newShelter.setPosition(newBoundaryOffsetInMapNode);\n        newShelter.setAnchorPoint(cc.v2(0, 0));\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider); \n        newShelterColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode)); \n        }  \n        self.node.addChild(newShelter);\n      }\n      self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n      window.handleDownsyncRoomFrame = function(roomFrame) {\n        const frameId = roomFrame.id;\n        const sentAt = roomFrame.sentAt;\n        const refFrameId = roomFrame.refFrameId;\n        const players = roomFrame.players;\n        for (let playerId in players) {\n          if (playerId == self.selfPlayer.id) break;\n          const anotherPlayer = players[playerId]; \n          self.renderAnotherControlledPlayer(self, anotherPlayer);\n        } \n      };\n    });\n  },\n\n  renderAnotherControlledPlayer: (mapIns, anotherPlayer) => {\n    const mapNode = mapIns.node;\n\n    cc.log(`Rendering player ${anotherPlayer.id}`)\n    let targetNode = mapIns.otherPlayerNodeDict[anotherPlayer.id];\n    if (!targetNode) {\n      targetNode = cc.instantiate(mapIns.selfPlayerPrefab);\n      targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n      mapNode.addChild(targetNode);\n      setLocalZOrder(targetNode, 5);\n      mapIns.otherPlayerNodeDict[anotherPlayer.id] = targetNode;\n    }\n    targetNode.setPosition(cc.v2(anotherPlayer.x, anotherPlayer.y));\n  }, \n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const selfPlayerScriptIns = instance.selfPlayer.getComponent(\"SelfPlayer\");\n    const keyboardInputControllerScriptIns = instance.keyboardInputControllerNode.getComponent(\"KeyboardControls\");\n\n    const ctrl = keyboardInputControllerScriptIns.activeDirection.dPjX || keyboardInputControllerScriptIns.activeDirection.dPjY ? keyboardInputControllerScriptIns : joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n\n      const newScheduledDirectionInWorldCoordinate = {\n        dx: ctrl.activeDirection.dPjX,\n        dy: ctrl.activeDirection.dPjY\n      };\n\n      const newScheduledDirectionInLocalCoordinate = newScheduledDirectionInWorldCoordinate;\n      selfPlayerScriptIns.scheduleNewDirection(newScheduledDirectionInLocalCoordinate);\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true; \n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const newPlayer = cc.instantiate(instance.selfPlayerPrefab);\n    newPlayer.uid = 0;\n    newPlayer.setPosition(cc.v2(0, 0));\n    newPlayer.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayer);\n\n    setLocalZOrder(newPlayer, 5);\n    instance.selfPlayer = newPlayer;\n  },\n\n  update(dt) {\n    const self = this;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;  \n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout() {\n    // Will be called within \"ConfirmLogou.js\".\n    const self = this;\n    const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n    const requestContent = {\n      intAuthToken: selfPlayer.intAuthToken\n    }\n    NetworkUtils.ajax({\n      url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n      type: \"POST\",\n      data: requestContent,\n      success: function(res) {\n        if (res.ret != constants.RET_CODE.OK) {\n          cc.log(`Logout failed: ${res}.`);\n        }\n        self.closeFlag = true;\n        window.closeWSConnection();\n        cc.sys.localStorage.removeItem('selfPlayer');\n        cc.director.loadScene('login');\n      }\n    });\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    const canvasNode = self.canvasNode;\n    self.confirmLogoutNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, self.confirmLogoutNode);\n    setLocalZOrder(self.confirmLogoutNode, 10);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n});\n\n"]}