{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","useDiffFrameAlgo","default","canvasNode","type","Node","tiledAnimPrefab","Prefab","player1Prefab","player2Prefab","pumpkinPrefab","treasurePrefab","trapPrefab","acceleratorPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","boundRoomIdLabel","Label","countdownLabel","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","countdownToBeginGamePrefab","playersInfoPrefab","guardTowerPrefab","forceBigEndianFloatingNumDecoding","_generateNewFullFrame","refFullFrame","diffFrame","newFullFrame","id","treasures","traps","bullets","players","speedShoes","pumpkin","guardTowers","playersLocalIdStrList","Object","keys","i","length","k","playerId","parseInt","removed","pumpkinsLocalIdStrList","pumpkinLocalIdInBattle","treasuresLocalIdStrList","treasureLocalIdInBattle","speedShoesLocalIdStrList","speedShoesLocalIdInBattle","trapsLocalIdStrList","trapLocalIdInBattle","bulletsLocalIdStrList","bulletLocalIdInBattle","log","accs","accsLocalIdStrList","accLocalIdInBattle","_dumpToFullFrameCache","fullFrame","self","recentFrameCacheCurrentSize","recentFrameCacheMaxCount","toDelFrameId","recentFrameCache","_onPerUpsyncFrame","instance","resyncing","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","dir","dx","parseFloat","dy","x","selfPlayerNode","y","ackingFrameId","lastRoomDownsyncFrameId","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","battleState","clearBoundRoomIdInBothVolatileAndPersistentStorage","handleRoomDownsyncFrame","upsyncLoopInterval","clearInterval","inputControlTimer","_lazilyTriggerResync","lastResyncingStartedAt","state","resyncingHintPopup","popupSimplePressToGo","t","_onResyncCompleted","resyncingDurationMillis","parent","removeChild","labelString","hideYesButton","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","scale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","string","once","dismissDialog","bind","active","safelyAddChild","widgetsAboveAllNode","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","_resetCurrentMatch","mapNode","node","playersNode","Animation","play","start","otherPlayerNodeDict","treasureNodeDict","trapBulletNodeDict","trapNodeDict","pumpkinNodeDict","acceleratorNodeDict","mainCameraNode","mainCamera","Camera","children","child","zoomRatio","pumpkinInfoDict","otherPlayerCachedDataDict","treasureInfoDict","trapInfoDict","trapBulletInfoDict","towerNodeDict","findingPlayerNode","findingPlayerScriptIns","showPopopInCanvas","gameRuleNode","playersInfoNode","onLoad","ready","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","musicEffectManagerScriptIns","confirmLogoutNode","resultPanelNode","width","height","resultPanelScriptIns","mapScriptIns","onAgainClicked","shouldReconnectState","sys","localStorage","getItem","clientSession","readyState","WebSocket","OPEN","initPersistentSessionClient","initAfterWSConncted","setItem","closeWSConnection","gameRuleScriptIns","countdownToBeginGameNode","player1Node","player2Node","assign","clientUpsyncFps","tiledMapIns","TiledMap","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","posInMapNode","sizeInMapNode","origSize","setAnchorPoint","addClip","animationClip","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleClientSessionCloseOrError","removeItem","console","warn","platform","WECHAT_GAME","loadScene","parse","_inputControlEnabled","setupInputControls","refFrameId","matchPlayersFinsihed","initWxSdk","updatePlayersInfo","frameId","isInitiatingFrame","cachedFullFrame","countdownNanos","countdownSeconds","isNaN","roomDownsyncFrame","onBattleStopped","sentAt","playerIdStrList","immediateSelfPlayerInfo","displayName","name","speed","score","joinIndex","anotherPlayer","pumpkinInfo","treasureInfo","acceleratorInfoDict","accelartors","accLocalIdStrList","accInfo","trapInfo","bulletInfo","guardTowerInfoDict","ids","localIdInBattle","tower","onBattleStarted","wxLifeCycleListenerSetted","query","wx","getLaunchOptionsSync","expectedRoomId","tryToJoinExpectedRoom","reconnectGameByExpectedRoomId","onShow","res","onHide","mode","expectedRoomIdFromQuery","qDict","getQueryParamDict","history","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","playBGM","spawnSelfPlayer","stopAllMusic","showPlayerInfo","clearInfo","newPlayerNode","toStartWithPos","showArrowTipNode","update","dt","canvasParentNode","boundRoomId","playersScriptIns","updateData","updateSpeed","toRemoveAcceleratorNodeDict","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemovePumpkinNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","targetNode","aControlledOtherPlayerScriptIns","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","normalizedDir","newScheduledDirection","discretizeDirection","joyStickEps","scheduleNewDirection","acceleratorInfo","towerInfo","rotation","startAtPoint","endAtPoint","error","radian","Math","PI","abs","atan","angleTemp","angle","aBulletScriptIns","linearSpeed","aPumpkinScriptIns","treasureNodeScriptIns","setData","getNumberOfRunningActions","durationSeconds","runAction","moveTo","treasureScriptIns","playPickedUpAnimAndDestroy","playHighScoreTreasurePicked","playTreasurePicked","playCrashedByTrapBullet","s","byClick","localClearance","selfPlayer","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","ret","RET_CODE","OK","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","initWSConnection","cb","toShowNode","playerInfo","countDownScriptIns"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    useDiffFrameAlgo: {\n      default: true\n    },\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    player1Prefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    player2Prefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    pumpkinPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    acceleratorPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    trapBulletPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    resultPanelPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    gameRulePrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    findingPlayerPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    countdownToBeginGamePrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    playersInfoPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    guardTowerPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    forceBigEndianFloatingNumDecoding: {\n      default: false,\n    },\n  },\n\n  _generateNewFullFrame: function(refFullFrame, diffFrame) {\n    let newFullFrame = {\n      id: diffFrame.id,\n      treasures: refFullFrame.treasures,\n      traps: refFullFrame.traps,\n      bullets: refFullFrame.bullets,\n      players: refFullFrame.players,\n      speedShoes: refFullFrame.speedShoes,\n      pumpkin: refFullFrame.pumpkin,\n      guardTowers: refFullFrame.guardTowers, //TODO: 根据diffFrame信息增删或者移动守护塔\n    };\n    const players = diffFrame.players;\n    const playersLocalIdStrList = Object.keys(players);\n    for (let i = 0; i < playersLocalIdStrList.length; ++i) {\n      const k = playersLocalIdStrList[i];\n      const playerId = parseInt(k);\n      if (true == diffFrame.players[playerId].removed) {\n        // cc.log(`Player id == ${playerId} is removed.`);\n        delete newFullFrame.players[playerId];\n      } else {\n        newFullFrame.players[playerId] = diffFrame.players[playerId];\n      }\n    }\n\n    const pumpkin = diffFrame.pumpkin;\n    const pumpkinsLocalIdStrList = Object.keys(pumpkin);\n    for (let i = 0; i < pumpkinsLocalIdStrList.length; ++i) {\n      const k = pumpkinsLocalIdStrList[i];\n      const pumpkinLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.pumpkin[pumpkinLocalIdInBattle].removed) {\n        delete newFullFrame.pumpkin[pumpkinLocalIdInBattle];\n      } else {\n        newFullFrame.pumpkin[pumpkinLocalIdInBattle] = diffFrame.pumpkin[pumpkinLocalIdInBattle];\n      }\n    }\n\n    const treasures = diffFrame.treasures;\n    const treasuresLocalIdStrList = Object.keys(treasures);\n    for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n      const k = treasuresLocalIdStrList[i];\n      const treasureLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.treasures[treasureLocalIdInBattle].removed) {\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\n        delete newFullFrame.treasures[treasureLocalIdInBattle];\n      } else {\n        newFullFrame.treasures[treasureLocalIdInBattle] = diffFrame.treasures[treasureLocalIdInBattle];\n      }\n    }\n\n    const speedShoes = diffFrame.speedShoes;\n    const speedShoesLocalIdStrList = Object.keys(speedShoes);\n    for (let i = 0; i < speedShoesLocalIdStrList.length; ++i) {\n      const k = speedShoesLocalIdStrList[i];\n      const speedShoesLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.speedShoes[speedShoesLocalIdInBattle].removed) {\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\n        delete newFullFrame.speedShoes[speedShoesLocalIdInBattle];\n      } else {\n        newFullFrame.speedShoes[speedShoesLocalIdInBattle] = diffFrame.speedShoes[speedShoesLocalIdInBattle];\n      }\n    }\n\n    const traps = diffFrame.traps;\n    const trapsLocalIdStrList = Object.keys(traps);\n    for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n      const k = trapsLocalIdStrList[i];\n      const trapLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.traps[trapLocalIdInBattle].removed) {\n        // cc.log(`Trap with localIdInBattle == ${trapLocalIdInBattle} is removed.`);\n        delete newFullFrame.traps[trapLocalIdInBattle];\n      } else {\n        newFullFrame.traps[trapLocalIdInBattle] = diffFrame.traps[trapLocalIdInBattle];\n      }\n    }\n\n    const bullets = diffFrame.bullets;\n    const bulletsLocalIdStrList = Object.keys(bullets);\n    for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n      const k = bulletsLocalIdStrList[i];\n      const bulletLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.bullets[bulletLocalIdInBattle].removed) {\n        cc.log(`Bullet with localIdInBattle == ${bulletLocalIdInBattle} is removed.`);\n        delete newFullFrame.bullets[bulletLocalIdInBattle];\n      } else {\n        newFullFrame.bullets[bulletLocalIdInBattle] = diffFrame.bullets[bulletLocalIdInBattle];\n      }\n    }\n\n    const accs = diffFrame.speedShoes;\n    const accsLocalIdStrList = Object.keys(accs);\n    for (let i = 0; i < accsLocalIdStrList.length; ++i) {\n      const k = accsLocalIdStrList[i];\n      const accLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.speedShoes[accLocalIdInBattle].removed) {\n        delete newFullFrame.speedShoes[accLocalIdInBattle];\n      } else {\n        newFullFrame.speedShoes[accLocalIdInBattle] = diffFrame.speedShoes[accLocalIdInBattle];\n      }\n    }\n    return newFullFrame;\n  },\n\n  _dumpToFullFrameCache: function(fullFrame) {\n    const self = this;\n    while (self.recentFrameCacheCurrentSize >= self.recentFrameCacheMaxCount) {\n      // Trick here: never evict the \"Zero-th Frame\" for resyncing!\n      const toDelFrameId = Object.keys(self.recentFrameCache)[1];\n      // cc.log(\"toDelFrameId is \" + toDelFrameId + \".\");\n      delete self.recentFrameCache[toDelFrameId];\n      --self.recentFrameCacheCurrentSize;\n    }\n    self.recentFrameCache[fullFrame.id] = fullFrame;\n    ++self.recentFrameCacheCurrentSize;\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (instance.resyncing) return;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n      ackingFrameId: instance.lastRoomDownsyncFrameId,\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  onDestroy() {\n    const self = this;\n    if (null == self.battleState || ALL_BATTLE_STATES.WAITING == self.battleState) {\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n    }\n    if (null != window.handleRoomDownsyncFrame) {\n      window.handleRoomDownsyncFrame = null;\n    }\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  _lazilyTriggerResync() {\n    if (true == this.resyncing) return;\n    this.lastResyncingStartedAt = Date.now();\n    this.resyncing = true;\n\n    if (ALL_MAP_STATES.SHOWING_MODAL_POPUP != this.state) {\n      if (null == this.resyncingHintPopup) {\n        this.resyncingHintPopup = this.popupSimplePressToGo(i18n.t(\"gameTip.resyncing\"), true);\n      }\n    }\n  },\n\n  _onResyncCompleted() {\n    if (false == this.resyncing) return;\n    this.resyncing = false;\n    const resyncingDurationMillis = (Date.now() - this.lastResyncingStartedAt);\n    cc.log(`_onResyncCompleted, resyncing took ${resyncingDurationMillis} milliseconds.`);\n    if (null != this.resyncingHintPopup && this.resyncingHintPopup.parent) {\n      this.resyncingHintPopup.parent.removeChild(this.resyncingHintPopup);\n    }\n  },\n\n  popupSimplePressToGo(labelString, hideYesButton) {\n    const self = this;\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.scale);\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n\n    if (true == hideYesButton) {\n      yesButton.active = false;\n    }\n\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, simplePressToGoDialogNode);\n    setLocalZOrder(simplePressToGoDialogNode, 20);\n    return simplePressToGoDialogNode;\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n  },\n\n  _resetCurrentMatch() {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    self.countdownLabel.string = \"\";\n    if (self.playersNode) {\n      for (let i in self.playersNode) {\n        let node = self.playersNode[i];\n        node.getComponent(cc.Animation).play(\"Bottom\");\n        node.getComponent(\"SelfPlayer\").start();\n        node.active = true;\n      }\n    }\n    if (self.otherPlayerNodeDict) {\n      for (let i in self.otherPlayerNodeDict) {\n        let node = self.otherPlayerNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.selfPlayerNode && self.selfPlayerNode.parent) {\n      self.selfPlayerNode.parent.removeChild(self.selfPlayerNode);\n    }\n    if (self.treasureNodeDict) {\n      for (let i in self.treasureNodeDict) {\n        let node = self.treasureNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.trapBulletNodeDict) {\n      for (let i in self.trapBulletNodeDict) {\n        let node = self.trapBulletNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.trapNodeDict) {\n      for (let i in self.trapNodeDict) {\n        let node = self.trapNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n\n    if (self.pumpkinNodeDict) {\n      for (let i in self.pumpkinNodeDict) {\n        let node = self.pumpkinNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n\n    if (self.acceleratorNodeDict) {\n      for (let i in self.acceleratorNodeDict) {\n        let node = self.acceleratorNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n\n    self.mainCameraNode = canvasNode.getChildByName(\"Main Camera\");\n    self.mainCamera = self.mainCameraNode.getComponent(cc.Camera);\n    for (let child of self.mainCameraNode.children) {\n      child.setScale(1 / self.mainCamera.zoomRatio);\n    }\n    self.widgetsAboveAllNode = self.mainCameraNode.getChildByName(\"WidgetsAboveAll\");\n    self.mainCameraNode.setPosition(cc.v2());\n\n    self.resyncing = false;\n    self.lastRoomDownsyncFrameId = 0;\n\n    self.recentFrameCache = {};\n    self.recentFrameCacheCurrentSize = 0;\n    self.recentFrameCacheMaxCount = 2048;\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n\n    self.pumpkinInfoDict = {};\n    self.pumpkinNodeDict = {};\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n    self.towerNodeDict = {};\n    self.acceleratorNodeDict = {};\n    if (self.findingPlayerNode) {\n      const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n      findingPlayerScriptIns.init();\n    }\n    self.showPopopInCanvas(self.gameRuleNode);\n    safelyAddChild(self.widgetsAboveAllNode, self.playersInfoNode);\n  },\n\n  onLoad() {\n    const self = this;\n    window.forceBigEndianFloatingNumDecoding = self.forceBigEndianFloatingNumDecoding;\n\n    /*\n     * kobako: 因为小游戏的onShow生命周期函数全局只赋值一次, 所以需要通过window.mapIns变量来操作而不能通过this, 因为map场景重新加载后, this指向过去的map场景\n     */\n    window.mapIns = self;\n    window.mapIns.ready = true;\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n    self.musicEffectManagerScriptIns = self.node.getComponent(\"MusicEffectManager\");\n\n    /** init requeired prefab started */\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n\n    //Result panel init\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\n    self.resultPanelNode.width = self.canvasNode.width;\n    self.resultPanelNode.height = self.canvasNode.height;\n\n    const resultPanelScriptIns = self.resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.mapScriptIns = self;\n    resultPanelScriptIns.onAgainClicked = () => {\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      self._resetCurrentMatch();\n      let shouldReconnectState = parseInt(cc.sys.localStorage.getItem('shouldReconnectState'));\n      switch (shouldReconnectState) {\n        case 2:\n        case 1:\n          // Clicking too fast?\n          return;\n        default:\n          break;\n      }\n\n      if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) {\n        // Already disconnected. \n        cc.log(\"Ws session is already closed when `again/replay` button is clicked. Reconnecting now.\");\n        window.initPersistentSessionClient(self.initAfterWSConncted);\n      } else {\n        // Should disconnect first and reconnect within `window.handleClientSessionCloseOrError`. \n        cc.log(\"Ws session is not closed yet when `again/replay` button is clicked, closing the ws session now.\");\n        cc.sys.localStorage.setItem('shouldReconnectState', 2);\n        window.closeWSConnection();\n      }\n    };\n\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\n    self.gameRuleNode.width = self.canvasNode.width;\n    self.gameRuleNode.height = self.canvasNode.height;\n\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\n    self.gameRuleScriptIns.mapNode = self.node;\n\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\n    self.findingPlayerNode.width = self.canvasNode.width;\n    self.findingPlayerNode.height = self.canvasNode.height;\n    const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n    findingPlayerScriptIns.init();\n\n    self.playersInfoNode = cc.instantiate(self.playersInfoPrefab);\n\n    self.countdownToBeginGameNode = cc.instantiate(self.countdownToBeginGamePrefab);\n    self.countdownToBeginGameNode.width = self.canvasNode.width;\n    self.countdownToBeginGameNode.height = self.canvasNode.height;\n\n    self.playersNode = {};\n    const player1Node = cc.instantiate(self.player1Prefab);\n    const player2Node = cc.instantiate(self.player2Prefab);\n    Object.assign(self.playersNode, {\n      1: player1Node\n    });\n    Object.assign(self.playersNode, {\n      2: player2Node\n    });\n\n    /** init requeired prefab ended */\n\n    self.clientUpsyncFps = 20;\n    self._resetCurrentMatch();\n\n    const tiledMapIns = self.node.getComponent(cc.TiledMap);\n    const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n    for (let frameAnim of boundaryObjs.frameAnimations) {\n      const animNode = cc.instantiate(self.tiledAnimPrefab);\n      const anim = animNode.getComponent(cc.Animation);\n      animNode.setPosition(frameAnim.posInMapNode);\n      animNode.width = frameAnim.sizeInMapNode.width;\n      animNode.height = frameAnim.sizeInMapNode.height;\n      animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n      animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n      safelyAddChild(self.node, animNode);\n      setLocalZOrder(animNode, 5);\n      anim.addClip(frameAnim.animationClip, \"default\");\n      anim.play(\"default\");\n    }\n\n    self.barrierColliders = [];\n    for (let boundaryObj of boundaryObjs.barriers) {\n      const newBarrier = cc.instantiate(self.barrierPrefab);\n      const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n      newBarrier.setPosition(newBoundaryOffsetInMapNode);\n      newBarrier.setAnchorPoint(cc.v2(0, 0));\n      const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n      newBarrierColliderIns.points = [];\n      for (let p of boundaryObj) {\n        newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n      }\n      self.barrierColliders.push(newBarrierColliderIns);\n      self.node.addChild(newBarrier);\n    }\n    const allLayers = tiledMapIns.getLayers();\n    for (let layer of allLayers) {\n      const layerType = layer.getProperty(\"type\");\n      switch (layerType) {\n        case \"normal\":\n          setLocalZOrder(layer.node, 0);\n          break;\n        case \"barrier_and_shelter\":\n          setLocalZOrder(layer.node, 3);\n          break;\n        default:\n          break;\n      }\n    }\n\n    const allObjectGroups = tiledMapIns.getObjectGroups();\n    for (let objectGroup of allObjectGroups) {\n      const objectGroupType = objectGroup.getProperty(\"type\");\n      switch (objectGroupType) {\n        case \"barrier_and_shelter\":\n          setLocalZOrder(objectGroup.node, 3);\n          break;\n        default:\n          break;\n      }\n    }\n\n    for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n      const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n      const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n      newShelter.setPosition(newBoundaryOffsetInMapNode);\n      newShelter.setAnchorPoint(cc.v2(0, 0));\n      const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n      newShelterColliderIns.points = [];\n      for (let p of boundaryObj) {\n        newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n      }\n      self.node.addChild(newShelter);\n    }\n\n    window.handleClientSessionCloseOrError = function() {\n      let shouldReconnectState = parseInt(cc.sys.localStorage.getItem('shouldReconnectState'));\n      switch (shouldReconnectState) {\n        case 2:\n          shouldReconnectState = 1;\n          cc.sys.localStorage.setItem('shouldReconnectState', shouldReconnectState);\n          cc.log(\"Reconnecting because 2 == shouldReconnectState and it's now set to 1.\");\n          window.initPersistentSessionClient(self.initAfterWSConncted);\n          return;\n        case 1:\n          cc.log(\"Neither reconnecting nor alerting because 1 == shouldReconnectState and it's now removed.\");\n          cc.sys.localStorage.removeItem(\"shouldReconnectState\");\n          return;\n        default:\n          break;\n      }\n\n      //手动退出不应该弹窗报错\n      if(cc.sys.localStorage.getItem('manuallyExit')){\n        console.warn('手动退出, 清除房间信息并回到登录页');\n        cc.sys.localStorage.removeItem('manuallyExit');\n        cc.sys.localStorage.removeItem(\"boundRoomId\");\n        if(cc.sys.platform == cc.sys.WECHAT_GAME){\n          cc.director.loadScene('wechatGameLogin');\n        }else{\n          cc.director.loadScene('login');\n        }\n      }else{ //意外断线\n        console.warn('意外断线');\n        if (null == self.battleState || ALL_BATTLE_STATES.WAITING == self.battleState) {\n          window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n          self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n        }\n      }\n\n    };\n\n    self.initAfterWSConncted = () => {\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.getItem('selfPlayer'));\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      self._inputControlEnabled = false;\n      self.setupInputControls();\n\n\n      window.handleRoomDownsyncFrame = function(diffFrame) {\n\n        if(0 < diffFrame.id && diffFrame.id < 10){\n          cc.log(diffFrame)\n        }\n\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n        const refFrameId = diffFrame.refFrameId;\n        if (-99 == refFrameId) {\n          //显示倒计时\n          self.matchPlayersFinsihed(diffFrame.players);\n        } else if (-98 == refFrameId) {\n          //显示匹配玩家\n          if (window.initWxSdk) {\n            window.initWxSdk();\n          }\n          const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n          if (!self.findingPlayerNode.parent) {\n            self.showPopopInCanvas(self.findingPlayerNode);\n          }\n          findingPlayerScriptIns.updatePlayersInfo(diffFrame.players);\n          return;\n        }\n\n        //根据downFrame显示游戏场景\n        const frameId = diffFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        const isInitiatingFrame = (0 >= self.recentFrameCacheCurrentSize || 0 == refFrameId);\n        /*\n        if (frameId % 300 == 0) {\n          // WARNING: For testing only!\n          if (0 < frameId) {\n            self._lazilyTriggerResync(); \n          }\n          cc.log(`${JSON.stringify(diffFrame)}`);\n        }\n        */\n        const cachedFullFrame = self.recentFrameCache[refFrameId];\n        if (\n          !isInitiatingFrame\n          && self.useDiffFrameAlgo\n          && (refFrameId > 0 || 0 < self.recentFrameCacheCurrentSize) // Critical condition to differentiate between \"BattleStarted\" or \"ShouldResync\". \n          && null == cachedFullFrame\n        ) {\n          self._lazilyTriggerResync();\n          // Later incoming diffFrames will all suffice that `0 < self.recentFrameCacheCurrentSize && null == cachedFullFrame`, until `this._onResyncCompleted` is successfully invoked.\n          return;\n        }\n\n        if (isInitiatingFrame && 0 == refFrameId) {\n          // Reaching here implies that you've received the resync frame.\n          self._onResyncCompleted();\n        }\n        let countdownNanos = diffFrame.countdownNanos;\n        if (countdownNanos < 0) {\n          countdownNanos = 0;\n        }\n        const countdownSeconds = parseInt(countdownNanos / 1000000000);\n        if (isNaN(countdownSeconds)) {\n          cc.log(`countdownSeconds is NaN for countdownNanos == ${countdownNanos}.`);\n        }\n        self.countdownLabel.string = countdownSeconds;\n        const roomDownsyncFrame = ( //根据refFrameId和diffFrame计算出新的一帧\n        (isInitiatingFrame || !self.useDiffFrameAlgo)\n          ?\n          diffFrame\n          :\n          self._generateNewFullFrame(cachedFullFrame, diffFrame)\n        );\n\n\n        if (countdownNanos <= 0) {\n          self.onBattleStopped(roomDownsyncFrame.players);\n          return;\n        }\n        self._dumpToFullFrameCache(roomDownsyncFrame);\n        const sentAt = roomDownsyncFrame.sentAt;\n\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              displayName: (null == immediateSelfPlayerInfo.displayName ? (null == immediateSelfPlayerInfo.name ? \"\" : immediateSelfPlayerInfo.name) : immediateSelfPlayerInfo.displayName),\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n              joinIndex: immediateSelfPlayerInfo.joinIndex,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n\n        //update pumpkin Info \n        self.pumpkinInfoDict = {};\n        const pumpkin = roomDownsyncFrame.pumpkin;\n        const pumpkinsLocalIdStrList = Object.keys(pumpkin);\n        for (let i = 0; i < pumpkinsLocalIdStrList.length; ++i) {\n          const k = pumpkinsLocalIdStrList[i];\n          const pumpkinLocalIdInBattle = parseInt(k);\n          const pumpkinInfo = pumpkin[k];\n          self.pumpkinInfoDict[pumpkinLocalIdInBattle] = pumpkinInfo;\n        }\n\n\n        //update treasureInfoDict\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) { //直接根据最新帧的数据覆盖掉treasureInfoDict\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n        //update acceleratorInfoDict\n        self.acceleratorInfoDict = {};\n        const accelartors = roomDownsyncFrame.speedShoes;\n        const accLocalIdStrList = Object.keys(accelartors);\n        for (let i = 0; i < accLocalIdStrList.length; ++i) {\n          const k = accLocalIdStrList[i];\n          const accLocalIdInBattle = parseInt(k);\n          const accInfo = accelartors[k];\n          self.acceleratorInfoDict[accLocalIdInBattle] = accInfo;\n        }\n\n        //update trapInfoDict\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n\n        //update guardTowerInfoDict\n        self.guardTowerInfoDict = {};\n        const guardTowers = roomDownsyncFrame.guardTowers;\n        const ids = Object.keys(guardTowers);\n        for (let i = 0; i < ids.length; ++i) {\n          const id = ids[i];\n          const localIdInBattle = parseInt(id);\n          const tower = guardTowers[id];\n          self.guardTowerInfoDict[localIdInBattle] = tower;\n        }\n\n\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(i18n.t(\"gameTip.start\"));\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n      // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    }\n\n\n\n    if(cc.sys.platform == cc.sys.WECHAT_GAME){\n      if(!window.wxLifeCycleListenerSetted){ //全局只调用一次\n        const query = wx.getLaunchOptionsSync().query;\n        const expectedRoomId = query['expectedRoomId'];\n        console.warn('By the share link to join room: ', expectedRoomId);\n        self.tryToJoinExpectedRoom(expectedRoomId);\n      }else{\n        console.log('已监听生命周期函数, 不手动调用tryToJoinExpectedRoom');\n        /*\n        if(cc.sys.localStorage.getItem('expectedRoomId')){\n          console.warn('kobako: 小游戏通过expectedRoomId尝试重连游戏');\n          self.tryToJoinExpectedRoom(cc.sys.localStorage.getItem('expectedRoomId'));\n        }\n        */\n      }\n    }else{ \n      //其他登录方式: 基本上是通过localStorage.boundRoomId来重连\n      self.tryToJoinExpectedRoom();\n    }\n\n    /*\n     * 监听小游戏生命周期\n     */\n    if(cc.sys.platform == cc.sys.WECHAT_GAME && !window.wxLifeCycleListenerSetted){\n      window.wxLifeCycleListenerSetted = true;\n\n      //测试用, 手动输入expRoomId进入房间\n      window.reconnectGameByExpectedRoomId = (expectedRoomId) => {\n        window.mapIns.tryToJoinExpectedRoom(expectedRoomId);\n      }\n\n      //onShow, 每次重新打开都判断是否需要加入指定房间, 通过分享链接进入时会带上expectedRoomId参数\n      wx.onShow((res) => {\n        if(res.query['expectedRoomId']){\n          if(window.mapIns.ready){\n            console.warn('kobako: onShow, mapIns is ready, 尝试重连房间: ', res.query['expectedRoomId']);\n            window.reconnectGameByExpectedRoomId(res.query['expectedRoomId']);\n          }else{\n            console.warn('kobako: onShow, mapIns is not ready! 此时无法重连游戏, 需要在mapIns.onLoad()再做重连');\n          }\n          //kobako: expectedRoomId唯一在对局结束后才清除, 用于小游戏断线重连\n          //cc.sys.localStorage.setItem('expectedRoomId', res.query['expectedRoomId']);\n        }\n      });\n\n      //onHide断开连接\n      wx.onHide((res) => {\n        console.log(res);\n\n        if(res.mode == 'hide'){ //按home键或者分享小程序\n          console.warn('onHide: hide');\n          //Do nothing\n        }else{ //其他情况下断连返回登录页\n          console.warn('onHide: back');\n          cc.sys.localStorage.setItem('manuallyExit', true);\n          window.closeWSConnection();\n        }\n\n      });\n    }\n\n  },\n\n  /*\n   * kobako: 隐藏规则弹窗后加入到指定房间\n   * 调用场景: 1. map.js onLoad()方法 2. 小游戏生命周期onShow函数\n   * @Param expectedRoomIdFromQuery: 通过小游戏链接进入时调用onShow方法, 参数会包含expectedRoomId\n   */\n  tryToJoinExpectedRoom(expectedRoomIdFromQuery){\n    const self = window.mapIns;\n\n    //检查是否处于空闲状态\n    /* 需注释, 因为会妨碍断线重连\n    if(self.battleState != ALL_BATTLE_STATES.WAITING){\n      console.warn('tryToJoinExpectedRoom: Not in waiting state');\n      return;\n    }\n    */\n\n\n    console.warn('Try To Join ExpectedRoom');\n\n    /*\n    * The following code snippet is a dirty fix.\n    */\n    let expectedRoomId = null;\n\n    if(expectedRoomIdFromQuery){\n      expectedRoomId = expectedRoomIdFromQuery;\n    }else{\n      const qDict = window.getQueryParamDict();\n      if (qDict) {\n        expectedRoomId = qDict[\"expectedRoomId\"];\n      } else {\n        if (window.history && window.history.state) {\n          expectedRoomId = window.history.state.expectedRoomId;\n        }\n      } \n    }\n\n    if (expectedRoomId) {\n      console.warn('expectedRoomId: ', expectedRoomId);\n      if(self.gameRuleNode != null && self.gameRuleNode.active != null){\n        self.gameRuleNode.active = false;\n      }\n      //kobako: 直接传expectedRoomId到初始化session函数\n      window.initPersistentSessionClient(self.initAfterWSConncted, expectedRoomId);\n      return;\n    } else if (cc.sys.localStorage.getItem('boundRoomId')){\n      console.warn('boundRoomId: ', cc.sys.localStorage.getItem('boundRoomId'));\n      if(self.gameRuleNode != null && self.gameRuleNode.active != null){\n        self.gameRuleNode.active = false;\n      }\n      window.initPersistentSessionClient(self.initAfterWSConncted);\n      return;\n    }else {\n      console.warn('Do not have expectedRoomId or boundRoomId, do nothing');\n    }\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    console.log('On battle started!')\n    const self = this;\n    if (self.musicEffectManagerScriptIns)\n      self.musicEffectManagerScriptIns.playBGM();\n    const canvasNode = self.canvasNode;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    self.enableInputControls();\n    if (self.countdownToBeginGameNode.parent) {\n      self.countdownToBeginGameNode.parent.removeChild(self.countdownToBeginGameNode);\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n    }\n  },\n\n  onBattleStopped(players) {\n    const self = this;\n    if (self.musicEffectManagerScriptIns) {\n      self.musicEffectManagerScriptIns.stopAllMusic();\n    }\n    const canvasNode = self.canvasNode;\n    const resultPanelNode = self.resultPanelNode;\n    const resultPanelScriptIns = resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.showPlayerInfo(players);\n    window.clearBoundRoomIdInBothVolatileAndPersistentStorage(); //清除cached boundRoomId\n    // Such that it doesn't execute \"update(dt)\" anymore. \n    self.selfPlayerNode.active = false;\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.showPopopInCanvas(resultPanelNode);\n\n    //clear player info\n    self.playersInfoNode.getComponent(\"PlayersInfo\").clearInfo();\n\n    //kobako: 清除expectedRoomId\n    cc.sys.localStorage.removeItem('expectedRoomId');\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const joinIndex = this.selfPlayerInfo.joinIndex;\n    const newPlayerNode = this.playersNode[joinIndex];\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n    instance.selfPlayerScriptIns.showArrowTipNode();\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n      playersScriptIns.updateData(self.selfPlayerInfo);\n      if (null != self.selfPlayerScriptIns) {\n        self.selfPlayerScriptIns.updateSpeed(self.selfPlayerInfo.speed);\n      }\n    }\n\n    let toRemoveAcceleratorNodeDict = {};\n    Object.assign(toRemoveAcceleratorNodeDict, self.acceleratorNodeDict);\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    let toRemovePumpkinNodeDict = {};\n    Object.assign(toRemovePumpkinNodeDict, self.pumpkinNodeDict);\n\n    /*\n    * NOTE: At the beginning of each GUI update cycle, mark all `self.trapBulletNode` as `toRemoveBulletNode`, while only those that persist in `self.trapBulletInfoDict` are NOT finally removed. This approach aims to reduce the lines of codes for coping with node removal in the RoomDownsyncFrame algorithm.\n    */\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n\n      //更新玩家信息展示\n      if (null != cachedPlayerData) {\n        const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n        playersScriptIns.updateData(cachedPlayerData);\n      }\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = self.playersNode[cachedPlayerData.joinIndex];\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aControlledOtherPlayerScriptIns = targetNode.getComponent(\"SelfPlayer\");\n      aControlledOtherPlayerScriptIns.updateSpeed(cachedPlayerData.speed);\n\n\n\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      aControlledOtherPlayerScriptIns.toMoveByVecMag = toMoveByVecMag;\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      //const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 1.0);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        aControlledOtherPlayerScriptIns.activeDirection = { //任意一个值为0都不会改变方向\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag > toTeleportDisThreshold) { //如果移动过大 打印log但还是会移动\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          aControlledOtherPlayerScriptIns.activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          aControlledOtherPlayerScriptIns.toMoveByVec = toMoveByVec;\n          aControlledOtherPlayerScriptIns.toMoveByVecMag = toMoveByVecMag;\n\n          if (isNaN(normalizedDir.dx) || isNaN(normalizedDir.dy)) {\n            aControlledOtherPlayerScriptIns.activeDirection = {\n              dx: 0,\n              dy: 0,\n            };\n          } else {\n            aControlledOtherPlayerScriptIns.activeDirection = normalizedDir;\n          }\n        }\n      }\n\n\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        //console.log(newScheduledDirection);\n        aControlledOtherPlayerScriptIns.scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n\n\n    }\n\n    // 更新加速鞋显示 \n    for (let k in self.acceleratorInfoDict) {\n      const accLocalIdInBattle = parseInt(k);\n      const acceleratorInfo = self.acceleratorInfoDict[accLocalIdInBattle];\n      const newPos = cc.v2(\n        acceleratorInfo.x,\n        acceleratorInfo.y\n      );\n      let targetNode = self.acceleratorNodeDict[accLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.acceleratorPrefab);\n        self.acceleratorNodeDict[accLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      if (null != toRemoveAcceleratorNodeDict[accLocalIdInBattle]) {\n        delete toRemoveAcceleratorNodeDict[accLocalIdInBattle];\n      }\n    }\n    // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.x,\n        trapInfo.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n    }\n\n    // 更新陷阱塔显示 \n    for (let k in self.guardTowerInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const towerInfo = self.guardTowerInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        towerInfo.x,\n        towerInfo.y\n      );\n      let targetNode = self.towerNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.guardTowerPrefab);\n        self.towerNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n    }\n\n    // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.x,\n        bulletInfo.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n\n        //kobako: 创建子弹node的时候设置旋转角度\n        targetNode.rotation = (() => {\n          if (null == bulletInfo.startAtPoint || null == bulletInfo.endAtPoint) {\n            console.error(`Init bullet direction error, startAtPoint:${startAtPoint}, endAtPoint:${endAtPoint}`);\n            return 0;\n          } else {\n\n            //console.log(bulletInfo.startAtPoint, bulletInfo.endAtPoint);\n\n            const dx = bulletInfo.endAtPoint.x - bulletInfo.startAtPoint.x;\n            const dy = bulletInfo.endAtPoint.y - bulletInfo.startAtPoint.y;\n            const radian = (() => {\n              if (dx == 0) {\n                return Math.PI / 2;\n              } else {\n                return Math.abs(Math.atan(dy / dx));\n              }\n            })();\n            const angleTemp = radian * 180 / Math.PI;\n            const angle = (() => {\n              if (dx >= 0) {\n                if (dy >= 0) {\n                  //第一象限\n                  return 360 - angleTemp;\n                  //return angleTemp;\n                } else {\n                  //第四象限\n                  return angleTemp;\n                  //return -angleTemp;\n                }\n              } else {\n                if (dy >= 0) {\n                  //第二象限\n                  return 360 - (180 - angleTemp);\n                  //return 180 - angleTemp;\n                } else {\n                  //第三象限\n                  return 360 - (180 + angleTemp);\n                  //return 180 + angleTemp;\n                }\n              }\n            })();\n            return angle;\n          }\n        })();\n        //\n\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aBulletScriptIns = targetNode.getComponent(\"Bullet\");\n      aBulletScriptIns.localIdInBattle = bulletLocalIdInBattle;\n      aBulletScriptIns.linearSpeed = bulletInfo.linearSpeed * 1000000000; // The `bullet.LinearSpeed` on server-side is denoted in pts/nanoseconds. \n\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y,\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (aBulletScriptIns.linearSpeed * dt * 100);\n      const notToMoveDisThreshold = (aBulletScriptIns.linearSpeed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        aBulletScriptIns.activeDirection = {\n          dx: 0,\n          dy: 0,\n        };\n      } else {\n        if (toMoveByVecMag > toTeleportDisThreshold) {\n          cc.log(`Bullet ${bulletLocalIdInBattle} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          aBulletScriptIns.activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          if (isNaN(normalizedDir.dx) || isNaN(normalizedDir.dy)) {\n            aBulletScriptIns.activeDirection = {\n              dx: 0,\n              dy: 0,\n            };\n          } else {\n            aBulletScriptIns.activeDirection = normalizedDir;\n          }\n        }\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n    }\n\n    //更新南瓜少年的显示\n    for (let k in self.pumpkinInfoDict) {\n      const pumpkinLocalIdInBattle = parseInt(k);\n      const pumpkinInfo = self.pumpkinInfoDict[pumpkinLocalIdInBattle];\n      const newPos = cc.v2(pumpkinInfo.x, pumpkinInfo.y);\n      let targetNode = self.pumpkinNodeDict[pumpkinLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.pumpkinPrefab);\n        self.pumpkinNodeDict[pumpkinLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aPumpkinScriptIns = targetNode.getComponent(\"Pumpkin\");\n      aPumpkinScriptIns.localIdInBattle = pumpkinLocalIdInBattle;\n      aPumpkinScriptIns.linearSpeed = pumpkinInfo.linearSpeed * 1000000000; // The `pumpkin.LinearSpeed` on server-side is denoted in pts/nanoseconds. \n\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y,\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (aPumpkinScriptIns.linearSpeed * dt * 100);\n      const notToMoveDisThreshold = (aPumpkinScriptIns.linearSpeed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        aPumpkinScriptIns.activeDirection = {\n          dx: 0,\n          dy: 0,\n        };\n      } else {\n        if (toMoveByVecMag > toTeleportDisThreshold) {\n          cc.log(`Pumpkin ${pumpkinLocalIdInBattle} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          aPumpkinScriptIns.activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          if (isNaN(normalizedDir.dx) || isNaN(normalizedDir.dy)) {\n            aPumpkinScriptIns.activeDirection = {\n              dx: 0,\n              dy: 0,\n            };\n          } else {\n            aPumpkinScriptIns.activeDirection = normalizedDir;\n          }\n        }\n      }\n      if (null != toRemovePumpkinNodeDict[pumpkinLocalIdInBattle]) {\n        delete toRemovePumpkinNodeDict[pumpkinLocalIdInBattle];\n      }\n    }\n\n    // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.x,\n        treasureInfo.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        const treasureNodeScriptIns = targetNode.getComponent(\"Treasure\");\n        treasureNodeScriptIns.setData(treasureInfo);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed pumpkins.\n    for (let k in toRemovePumpkinNodeDict) {\n      const pumpkinLocalIdInBattle = parseInt(k);\n      toRemovePumpkinNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.pumpkinNodeDict[pumpkinLocalIdInBattle];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureScriptIns = toRemoveTreasureNodeDict[k].getComponent(\"Treasure\");\n      treasureScriptIns.playPickedUpAnimAndDestroy();\n      if (self.musicEffectManagerScriptIns) {\n        if (2 == treasureScriptIns.type) {\n          self.musicEffectManagerScriptIns.playHighScoreTreasurePicked();\n        } else {\n          self.musicEffectManagerScriptIns.playTreasurePicked();\n        }\n      }\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed accelerators.\n    for (let k in toRemoveAcceleratorNodeDict) {\n      const accLocalIdInBattle = parseInt(k);\n      toRemoveAcceleratorNodeDict[k].parent.removeChild(toRemoveAcceleratorNodeDict[k]);\n      delete self.acceleratorNodeDict[accLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (self.musicEffectManagerScriptIns) {\n        self.musicEffectManagerScriptIns.playCrashedByTrapBullet();\n      }\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      window.closeWSConnection();\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n\n      if(cc.sys.platform == cc.sys.WECHAT_GAME){\n        cc.director.loadScene('wechatGameLogin');\n      }else{\n        cc.director.loadScene('login');\n      }\n    };\n\n    const self = this;\n    if (cc.sys.localStorage.getItem('selfPlayer')) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.getItem('selfPlayer'));\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.showPopopInCanvas(self.confirmLogoutNode);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n\n  initWSConnection(evt, cb) {\n    const self = this;\n    window.initPersistentSessionClient(self.initAfterWSConncted);\n    if (cb) {\n      cb()\n    }\n  },\n\n  showPopopInCanvas(toShowNode) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, toShowNode);\n    setLocalZOrder(toShowNode, 10);\n  },\n\n  matchPlayersFinsihed(players) {\n    console.log(players);\n\n    const self = this;\n    const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n    findingPlayerScriptIns.updatePlayersInfo(players);\n    window.setTimeout(() => {\n      if (self.findingPlayerNode.parent) {\n        self.findingPlayerNode.parent.removeChild(self.findingPlayerNode);\n        self.transitToState(ALL_MAP_STATES.VISUAL);\n        for (let i in players) {\n          //更新在线玩家信息面板的信息\n          const playerInfo = players[i];\n          const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n          playersScriptIns.updateData(playerInfo);\n        }\n      }\n      const countDownScriptIns = self.countdownToBeginGameNode.getComponent(\"CountdownToBeginGame\");\n      countDownScriptIns.setData();\n      self.showPopopInCanvas(self.countdownToBeginGameNode);\n      return;\n    }, 2000);\n  },\n});\n"]}