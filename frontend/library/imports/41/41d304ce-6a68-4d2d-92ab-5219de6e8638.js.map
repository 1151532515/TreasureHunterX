{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","useDiffFrameAlgo","default","canvasNode","type","Node","tiledAnimPrefab","Prefab","player1Prefab","player2Prefab","pumpkinPrefab","treasurePrefab","trapPrefab","acceleratorPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","boundRoomIdLabel","Label","countdownLabel","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","countdownToBeginGamePrefab","playersInfoPrefab","_generateNewFullFrame","refFullFrame","diffFrame","newFullFrame","id","treasures","traps","bullets","players","speedShoes","pumpkin","playersLocalIdStrList","Object","keys","i","length","k","playerId","parseInt","removed","pumpkinsLocalIdStrList","pumpkinLocalIdInBattle","treasuresLocalIdStrList","treasureLocalIdInBattle","speedShoesLocalIdStrList","speedShoesLocalIdInBattle","trapsLocalIdStrList","trapLocalIdInBattle","bulletsLocalIdStrList","bulletLocalIdInBattle","log","accs","accsLocalIdStrList","accLocalIdInBattle","_dumpToFullFrameCache","fullFrame","self","recentFrameCacheCurrentSize","recentFrameCacheMaxCount","toDelFrameId","recentFrameCache","_onPerUpsyncFrame","instance","resyncing","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","dir","dx","parseFloat","dy","x","selfPlayerNode","y","ackingFrameId","lastRoomDownsyncFrameId","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","battleState","clearBoundRoomIdInBothVolatileAndPersistentStorage","handleRoomDownsyncFrame","upsyncLoopInterval","clearInterval","inputControlTimer","_lazilyTriggerResync","state","resyncingHintPopup","popupSimplePressToGo","t","_onResyncCompleted","parent","removeChild","labelString","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","scale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","string","once","dismissDialog","bind","safelyAddChild","widgetsAboveAllNode","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","_resetCurrentMatch","mapNode","node","playersNode","Animation","play","start","active","otherPlayerNodeDict","treasureNodeDict","trapBulletNodeDict","trapNodeDict","pumpkinNodeDict","acceleratorNodeDict","mainCameraNode","mainCamera","Camera","children","child","zoomRatio","pumpkinInfoDict","otherPlayerCachedDataDict","treasureInfoDict","trapInfoDict","trapBulletInfoDict","findingPlayerNode","findingPlayerScriptIns","showPopopInCanvas","gameRuleNode","playersInfoNode","onLoad","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","musicEffectManagerScriptIns","confirmLogoutNode","resultPanelNode","resultPanelScriptIns","mapScriptIns","onAgainClicked","shouldReconnectState","sys","localStorage","clientSession","readyState","WebSocket","OPEN","initPersistentSessionClient","initAfterWSConncted","closeWSConnection","gameRuleScriptIns","width","height","countdownToBeginGameNode","player1Node","player2Node","assign","clientUpsyncFps","tiledMapIns","TiledMap","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","posInMapNode","sizeInMapNode","origSize","setAnchorPoint","addClip","animationClip","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleClientSessionCloseOrError","removeItem","parse","selfPlayer","_inputControlEnabled","setupInputControls","kobakoCounter","refFrameId","matchPlayersFinsihed","initWxSdk","updatePlayersInfo","frameId","isInitiatingFrame","cachedFullFrame","countdownNanos","countdownSeconds","isNaN","roomDownsyncFrame","onBattleStopped","sentAt","playerIdStrList","immediateSelfPlayerInfo","speed","score","joinIndex","anotherPlayer","pumpkinInfo","treasureInfo","console","acceleratorInfoDict","accelartors","accLocalIdStrList","accInfo","trapInfo","bulletInfo","onBattleStarted","expectedRoomId","qDict","getQueryParamDict","history","boundRoomId","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","playBGM","spawnSelfPlayer","stopAllMusic","showPlayerInfo","newPlayerNode","toStartWithPos","showArrowTipNode","update","dt","canvasParentNode","playersScriptIns","updateData","updateSpeed","toRemoveAcceleratorNodeDict","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemovePumpkinNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","targetNode","aControlledOtherPlayerScriptIns","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","normalizedDir","newScheduledDirection","discretizeDirection","joyStickEps","scheduleNewDirection","acceleratorInfo","aBulletScriptIns","localIdInBattle","linearSpeed","aPumpkinScriptIns","treasureNodeScriptIns","setData","getNumberOfRunningActions","durationSeconds","runAction","moveTo","treasureScriptIns","playPickedUpAnimAndDestroy","playHighScoreTreasurePicked","playTreasurePicked","playCrashedByTrapBullet","s","byClick","localClearance","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","initWSConnection","cb","toShowNode","playerInfo","countDownScriptIns"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    useDiffFrameAlgo: {\n      default: true\n    },\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    player1Prefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    player2Prefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    pumpkinPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    acceleratorPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    trapBulletPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    resultPanelPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    gameRulePrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    findingPlayerPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    countdownToBeginGamePrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    playersInfoPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n\n  },\n\n  _generateNewFullFrame: function(refFullFrame, diffFrame) {\n    let newFullFrame = {\n      id: diffFrame.id,\n      treasures: refFullFrame.treasures,\n      traps: refFullFrame.traps,\n      bullets: refFullFrame.bullets,\n      players: refFullFrame.players,\n      speedShoes: refFullFrame.speedShoes,\n      pumpkin: refFullFrame.pumpkin,\n    };\n    const players = diffFrame.players;\n    const playersLocalIdStrList = Object.keys(players);\n    for (let i = 0; i < playersLocalIdStrList.length; ++i) {\n      const k = playersLocalIdStrList[i];\n      const playerId = parseInt(k);\n      if (true == diffFrame.players[playerId].removed) {\n        // cc.log(`Player id == ${playerId} is removed.`);\n        delete newFullFrame.players[playerId];\n      } else {\n        newFullFrame.players[playerId] = diffFrame.players[playerId];\n      }\n    }\n\n    const pumpkin = diffFrame.pumpkin;\n    const pumpkinsLocalIdStrList = Object.keys(pumpkin);\n    for (let i = 0; i < pumpkinsLocalIdStrList.length; ++i) {\n      const k = pumpkinsLocalIdStrList[i];\n      const pumpkinLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.pumpkin[pumpkinLocalIdInBattle].removed) {\n        delete newFullFrame.pumpkin[pumpkinLocalIdInBattle];\n      } else {\n        newFullFrame.pumpkin[pumpkinLocalIdInBattle] = diffFrame.pumpkin[pumpkinLocalIdInBattle];\n      }\n    }\n\n    const treasures = diffFrame.treasures;\n    const treasuresLocalIdStrList = Object.keys(treasures);\n    for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n      const k = treasuresLocalIdStrList[i];\n      const treasureLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.treasures[treasureLocalIdInBattle].removed) {\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\n        delete newFullFrame.treasures[treasureLocalIdInBattle];\n      } else {\n        newFullFrame.treasures[treasureLocalIdInBattle] = diffFrame.treasures[treasureLocalIdInBattle];\n      }\n    }\n\n    const speedShoes = diffFrame.speedShoes;\n    const speedShoesLocalIdStrList = Object.keys(speedShoes);\n    for (let i = 0; i < speedShoesLocalIdStrList.length; ++i) {\n      const k = speedShoesLocalIdStrList[i];\n      const speedShoesLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.speedShoes[speedShoesLocalIdInBattle].removed) {\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\n        delete newFullFrame.speedShoes[speedShoesLocalIdInBattle];\n      } else {\n        newFullFrame.speedShoes[speedShoesLocalIdInBattle] = diffFrame.speedShoes[speedShoesLocalIdInBattle];\n      }\n    }\n\n    const traps = diffFrame.traps;\n    const trapsLocalIdStrList = Object.keys(traps);\n    for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n      const k = trapsLocalIdStrList[i];\n      const trapLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.traps[trapLocalIdInBattle].removed) {\n        // cc.log(`Trap with localIdInBattle == ${trapLocalIdInBattle} is removed.`);\n        delete newFullFrame.traps[trapLocalIdInBattle];\n      } else {\n        newFullFrame.traps[trapLocalIdInBattle] = diffFrame.traps[trapLocalIdInBattle];\n      }\n    }\n\n    const bullets = diffFrame.bullets;\n    const bulletsLocalIdStrList = Object.keys(bullets);\n    for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n      const k = bulletsLocalIdStrList[i];\n      const bulletLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.bullets[bulletLocalIdInBattle].removed) {\n        cc.log(`Bullet with localIdInBattle == ${bulletLocalIdInBattle} is removed.`);\n        delete newFullFrame.bullets[bulletLocalIdInBattle];\n      } else {\n        newFullFrame.bullets[bulletLocalIdInBattle] = diffFrame.bullets[bulletLocalIdInBattle];\n      }\n    }\n\n    const accs = diffFrame.speedShoes;\n    const accsLocalIdStrList = Object.keys(accs);\n    for (let i = 0; i < accsLocalIdStrList.length; ++i) {\n      const k = accsLocalIdStrList[i];\n      const accLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.speedShoes[accLocalIdInBattle].removed) {\n        delete newFullFrame.speedShoes[accLocalIdInBattle];\n      } else {\n        newFullFrame.speedShoes[accLocalIdInBattle] = diffFrame.speedShoes[accLocalIdInBattle];\n      }\n    }\n    return newFullFrame;\n  },\n\n  _dumpToFullFrameCache: function(fullFrame) {\n    const self = this;\n    while (self.recentFrameCacheCurrentSize >= self.recentFrameCacheMaxCount) {\n      // Trick here: never evict the \"Zero-th Frame\" for resyncing!\n      const toDelFrameId = Object.keys(self.recentFrameCache)[1];\n      // cc.log(\"toDelFrameId is \" + toDelFrameId + \".\");\n      delete self.recentFrameCache[toDelFrameId];\n      --self.recentFrameCacheCurrentSize;\n    }\n    self.recentFrameCache[fullFrame.id] = fullFrame;\n    ++self.recentFrameCacheCurrentSize;\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (instance.resyncing) return;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n      ackingFrameId: instance.lastRoomDownsyncFrameId,\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  onDestroy() {\n    const self = this;\n    if (null == self.battleState || ALL_BATTLE_STATES.WAITING == self.battleState) {\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n    }\n    if (null != window.handleRoomDownsyncFrame) {\n      window.handleRoomDownsyncFrame = null;\n    }\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  _lazilyTriggerResync() {\n    if (true == this.resyncing) return;\n    this.resyncing = true;\n    if (ALL_MAP_STATES.SHOWING_MODAL_POPUP != this.state) {\n      if (null == this.resyncingHintPopup) {\n        this.resyncingHintPopup = this.popupSimplePressToGo(i18n.t(\"gameTip.resyncing\"));\n      }\n    }\n  },\n\n  _onResyncCompleted() {\n    if (false == this.resyncing) return;\n    cc.log(`_onResyncCompleted`);\n    this.resyncing = false;\n    if (null != this.resyncingHintPopup && this.resyncingHintPopup.parent) {\n      this.resyncingHintPopup.parent.removeChild(this.resyncingHintPopup);\n    }\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.scale);\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, simplePressToGoDialogNode);\n    setLocalZOrder(simplePressToGoDialogNode, 20);\n    return simplePressToGoDialogNode;\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n  },\n\n  _resetCurrentMatch() {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    self.countdownLabel.string = \"\";\n    if (self.playersNode) {\n      for (let i in self.playersNode) {\n        let node = self.playersNode[i];\n        node.getComponent(cc.Animation).play(\"Bottom\");\n        node.getComponent(\"SelfPlayer\").start();\n        node.active = true;\n      }\n    }\n    if (self.otherPlayerNodeDict) {\n      for (let i in self.otherPlayerNodeDict) {\n        let node = self.otherPlayerNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.selfPlayerNode && self.selfPlayerNode.parent) {\n      self.selfPlayerNode.parent.removeChild(self.selfPlayerNode);\n    }\n    if (self.treasureNodeDict) {\n      for (let i in self.treasureNodeDict) {\n        let node = self.treasureNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.trapBulletNodeDict) {\n      for (let i in self.trapBulletNodeDict) {\n        let node = self.trapBulletNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.trapNodeDict) {\n      for (let i in self.trapNodeDict) {\n        let node = self.trapNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n\n    if (self.pumpkinNodeDict) {\n      for (let i in self.pumpkinNodeDict) {\n        let node = self.pumpkinNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n\n    if (self.acceleratorNodeDict) {\n      for (let i in self.acceleratorNodeDict) {\n        let node = self.acceleratorNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n\n    self.mainCameraNode = canvasNode.getChildByName(\"Main Camera\");\n    self.mainCamera = self.mainCameraNode.getComponent(cc.Camera);\n    for (let child of self.mainCameraNode.children) {\n      child.setScale(1 / self.mainCamera.zoomRatio);\n    }\n    self.widgetsAboveAllNode = self.mainCameraNode.getChildByName(\"WidgetsAboveAll\");\n    self.mainCameraNode.setPosition(cc.v2());\n\n    self.resyncing = false;\n    self.lastRoomDownsyncFrameId = 0;\n\n    self.recentFrameCache = {};\n    self.recentFrameCacheCurrentSize = 0;\n    self.recentFrameCacheMaxCount = 2048;\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n\n    self.pumpkinInfoDict = {};\n    self.pumpkinNodeDict = {};\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n    self.acceleratorNodeDict = {};\n    if (self.findingPlayerNode) {\n      const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n      findingPlayerScriptIns.init();\n    }\n    self.showPopopInCanvas(self.gameRuleNode);\n    safelyAddChild(self.widgetsAboveAllNode, self.playersInfoNode);\n  },\n\n  onLoad() {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n    self.musicEffectManagerScriptIns = self.node.getComponent(\"MusicEffectManager\");\n\n    /** init requeired prefab started */\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n\n    //Result panel init\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\n    const resultPanelScriptIns = self.resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.mapScriptIns = self;\n    resultPanelScriptIns.onAgainClicked = () => {\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      self._resetCurrentMatch();\n      let shouldReconnectState = parseInt(cc.sys.localStorage.shouldReconnectState);\n      switch (shouldReconnectState) {\n        case 2:\n        case 1:\n          // Clicking too fast?\n          return;\n        default:\n          break;\n      }\n\n      if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) {\n        // Already disconnected. \n        cc.log(\"Ws session is already closed when `again/replay` button is clicked. Reconnecting now.\");\n        window.initPersistentSessionClient(self.initAfterWSConncted);\n      } else {\n        // Should disconnect first and reconnect within `window.handleClientSessionCloseOrError`. \n        cc.log(\"Ws session is not closed yet when `again/replay` button is clicked, closing the ws session now.\");\n        cc.sys.localStorage.shouldReconnectState = 2;\n        window.closeWSConnection();\n      }\n    };\n\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\n    self.gameRuleScriptIns.mapNode = self.node;\n\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\n    self.findingPlayerNode.width = self.canvasNode.width;\n    self.findingPlayerNode.height = self.canvasNode.height;\n    const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n    findingPlayerScriptIns.init();\n\n    self.playersInfoNode = cc.instantiate(self.playersInfoPrefab);\n\n    self.countdownToBeginGameNode = cc.instantiate(self.countdownToBeginGamePrefab);\n\n    self.playersNode = {};\n    const player1Node = cc.instantiate(self.player1Prefab);\n    const player2Node = cc.instantiate(self.player2Prefab);\n    Object.assign(self.playersNode, {\n      1: player1Node\n    });\n    Object.assign(self.playersNode, {\n      2: player2Node\n    });\n\n    /** init requeired prefab ended */\n\n    self.clientUpsyncFps = 20;\n    self._resetCurrentMatch();\n\n    const tiledMapIns = self.node.getComponent(cc.TiledMap);\n    const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n    for (let frameAnim of boundaryObjs.frameAnimations) {\n      const animNode = cc.instantiate(self.tiledAnimPrefab);\n      const anim = animNode.getComponent(cc.Animation);\n      animNode.setPosition(frameAnim.posInMapNode);\n      animNode.width = frameAnim.sizeInMapNode.width;\n      animNode.height = frameAnim.sizeInMapNode.height;\n      animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n      animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n      safelyAddChild(self.node, animNode);\n      setLocalZOrder(animNode, 5);\n      anim.addClip(frameAnim.animationClip, \"default\");\n      anim.play(\"default\");\n    }\n\n    self.barrierColliders = [];\n    for (let boundaryObj of boundaryObjs.barriers) {\n      const newBarrier = cc.instantiate(self.barrierPrefab);\n      const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n      newBarrier.setPosition(newBoundaryOffsetInMapNode);\n      newBarrier.setAnchorPoint(cc.v2(0, 0));\n      const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n      newBarrierColliderIns.points = [];\n      for (let p of boundaryObj) {\n        newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n      }\n      self.barrierColliders.push(newBarrierColliderIns);\n      self.node.addChild(newBarrier);\n    }\n    const allLayers = tiledMapIns.getLayers();\n    for (let layer of allLayers) {\n      const layerType = layer.getProperty(\"type\");\n      switch (layerType) {\n        case \"normal\":\n          setLocalZOrder(layer.node, 0);\n          break;\n        case \"barrier_and_shelter\":\n          setLocalZOrder(layer.node, 3);\n          break;\n        default:\n          break;\n      }\n    }\n\n    const allObjectGroups = tiledMapIns.getObjectGroups();\n    for (let objectGroup of allObjectGroups) {\n      const objectGroupType = objectGroup.getProperty(\"type\");\n      switch (objectGroupType) {\n        case \"barrier_and_shelter\":\n          setLocalZOrder(objectGroup.node, 3);\n          break;\n        default:\n          break;\n      }\n    }\n\n    for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n      const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n      const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n      newShelter.setPosition(newBoundaryOffsetInMapNode);\n      newShelter.setAnchorPoint(cc.v2(0, 0));\n      const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n      newShelterColliderIns.points = [];\n      for (let p of boundaryObj) {\n        newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n      }\n      self.node.addChild(newShelter);\n    }\n\n    window.handleClientSessionCloseOrError = function() {\n      let shouldReconnectState = parseInt(cc.sys.localStorage.shouldReconnectState);\n      switch (shouldReconnectState) {\n        case 2:\n          shouldReconnectState = 1;\n          cc.sys.localStorage.shouldReconnectState = shouldReconnectState;\n          cc.log(\"Reconnecting because 2 == shouldReconnectState and it's now set to 1.\");\n          window.initPersistentSessionClient(self.initAfterWSConncted);\n          return;\n        case 1:\n          cc.log(\"Neither reconnecting nor alerting because 1 == shouldReconnectState and it's now removed.\");\n          cc.sys.localStorage.removeItem(\"shouldReconnectState\");\n          return;\n        default:\n          break;\n      }\n      if (null == self.battleState || ALL_BATTLE_STATES.WAITING == self.battleState) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n      }\n    };\n\n    self.initAfterWSConncted = () => {\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      self._inputControlEnabled = false;\n      self.setupInputControls();\n\n\n      let kobakoCounter = 0\n      window.handleRoomDownsyncFrame = function(diffFrame) {\n        //console.log(diffFrame);\n\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n        const refFrameId = diffFrame.refFrameId;\n        if (-99 == refFrameId) { //显示倒计时\n          self.matchPlayersFinsihed(diffFrame.players);\n        } else if (-98 == refFrameId) { //显示匹配玩家\n          if (window.initWxSdk) {\n            window.initWxSdk();\n          }\n          const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n          if (!self.findingPlayerNode.parent) {\n            self.showPopopInCanvas(self.findingPlayerNode);\n          }\n          findingPlayerScriptIns.updatePlayersInfo(diffFrame.players);\n          return;\n        }\n\n        //根据downFrame显示游戏场景\n\n        const frameId = diffFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        const isInitiatingFrame = (0 > self.recentFrameCacheCurrentSize || 0 == refFrameId);\n        /*\n        if (frameId % 300 == 0) {\n          // WARNING: For testing only!\n          if (0 < frameId) {\n            self._lazilyTriggerResync(); \n          }\n          cc.log(`${JSON.stringify(diffFrame)}`);\n        }\n        */\n        const cachedFullFrame = self.recentFrameCache[refFrameId];\n        if (\n          !isInitiatingFrame\n          && self.useDiffFrameAlgo\n          && (refFrameId > 0 || 0 < self.recentFrameCacheCurrentSize) // Critical condition to differentiate between \"BattleStarted\" or \"ShouldResync\". \n          && null == cachedFullFrame\n        ) { //重连后重新同步\n          self._lazilyTriggerResync();\n          // Later incoming diffFrames will all suffice that `0 < self.recentFrameCacheCurrentSize && null == cachedFullFrame`, until `this._onResyncCompleted` is successfully invoked.\n          return;\n        }\n\n        if (isInitiatingFrame && 0 == refFrameId) {\n          // Reaching here implies that you've received the resync frame.\n          self._onResyncCompleted();\n        }\n        let countdownNanos = diffFrame.countdownNanos;\n        if (countdownNanos < 0)\n          countdownNanos = 0;\n        const countdownSeconds = parseInt(countdownNanos / 1000000000);\n        if (isNaN(countdownSeconds)) {\n          cc.log(`countdownSeconds is NaN for countdownNanos == ${countdownNanos}.`);\n        }\n        // if(self.musicEffectManagerScriptIns && 10 == countdownSeconds ) {\n        //   self.musicEffectManagerScriptIns.playCountDown10SecToEnd();\n        // }\n        self.countdownLabel.string = countdownSeconds;\n        const roomDownsyncFrame = ( //根据refFrameId和diffFrame计算出新的一帧\n        (isInitiatingFrame || !self.useDiffFrameAlgo)\n          ?\n          diffFrame\n          :\n          self._generateNewFullFrame(cachedFullFrame, diffFrame)\n        );\n        if (countdownNanos <= 0) {\n          self.onBattleStopped(roomDownsyncFrame.players);\n          return;\n        }\n        self._dumpToFullFrameCache(roomDownsyncFrame);\n        const sentAt = roomDownsyncFrame.sentAt;\n\n\n        //update players Info\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n              joinIndex: immediateSelfPlayerInfo.joinIndex,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n\n        //update pumpkin Info \n        self.pumpkinInfoDict = {};\n        const pumpkin = roomDownsyncFrame.pumpkin;\n        const pumpkinsLocalIdStrList = Object.keys(pumpkin);\n        for (let i = 0; i < pumpkinsLocalIdStrList.length; ++i) {\n          const k = pumpkinsLocalIdStrList[i];\n          const pumpkinLocalIdInBattle = parseInt(k);\n          const pumpkinInfo = pumpkin[k];\n          self.pumpkinInfoDict[pumpkinLocalIdInBattle] = pumpkinInfo;\n        }\n        \n\n        //update treasureInfoDict\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) { //直接根据最新帧的数据覆盖掉treasureInfoDict\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n        //kobako\n        kobakoCounter ++;\n        if(kobakoCounter < 100){\n          console.log(diffFrame);\n        }\n\n        //update acceleratorInfoDict\n        self.acceleratorInfoDict = {};\n        const accelartors = roomDownsyncFrame.speedShoes;\n        const accLocalIdStrList = Object.keys(accelartors);\n        for (let i = 0; i < accLocalIdStrList.length; ++i) {\n          const k = accLocalIdStrList[i];\n          const accLocalIdInBattle = parseInt(k);\n          const accInfo = accelartors[k];\n          self.acceleratorInfoDict[accLocalIdInBattle] = accInfo;\n        }\n\n        //update trapInfoDict\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(i18n.t(\"gameTip.start\"));\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n      // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    }\n\n    /*\n    * The following code snippet is a dirty fix.\n    */\n    let expectedRoomId = null;\n    const qDict = window.getQueryParamDict();\n    if (qDict) {\n      expectedRoomId = qDict[\"expectedRoomId\"];\n    } else {\n      if (window.history && window.history.state) {\n        expectedRoomId = window.history.state.expectedRoomId;\n      }\n    }\n    if (expectedRoomId) {\n      self.gameRuleNode.active = false;\n      window.initPersistentSessionClient(self.initAfterWSConncted);\n      return;\n    } else {\n      if (cc.sys.localStorage.boundRoomId) {\n        self.gameRuleNode.active = false;\n        window.initPersistentSessionClient(self.initAfterWSConncted);\n        return;\n      }\n    }\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    if (self.musicEffectManagerScriptIns)\n      self.musicEffectManagerScriptIns.playBGM();\n    const canvasNode = self.canvasNode;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    self.enableInputControls();\n    if (self.countdownToBeginGameNode.parent) {\n      self.countdownToBeginGameNode.parent.removeChild(self.countdownToBeginGameNode);\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n    }\n  },\n\n  onBattleStopped(players) {\n    const self = this;\n    if (self.musicEffectManagerScriptIns) {\n      self.musicEffectManagerScriptIns.stopAllMusic();\n    }\n    const canvasNode = self.canvasNode;\n    const resultPanelNode = self.resultPanelNode;\n    const resultPanelScriptIns = resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.showPlayerInfo(players);\n    window.clearBoundRoomIdInBothVolatileAndPersistentStorage(); //清除cached boundRoomId\n    // Such that it doesn't execute \"update(dt)\" anymore. \n    self.selfPlayerNode.active = false;\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.showPopopInCanvas(resultPanelNode);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const joinIndex = this.selfPlayerInfo.joinIndex;\n    const newPlayerNode = this.playersNode[joinIndex];\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n    instance.selfPlayerScriptIns.showArrowTipNode();\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n      playersScriptIns.updateData(self.selfPlayerInfo);\n      if (null != self.selfPlayerScriptIns) {\n        self.selfPlayerScriptIns.updateSpeed(self.selfPlayerInfo.speed);\n      }\n    }\n\n    let toRemoveAcceleratorNodeDict = {};\n    Object.assign(toRemoveAcceleratorNodeDict, self.acceleratorNodeDict);\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    let toRemovePumpkinNodeDict = {};\n    Object.assign(toRemovePumpkinNodeDict, self.pumpkinNodeDict);\n\n    /*\n    * NOTE: At the beginning of each GUI update cycle, mark all `self.trapBulletNode` as `toRemoveBulletNode`, while only those that persist in `self.trapBulletInfoDict` are NOT finally removed. This approach aims to reduce the lines of codes for coping with node removal in the RoomDownsyncFrame algorithm.\n    */\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n\n      //更新玩家信息展示\n      if (null != cachedPlayerData) {\n        const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n        playersScriptIns.updateData(cachedPlayerData);\n      }\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = self.playersNode[cachedPlayerData.joinIndex];\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aControlledOtherPlayerScriptIns = targetNode.getComponent(\"SelfPlayer\");\n      aControlledOtherPlayerScriptIns.updateSpeed(cachedPlayerData.speed);\n\n\n\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      aControlledOtherPlayerScriptIns.toMoveByVecMag = toMoveByVecMag;\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      //const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 1.0);\n      if (toMoveByVecMag < notToMoveDisThreshold) { \n        aControlledOtherPlayerScriptIns.activeDirection = { //任意一个值为0都不会改变方向\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag > toTeleportDisThreshold) { //如果移动过大 打印log但还是会移动\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          aControlledOtherPlayerScriptIns.activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          aControlledOtherPlayerScriptIns.toMoveByVec = toMoveByVec;\n          aControlledOtherPlayerScriptIns.toMoveByVecMag = toMoveByVecMag;\n\n          if (isNaN(normalizedDir.dx) || isNaN(normalizedDir.dy)) {\n            aControlledOtherPlayerScriptIns.activeDirection = {\n              dx: 0,\n              dy: 0,\n            };\n          } else {\n            aControlledOtherPlayerScriptIns.activeDirection = normalizedDir;\n          }\n        }\n      }\n\n\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        //console.log(newScheduledDirection);\n        aControlledOtherPlayerScriptIns.scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n\n\n    }\n\n    // 更新加速鞋显示 \n    for (let k in self.acceleratorInfoDict) {\n      const accLocalIdInBattle = parseInt(k);\n      const acceleratorInfo = self.acceleratorInfoDict[accLocalIdInBattle];\n      const newPos = cc.v2(\n        acceleratorInfo.x,\n        acceleratorInfo.y\n      );\n      let targetNode = self.acceleratorNodeDict[accLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.acceleratorPrefab);\n        self.acceleratorNodeDict[accLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      if (null != toRemoveAcceleratorNodeDict[accLocalIdInBattle]) {\n        delete toRemoveAcceleratorNodeDict[accLocalIdInBattle];\n      }\n    }\n    // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.x,\n        trapInfo.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n    }\n\n    // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.x,\n        bulletInfo.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aBulletScriptIns = targetNode.getComponent(\"Bullet\");\n      aBulletScriptIns.localIdInBattle = bulletLocalIdInBattle;\n      aBulletScriptIns.linearSpeed = bulletInfo.linearSpeed * 1000000000; // The `bullet.LinearSpeed` on server-side is denoted in pts/nanoseconds. \n\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y,\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (aBulletScriptIns.linearSpeed * dt * 100);\n      const notToMoveDisThreshold = (aBulletScriptIns.linearSpeed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        aBulletScriptIns.activeDirection = {\n          dx: 0,\n          dy: 0,\n        };\n      } else {\n        if (toMoveByVecMag > toTeleportDisThreshold) {\n          cc.log(`Bullet ${bulletLocalIdInBattle} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          aBulletScriptIns.activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          if (isNaN(normalizedDir.dx) || isNaN(normalizedDir.dy)) {\n            aBulletScriptIns.activeDirection = {\n              dx: 0,\n              dy: 0,\n            };\n          } else {\n            aBulletScriptIns.activeDirection = normalizedDir;\n          }\n        }\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n    }\n\n    //更新南瓜少年的显示\n    for (let k in self.pumpkinInfoDict) {\n      const pumpkinLocalIdInBattle = parseInt(k);\n      const pumpkinInfo = self.pumpkinInfoDict[pumpkinLocalIdInBattle];\n      const newPos = cc.v2(pumpkinInfo.x, pumpkinInfo.y);\n      let targetNode = self.pumpkinNodeDict[pumpkinLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.pumpkinPrefab);\n        self.pumpkinNodeDict[pumpkinLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aPumpkinScriptIns = targetNode.getComponent(\"Pumpkin\");\n      aPumpkinScriptIns.localIdInBattle = pumpkinLocalIdInBattle;\n      aPumpkinScriptIns.linearSpeed = pumpkinInfo.linearSpeed * 1000000000; // The `pumpkin.LinearSpeed` on server-side is denoted in pts/nanoseconds. \n\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y,\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (aPumpkinScriptIns.linearSpeed * dt * 100);\n      const notToMoveDisThreshold = (aPumpkinScriptIns.linearSpeed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        aPumpkinScriptIns.activeDirection = {\n          dx: 0,\n          dy: 0,\n        };\n      } else {\n        if (toMoveByVecMag > toTeleportDisThreshold) {\n          cc.log(`Pumpkin ${pumpkinLocalIdInBattle} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          aPumpkinScriptIns.activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          if (isNaN(normalizedDir.dx) || isNaN(normalizedDir.dy)) {\n            aPumpkinScriptIns.activeDirection = {\n              dx: 0,\n              dy: 0,\n            };\n          } else {\n            aPumpkinScriptIns.activeDirection = normalizedDir;\n          }\n        }\n      }\n      if (null != toRemovePumpkinNodeDict[pumpkinLocalIdInBattle]) {\n        delete toRemovePumpkinNodeDict[pumpkinLocalIdInBattle];\n      }\n    }\n\n    // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.x,\n        treasureInfo.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        const treasureNodeScriptIns = targetNode.getComponent(\"Treasure\");\n        treasureNodeScriptIns.setData(treasureInfo);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed pumpkins.\n    for (let k in toRemovePumpkinNodeDict) {\n      const pumpkinLocalIdInBattle = parseInt(k);\n      toRemovePumpkinNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.pumpkinNodeDict[pumpkinLocalIdInBattle];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureScriptIns = toRemoveTreasureNodeDict[k].getComponent(\"Treasure\");\n      treasureScriptIns.playPickedUpAnimAndDestroy();\n      if (self.musicEffectManagerScriptIns) {\n        if (2 == treasureScriptIns.type) {\n          self.musicEffectManagerScriptIns.playHighScoreTreasurePicked();\n        } else {\n          self.musicEffectManagerScriptIns.playTreasurePicked();\n        }\n      }\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed accelerators.\n    for (let k in toRemoveAcceleratorNodeDict) {\n      const accLocalIdInBattle = parseInt(k);\n      toRemoveAcceleratorNodeDict[k].parent.removeChild(toRemoveAcceleratorNodeDict[k]);\n      delete self.acceleratorNodeDict[accLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (self.musicEffectManagerScriptIns) {\n        self.musicEffectManagerScriptIns.playCrashedByTrapBullet();\n      }\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      window.closeWSConnection();\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.showPopopInCanvas(self.confirmLogoutNode);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n\n  initWSConnection(evt, cb) {\n    const self = this;\n    window.initPersistentSessionClient(self.initAfterWSConncted);\n    if (cb) {\n      cb()\n    }\n  },\n\n  showPopopInCanvas(toShowNode) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, toShowNode);\n    setLocalZOrder(toShowNode, 10);\n  },\n\n  matchPlayersFinsihed(players) {\n    const self = this;\n    const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n    findingPlayerScriptIns.updatePlayersInfo(players);\n    window.setTimeout(() => {\n      if (self.findingPlayerNode.parent) {\n        self.findingPlayerNode.parent.removeChild(self.findingPlayerNode);\n        self.transitToState(ALL_MAP_STATES.VISUAL);\n        for (let i in players) {\n          //更新在线玩家信息面板的信息\n          const playerInfo = players[i];\n          const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n          playersScriptIns.updateData(playerInfo);\n        }\n      }\n      const countDownScriptIns = self.countdownToBeginGameNode.getComponent(\"CountdownToBeginGame\");\n      countDownScriptIns.setData();\n      self.showPopopInCanvas(self.countdownToBeginGameNode);\n      return;\n    }, 2000);\n  },\n});\n"]}