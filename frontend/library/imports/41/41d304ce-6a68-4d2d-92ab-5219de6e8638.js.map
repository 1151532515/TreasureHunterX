{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","useDiffFrameAlgo","default","canvasNode","type","Node","tiledAnimPrefab","Prefab","selfPlayerPrefab","treasurePrefab","trapPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","selfPlayerIdLabel","Label","boundRoomIdLabel","countdownLabel","selfPlayerScoreLabel","otherPlayerScoreIndicatorPrefab","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","_generateNewFullFrame","refFullFrame","diffFrame","newFullFrame","id","treasures","traps","bullets","players","playersLocalIdStrList","Object","keys","i","length","k","playerId","parseInt","removed","treasuresLocalIdStrList","treasureLocalIdInBattle","trapsLocalIdStrList","trapLocalIdInBattle","bulletsLocalIdStrList","bulletLocalIdInBattle","_dumpToFullFrameCache","fullFrame","self","recentFrameCacheCurrentSize","recentFrameCacheMaxCount","toDelFrameId","recentFrameCache","_onPerUpsyncFrame","instance","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","dir","dx","parseFloat","dy","x","selfPlayerNode","y","ackingFrameId","lastRoomDownsyncFrameId","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","upsyncLoopInterval","clearInterval","inputControlTimer","popupSimplePressToGo","labelString","state","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","getScale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","onLoad","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","mapNode","node","parent","battleState","otherPlayerCachedDataDict","otherPlayerNodeDict","treasureInfoDict","treasureNodeDict","trapInfoDict","trapBulletInfoDict","trapBulletNodeDict","trapNodeDict","scoreInfoDict","confirmLogoutNode","resultPanelNode","gameRuleNode","gameRuleScriptIns","showPopopInCanvas","findingPlayerNode","clientUpsyncFps","reconnectWSWithoutRoomId","Promise","resolve","reject","clientSessionPingInterval","clearBoundRoomIdInBothVolatileAndPersistentStorage","then","initPersistentSessionClient","initAfterWSConncted","handleClientSessionCloseOrError","tiledMapIns","TiledMap","parse","sys","localStorage","selfPlayer","assign","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","width","sizeInMapNode","height","origSize","setAnchorPoint","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleRoomDownsyncFrame","frameId","refFrameId","isInitiatingFrame","log","cachedFullFrame","countdownNanos","countdownSeconds","isNaN","roomDownsyncFrame","onBattleStopped","sentAt","playerIdStrList","immediateSelfPlayerInfo","speed","score","anotherPlayer","treasureInfo","trapInfo","bulletInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","resultPanelScriptIns","showPlayerInfo","active","newPlayerNode","toStartWithPos","update","dt","canvasParentNode","boundRoomId","startFrozenDisplay","stopFrozenDisplay","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","scoreNode","debugInfoNode","playerScore","targetNode","aControlledOtherPlayerScriptIns","newScheduledDirection","discretizeDirection","joyStickEps","scheduleNewDirection","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","normalizedDir","getNumberOfRunningActions","durationSeconds","runAction","moveTo","s","byClick","localClearance","closeWSConnection","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","initWSConnection","cb","toShowNode"],"mappings":"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","file":"Map.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const i18n = require('LanguageData');\r\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\r\n\r\nwindow.ALL_MAP_STATES = {\r\n  VISUAL: 0, // For free dragging & zooming.\r\n  EDITING_BELONGING: 1,\r\n  SHOWING_MODAL_POPUP: 2,\r\n};\r\n\r\nwindow.ALL_BATTLE_STATES = {\r\n  WAITING: 0,\r\n  IN_BATTLE: 1,\r\n  IN_SETTLEMENT: 2,\r\n  IN_DISMISSAL: 3,\r\n};\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: { \r\n    useDiffFrameAlgo: {\r\n      default: true \r\n    },\r\n    canvasNode: {\r\n      type: cc.Node,\r\n      default: null,\r\n    },\r\n    tiledAnimPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    selfPlayerPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    treasurePrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    trapPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    npcPlayerPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    type2NpcPlayerPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    barrierPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    shelterPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    shelterZReducerPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    keyboardInputControllerNode: {\r\n      type: cc.Node,\r\n      default: null\r\n    },\r\n    joystickInputControllerNode: {\r\n      type: cc.Node,\r\n      default: null\r\n    },\r\n    confirmLogoutPrefab: {\r\n      type: cc.Prefab,\r\n      default: null\r\n    },\r\n    simplePressToGoDialogPrefab: {\r\n      type: cc.Prefab,\r\n      default: null\r\n    },\r\n    selfPlayerIdLabel: {\r\n      type: cc.Label,\r\n      default: null\r\n    },\r\n    boundRoomIdLabel: {\r\n      type: cc.Label,\r\n      default: null\r\n    },\r\n    countdownLabel: {\r\n      type: cc.Label,\r\n      default: null\r\n    },\r\n    selfPlayerScoreLabel: {\r\n      type: cc.Label,\r\n      default: null\r\n    },\r\n    otherPlayerScoreIndicatorPrefab: {\r\n      type:cc.Prefab,\r\n      default: null\r\n    },\r\n    trapBulletPrefab: {\r\n      type:cc.Prefab,\r\n      default: null\r\n    },\r\n    resultPanelPrefab: {\r\n      type:cc.Prefab,\r\n      default: null\r\n    },\r\n    gameRulePrefab: {\r\n      type:cc.Prefab,\r\n      default: null\r\n    },\r\n    findingPlayerPrefab: {\r\n      type:cc.Prefab,\r\n      default: null\r\n    },\r\n  },\r\n  \r\n  _generateNewFullFrame: function(refFullFrame, diffFrame) {\r\n    let newFullFrame = {\r\n      id: diffFrame.id,\r\n      treasures: refFullFrame.treasures,\r\n      traps: refFullFrame.traps,\r\n      bullets: refFullFrame.bullets,\r\n      players: refFullFrame.players,\r\n    };\r\n\r\n    const players = diffFrame.players;\r\n    const playersLocalIdStrList = Object.keys(players);\r\n    for (let i = 0; i < playersLocalIdStrList.length; ++i) {\r\n      const k = playersLocalIdStrList[i];\r\n      const playerId = parseInt(k);\r\n      if (true == diffFrame.players[playerId].removed) {\r\n        // cc.log(`Player id == ${playerId} is removed.`);\r\n        delete newFullFrame.players[playerId];\r\n      } else {\r\n        newFullFrame.players[playerId] = diffFrame.players[playerId];  \r\n      }  \r\n    }\r\n    \r\n    const treasures = diffFrame.treasures;\r\n    const treasuresLocalIdStrList = Object.keys(treasures);\r\n    for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\r\n      const k = treasuresLocalIdStrList[i];\r\n      const treasureLocalIdInBattle = parseInt(k);\r\n      if (true == diffFrame.treasures[treasureLocalIdInBattle].removed) {\r\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\r\n        delete newFullFrame.treasures[treasureLocalIdInBattle];\r\n      } else {\r\n        newFullFrame.treasures[treasureLocalIdInBattle] = diffFrame.treasures[treasureLocalIdInBattle];  \r\n      }  \r\n    }\r\n\r\n    const traps = diffFrame.traps;\r\n    const trapsLocalIdStrList = Object.keys(traps);\r\n    for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\r\n      const k = trapsLocalIdStrList[i];\r\n      const trapLocalIdInBattle = parseInt(k);\r\n      if (true == diffFrame.traps[trapLocalIdInBattle].removed) {\r\n        // cc.log(`Trap with localIdInBattle == ${trapLocalIdInBattle} is removed.`);\r\n        delete newFullFrame.traps[trapLocalIdInBattle];\r\n      } else {\r\n        newFullFrame.traps[trapLocalIdInBattle] = diffFrame.traps[trapLocalIdInBattle];  \r\n      }\r\n    }\r\n\r\n    const bullets = diffFrame.bullets;\r\n    const bulletsLocalIdStrList = Object.keys(bullets);\r\n    for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\r\n      const k = bulletsLocalIdStrList[i];\r\n      const bulletLocalIdInBattle = parseInt(k);\r\n      if (true == diffFrame.bullets[bulletLocalIdInBattle].removed) {\r\n        // cc.log(`Bullet with localIdInBattle == ${bulletLocalIdInBattle} is removed.`);\r\n        delete newFullFrame.bullets[bulletLocalIdInBattle];\r\n      } else {\r\n        newFullFrame.bullets[bulletLocalIdInBattle] = diffFrame.bullets[bulletLocalIdInBattle];  \r\n      }\r\n    }\r\n\r\n    return newFullFrame;\r\n  },\r\n\r\n  _dumpToFullFrameCache: function(fullFrame) {\r\n    const self = this;\r\n    while (self.recentFrameCacheCurrentSize >= self.recentFrameCacheMaxCount) {\r\n      const toDelFrameId = Object.keys(self.recentFrameCache)[0];\r\n      // cc.log(\"toDelFrameId is \" + toDelFrameId + \".\");\r\n      delete self.recentFrameCache[toDelFrameId];\r\n      --self.recentFrameCacheCurrentSize;\r\n    }\r\n    self.recentFrameCache[fullFrame.id] = fullFrame;\r\n    ++self.recentFrameCacheCurrentSize;\r\n  },\r\n\r\n  _onPerUpsyncFrame() {\r\n    const instance = this;\r\n    if (\r\n      null == instance.selfPlayerInfo ||\r\n      null == instance.selfPlayerScriptIns ||\r\n      null == instance.selfPlayerScriptIns.scheduledDirection\r\n      ) return;\r\n    const upsyncFrameData = {\r\n      id: instance.selfPlayerInfo.id,\r\n      /**\r\n      * WARNING\r\n      *\r\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\r\n      */\r\n      dir: {\r\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\r\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\r\n      },\r\n      x: parseFloat(instance.selfPlayerNode.x),\r\n      y: parseFloat(instance.selfPlayerNode.y),\r\n      ackingFrameId: instance.lastRoomDownsyncFrameId,\r\n    };\r\n    const wrapped = {\r\n      msgId: Date.now(),\r\n      act: \"PlayerUpsyncCmd\",\r\n      data: upsyncFrameData,\r\n    }\r\n    window.sendSafely(JSON.stringify(wrapped));\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n  onDestroy() {\r\n    const self = this;\r\n    if (self.upsyncLoopInterval) {\r\n      clearInterval(self.upsyncLoopInterval);\r\n    }\r\n    if (self.inputControlTimer) {\r\n      clearInterval(self.inputControlTimer)\r\n    }\r\n  },\r\n\r\n  popupSimplePressToGo(labelString) {\r\n    const self = this;\r\n    /*\r\n    if (ALL_MAP_STATES.VISUAL != self.state) {\r\n      return;\r\n    }*/\r\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\r\n\r\n    const canvasNode = self.canvasNode;\r\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\r\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\r\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\r\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\r\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\r\n    const postDismissalByYes = () => {\r\n      self.transitToState(ALL_MAP_STATES.VISUAL);\r\n      canvasNode.removeChild(simplePressToGoDialogNode);\r\n    }\r\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\r\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\r\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\r\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\r\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\r\n    safelyAddChild(canvasNode, simplePressToGoDialogNode);\r\n    setLocalZOrder(simplePressToGoDialogNode, 20);\r\n  },\r\n\r\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\r\n    const millisToGo = 3000;\r\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s will logout in %s seconds.\", labelString, millisToGo / 1000));\r\n    setTimeout(() => {\r\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\r\n    }, millisToGo);\r\n },\r\n\r\n  onLoad() {\r\n    const self = this;\r\n    self.lastRoomDownsyncFrameId = 0;\r\n\r\n    self.recentFrameCache = {};\r\n    self.recentFrameCacheCurrentSize = 0;\r\n    self.recentFrameCacheMaxCount = 2048;\r\n\r\n    cc.director.getCollisionManager().enabled = true;\r\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\r\n    self.selfPlayerNode = null;\r\n    self.selfPlayerScriptIns = null;\r\n    self.selfPlayerInfo = null;\r\n    self.upsyncLoopInterval = null;\r\n    self.transitToState(ALL_MAP_STATES.VISUAL);\r\n\r\n    const mapNode = self.node;\r\n    const canvasNode = mapNode.parent;\r\n    cc.director.getCollisionManager().enabled = true;\r\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\r\n\r\n    self.battleState = ALL_BATTLE_STATES.WAITING;\r\n    self.otherPlayerCachedDataDict = {};\r\n    self.otherPlayerNodeDict = {};\r\n    self.treasureInfoDict = {};\r\n    self.treasureNodeDict = {};\r\n    self.trapInfoDict = {};\r\n    self.trapBulletInfoDict = {};\r\n    self.trapBulletNodeDict = {};\r\n    self.trapNodeDict = {};\r\n    self.scoreInfoDict = {};\r\n\r\n    /** init confirmLogoutNode started */\r\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\r\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\r\n    /** init confirmLogoutNode ended */\r\n\r\n    /** init resultPanelNode started */\r\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\r\n    /** init resultPanelNode ended */\r\n\r\n    /** init gameRuleNode started */\r\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\r\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\r\n    self.gameRuleScriptIns.mapNode = self.node;\r\n    self.showPopopInCanvas(self.gameRuleNode);\r\n    /** init resultPanelNode ended */\r\n\r\n    /** init findingPlayer started */\r\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\r\n    /** init findingPlayerNode ended */\r\n\r\n    self.clientUpsyncFps = 20;\r\n    self.upsyncLoopInterval = null;\r\n\r\n    window.reconnectWSWithoutRoomId = function() {\r\n      return  new Promise((resolve,reject) => {\r\n      if (window.clientSessionPingInterval) {\r\n        clearInterval(clientSessionPingInterval);\r\n      }\r\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage()\r\n      return resolve();\r\n      })\r\n      .then(() =>{\r\n        this.initPersistentSessionClient(this.initAfterWSConncted);\r\n      });\r\n    }\r\n\r\n    window.handleClientSessionCloseOrError = function() {\r\n      if(!self.battleState)\r\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\r\n    };\r\n\r\n    self.initAfterWSConncted = () => {\r\n      self.transitToState(ALL_MAP_STATES.VISUAL);\r\n      const tiledMapIns = self.node.getComponent(cc.TiledMap);\r\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\r\n      Object.assign(self.selfPlayerInfo, {\r\n        id: self.selfPlayerInfo.playerId\r\n      });\r\n      this._inputControlEnabled = false;\r\n      self.setupInputControls();\r\n\r\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\r\n      for (let frameAnim of boundaryObjs.frameAnimations) {\r\n        const animNode = cc.instantiate(self.tiledAnimPrefab);\r\n        const anim = animNode.getComponent(cc.Animation);\r\n        animNode.setPosition(frameAnim.posInMapNode);\r\n        animNode.width = frameAnim.sizeInMapNode.width;\r\n        animNode.height = frameAnim.sizeInMapNode.height;\r\n        animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\r\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\r\n        safelyAddChild(self.node, animNode);\r\n        setLocalZOrder(animNode, 5);\r\n        anim.addClip(frameAnim.animationClip, \"default\");\r\n        anim.play(\"default\");\r\n      }\r\n\r\n      self.barrierColliders = [];\r\n      for (let boundaryObj of boundaryObjs.barriers) {\r\n        const newBarrier = cc.instantiate(self.barrierPrefab);\r\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\r\n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\r\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\r\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\r\n        newBarrierColliderIns.points = [];\r\n        for (let p of boundaryObj) {\r\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\r\n        }\r\n        self.barrierColliders.push(newBarrierColliderIns);\r\n        self.node.addChild(newBarrier);\r\n      }\r\n\r\n      const allLayers = tiledMapIns.getLayers();\r\n      for (let layer of allLayers) {\r\n        const layerType = layer.getProperty(\"type\");\r\n        switch (layerType) {\r\n          case \"normal\":\r\n            setLocalZOrder(layer.node, 0);\r\n            break;\r\n          case \"barrier_and_shelter\":\r\n            setLocalZOrder(layer.node, 3);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      const allObjectGroups = tiledMapIns.getObjectGroups();\r\n      for (let objectGroup of allObjectGroups) {\r\n        const objectGroupType = objectGroup.getProperty(\"type\");\r\n        switch (objectGroupType) {\r\n          case \"barrier_and_shelter\":\r\n            setLocalZOrder(objectGroup.node, 3);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (this.joystickInputControllerNode.parent !== this.node.parent.parent.getChildByName('JoystickContainer')) {\r\n        this.joystickInputControllerNode.parent = this.node.parent.parent.getChildByName('JoystickContainer');\r\n      }\r\n      this.joystickInputControllerNode.parent.width = this.node.parent.width * 0.5;\r\n      this.joystickInputControllerNode.parent.height = this.node.parent.height;\r\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\r\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\r\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\r\n        newShelter.setPosition(newBoundaryOffsetInMapNode);\r\n        newShelter.setAnchorPoint(cc.v2(0, 0));\r\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\r\n        newShelterColliderIns.points = [];\r\n        for (let p of boundaryObj) {\r\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\r\n        }\r\n        self.node.addChild(newShelter);\r\n      }\r\n\r\n      window.handleRoomDownsyncFrame = function(diffFrame) {\r\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\r\n        const frameId = diffFrame.id;\r\n        if (frameId <= self.lastRoomDownsyncFrameId) {\r\n          // Log the obsolete frames?\r\n          return;\r\n        }\r\n        const refFrameId = diffFrame.refFrameId;\r\n        const isInitiatingFrame = (0 >= self.recentFrameCacheCurrentSize || 0 == refFrameId); \r\n        if (refFrameId % 60 == 0) {\r\n          cc.log(`${JSON.stringify(diffFrame)}`);\r\n        }\r\n        const cachedFullFrame = self.recentFrameCache[refFrameId];\r\n        if (!isInitiatingFrame && self.useDiffFrameAlgo && null == cachedFullFrame) {\r\n          cc.log(`Should send a reset upsync to server for diffFrame id == ${frameId}, refFrameId == ${refFrameId}`);\r\n          return;\r\n        } \r\n        let countdownNanos = diffFrame.countdownNanos;\r\n        if (countdownNanos < 0) countdownNanos = 0;\r\n        const countdownSeconds = parseInt(countdownNanos / 1000000000);\r\n        if (isNaN(countdownSeconds)) {\r\n          cc.log(`countdownSeconds is NaN for countdownNanos == ${countdownNanos}.`);\r\n        }\r\n        self.countdownLabel.string = countdownSeconds;\r\n        const roomDownsyncFrame = (\r\n          (isInitiatingFrame || !self.useDiffFrameAlgo)\r\n          ?\r\n          diffFrame    \r\n          :\r\n          self._generateNewFullFrame(cachedFullFrame, diffFrame) \r\n        ); \r\n        if (countdownNanos <= 0) {\r\n          self.onBattleStopped(roomDownsyncFrame.players);\r\n          return;\r\n        }\r\n        self._dumpToFullFrameCache(roomDownsyncFrame);\r\n        const sentAt = roomDownsyncFrame.sentAt;\r\n        const players = roomDownsyncFrame.players;\r\n        const playerIdStrList = Object.keys(players);\r\n        self.otherPlayerCachedDataDict = {};\r\n        for (let i = 0; i < playerIdStrList.length; ++i) {\r\n          const k = playerIdStrList[i];\r\n          const playerId = parseInt(k);\r\n          if (playerId == self.selfPlayerInfo.id) {\r\n            const immediateSelfPlayerInfo = players[k];\r\n            Object.assign(self.selfPlayerInfo, {\r\n              x: immediateSelfPlayerInfo.x,\r\n              y: immediateSelfPlayerInfo.y,\r\n              speed: immediateSelfPlayerInfo.speed,\r\n              battleState: immediateSelfPlayerInfo.battleState,\r\n              score: immediateSelfPlayerInfo.score,\r\n            });\r\n            continue;\r\n          }\r\n          const anotherPlayer = players[k];\r\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\r\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\r\n        }\r\n        self.treasureInfoDict = {};\r\n        const treasures = roomDownsyncFrame.treasures;\r\n        const treasuresLocalIdStrList = Object.keys(treasures);\r\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\r\n          const k = treasuresLocalIdStrList[i];\r\n          const treasureLocalIdInBattle = parseInt(k);\r\n          const treasureInfo = treasures[k];\r\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\r\n        }\r\n\r\n        self.trapInfoDict = {};\r\n        const traps = roomDownsyncFrame.traps;\r\n        const trapsLocalIdStrList = Object.keys(traps);\r\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\r\n          const k = trapsLocalIdStrList[i];\r\n          const trapLocalIdInBattle = parseInt(k);\r\n          const trapInfo = traps[k];\r\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\r\n        }\r\n\r\n        self.trapBulletInfoDict = {};\r\n        const bullets = roomDownsyncFrame.bullets;\r\n        const bulletsLocalIdStrList = Object.keys(bullets);\r\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\r\n          const k = bulletsLocalIdStrList[i];\r\n          const bulletLocalIdInBattle = parseInt(k);\r\n          const bulletInfo = bullets[k];\r\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\r\n        }\r\n\r\n        if (0 == self.lastRoomDownsyncFrameId) {\r\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\r\n          if (1 == frameId) {\r\n            // No need to prompt upon rejoined.\r\n            self.popupSimplePressToGo(\"Battle started!\");\r\n          }\r\n          self.onBattleStarted();\r\n        }\r\n        self.lastRoomDownsyncFrameId = frameId;\r\n        // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\r\n      };\r\n      if(ALL_BATTLE_STATES.WAITING == self.battleState) {\r\n        self.showPopopInCanvas(self.findingPlayerNode);\r\n      }\r\n    }\r\n  },\r\n\r\n  setupInputControls() {\r\n    const instance = this;\r\n    const mapNode = instance.node;\r\n    const canvasNode = mapNode.parent;\r\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\r\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\r\n\r\n    const ctrl = joystickInputControllerScriptIns;\r\n    instance.ctrl = ctrl;\r\n\r\n    instance.inputControlTimer = setInterval(function() {\r\n      if (false == instance._inputControlEnabled) return;\r\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\r\n    }, inputControlPollerMillis);\r\n  },\r\n\r\n  enableInputControls() {\r\n    this._inputControlEnabled = true;\r\n  },\r\n\r\n  disableInputControls() {\r\n    this._inputControlEnabled = false;\r\n  },\r\n\r\n  onBattleStarted() {\r\n    const self = this;\r\n    const canvasNode = self.canvasNode;\r\n    self.spawnSelfPlayer();\r\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\r\n    self.transitToState(ALL_MAP_STATES.VISUAL);\r\n    self.enableInputControls();\r\n    if(self.findingPlayerNode.parent)\r\n      canvasNode.removeChild(self.findingPlayerNode);\r\n  },\r\n\r\n  onBattleStopped(players) {\r\n    const self = this;\r\n    const canvasNode = self.canvasNode;\r\n    const resultPanelNode = self.resultPanelNode;\r\n    const resultPanelScriptIns =  resultPanelNode.getComponent(\"ResultPanel\");\r\n    resultPanelScriptIns.showPlayerInfo(players);\r\n    // Such that it doesn't execute \"update(dt)\" anymore. \r\n    self.selfPlayerNode.active = false;\r\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\r\n    self.showPopopInCanvas(resultPanelNode);\r\n  },\r\n\r\n  spawnSelfPlayer() {\r\n    const instance = this;\r\n    const newPlayerNode = cc.instantiate(instance.selfPlayerPrefab);\r\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\r\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\r\n    newPlayerNode.setPosition(toStartWithPos);\r\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\r\n\r\n    instance.node.addChild(newPlayerNode);\r\n\r\n    setLocalZOrder(newPlayerNode, 5);\r\n    instance.selfPlayerNode = newPlayerNode;\r\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\r\n  },\r\n\r\n  update(dt) {\r\n    const self = this;\r\n    const mapNode = self.node;\r\n    const canvasNode = mapNode.parent;\r\n    const canvasParentNode = canvasNode.parent;\r\n    if (null != window.boundRoomId) {\r\n      self.boundRoomIdLabel.string = window.boundRoomId;\r\n    }\r\n    if (null != self.selfPlayerInfo) {\r\n      self.selfPlayerIdLabel.string = self.selfPlayerInfo.id;\r\n      const score  = self.selfPlayerInfo.score ? self.selfPlayerInfo.score : 0 \r\n      self.selfPlayerScoreLabel.string = score;\r\n\r\n      if (0 == self.selfPlayerInfo.speed && 0 < self.selfPlayerScriptIns.speed) {\r\n        self.selfPlayerScriptIns.startFrozenDisplay(); \r\n      } \r\n      if (0 < self.selfPlayerInfo.speed && 0 == self.selfPlayerScriptIns.speed) {\r\n        self.selfPlayerScriptIns.stopFrozenDisplay(); \r\n      } \r\n    }\r\n\r\n    let toRemovePlayerNodeDict = {};\r\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\r\n\r\n    let toRemoveTreasureNodeDict = {};\r\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\r\n\r\n    let toRemoveTrapNodeDict = {};\r\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\r\n\r\n    let toRemoveBulletNodeDict = {};\r\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\r\n\r\n    for (let k in self.otherPlayerCachedDataDict) {\r\n      const playerId = parseInt(k);\r\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\r\n      const newPos = cc.v2(\r\n        cachedPlayerData.x,\r\n        cachedPlayerData.y\r\n      );\r\n     //显示分数\r\n     if(!self.scoreInfoDict[playerId]){\r\n        const scoreNode = cc.instantiate(self.otherPlayerScoreIndicatorPrefab);  \r\n        const debugInfoNode = canvasParentNode.getChildByName(\"DebugInfo\");\r\n        scoreNode.getChildByName(\"title\").getComponent(cc.Label).string = \"player\"+cachedPlayerData.id+\"'s score:\";\r\n        safelyAddChild(debugInfoNode,scoreNode);\r\n        self.scoreInfoDict[playerId] = scoreNode;\r\n      }\r\n      const playerScore  = !cachedPlayerData.score ? cachedPlayerData.score  : 0 \r\n      self.scoreInfoDict[playerId].getChildByName(\"OtherPlayerScoreLabel\").getComponent(cc.Label).string = playerScore;\r\n      let targetNode = self.otherPlayerNodeDict[playerId];\r\n      if (!targetNode) {\r\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\r\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\r\n        self.otherPlayerNodeDict[playerId] = targetNode;\r\n        safelyAddChild(mapNode, targetNode);\r\n        targetNode.setPosition(newPos);\r\n        setLocalZOrder(targetNode, 5);\r\n      }\r\n      const aControlledOtherPlayerScriptIns = targetNode.getComponent(\"SelfPlayer\"); \r\n      aControlledOtherPlayerScriptIns.speed = cachedPlayerData.speed;\r\n\r\n      if (0 == cachedPlayerData.speed && 0 < aControlledOtherPlayerScriptIns.speed) {\r\n        aControlledOtherPlayerScriptIns.startFrozenDisplay(); \r\n      } \r\n      if (0 < cachedPlayerData.speed && 0 == aControlledOtherPlayerScriptIns.speed) {\r\n        aControlledOtherPlayerScriptIns.stopFrozenDisplay(); \r\n      } \r\n\r\n      if (null != toRemovePlayerNodeDict[playerId]) {\r\n        delete toRemovePlayerNodeDict[playerId];\r\n      }\r\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\r\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\r\n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\r\n      }\r\n      const oldPos = cc.v2(\r\n        targetNode.x,\r\n        targetNode.y\r\n      );\r\n      const toMoveByVec = newPos.sub(oldPos);\r\n      const toMoveByVecMag = toMoveByVec.mag();\r\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\r\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\r\n      if (toMoveByVecMag < notToMoveDisThreshold) {\r\n        targetNode.getComponent(\"SelfPlayer\").activeDirection = {\r\n          dx: 0,\r\n          dy: 0\r\n        };\r\n      } else {\r\n        if (toMoveByVecMag >= toTeleportDisThreshold) {\r\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\r\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = {\r\n            dx: 0,\r\n            dy: 0\r\n          };\r\n          // TODO: Use `cc.Action`?\r\n          targetNode.setPosition(newPos);\r\n        } else {\r\n          // The common case which is suitable for interpolation.\r\n          const normalizedDir = {\r\n            dx: toMoveByVec.x / toMoveByVecMag,\r\n            dy: toMoveByVec.y / toMoveByVecMag,\r\n          };\r\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = normalizedDir;\r\n        }\r\n      }\r\n    }\r\n\r\n   // 更新陷阱显示 \r\n    for (let k in self.trapInfoDict) {\r\n      const trapLocalIdInBattle = parseInt(k);\r\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\r\n      const newPos = cc.v2(\r\n        trapInfo.x,\r\n        trapInfo.y\r\n      );\r\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\r\n      if (!targetNode) {\r\n        targetNode = cc.instantiate(self.trapPrefab);\r\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\r\n        safelyAddChild(mapNode, targetNode);\r\n        targetNode.setPosition(newPos);\r\n        setLocalZOrder(targetNode, 5);\r\n        /*\r\n        //初始化trap的标记\r\n        const pickupBoundary = trapInfo.pickupBoundary;\r\n        const anchor = pickupBoundary.anchor; \r\n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\r\n        newColliderIns.points = [];\r\n        for (let point of pickupBoundary.points) {\r\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\r\n          newColliderIns.points.push(p);\r\n        }\r\n        */\r\n      }\r\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\r\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\r\n      }\r\n      \r\n    }\r\n\r\n   // 更新bullet显示 \r\n    for (let k in self.trapBulletInfoDict) {\r\n      const bulletLocalIdInBattle = parseInt(k);\r\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\r\n      const newPos = cc.v2(\r\n        bulletInfo.x,\r\n        bulletInfo.y\r\n      );\r\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\r\n      if (!targetNode) {\r\n        targetNode = cc.instantiate(self.trapBulletPrefab);\r\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\r\n        safelyAddChild(mapNode, targetNode);\r\n        targetNode.setPosition(newPos);\r\n        setLocalZOrder(targetNode, 5);\r\n      }else {\r\n        targetNode.setPosition(newPos);\r\n      }\r\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\r\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\r\n      }\r\n\r\n      if (0 < targetNode.getNumberOfRunningActions()) {\r\n        // A significant trick to smooth the position sync performance!\r\n        continue;\r\n      }\r\n      const oldPos = cc.v2(\r\n        targetNode.x,\r\n        targetNode.y\r\n      );\r\n      const toMoveByVec = newPos.sub(oldPos);\r\n      const durationSeconds = dt; // Using `dt` temporarily!\r\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\r\n    }\r\n\r\n   // 更新宝物显示 \r\n    for (let k in self.treasureInfoDict) {\r\n      const treasureLocalIdInBattle = parseInt(k);\r\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\r\n      const newPos = cc.v2(\r\n        treasureInfo.x,\r\n        treasureInfo.y\r\n      );\r\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\r\n      if (!targetNode) {\r\n        targetNode = cc.instantiate(self.treasurePrefab);\r\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\r\n        safelyAddChild(mapNode, targetNode);\r\n        targetNode.setPosition(newPos);\r\n        setLocalZOrder(targetNode, 5);\r\n        \r\n        /* \r\n        //初始化treasure的标记\r\n        const pickupBoundary = treasureInfo.pickupBoundary;\r\n        const anchor = pickupBoundary.anchor; \r\n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\r\n        newColliderIns.points = [];\r\n        for (let point of pickupBoundary.points) {\r\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\r\n          newColliderIns.points.push(p);\r\n        }\r\n        */\r\n      }\r\n\r\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\r\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\r\n      }\r\n      if (0 < targetNode.getNumberOfRunningActions()) {\r\n        // A significant trick to smooth the position sync performance!\r\n        continue;\r\n      }\r\n      const oldPos = cc.v2(\r\n        targetNode.x,\r\n        targetNode.y\r\n      );\r\n      const toMoveByVec = newPos.sub(oldPos);\r\n      const durationSeconds = dt; // Using `dt` temporarily!\r\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\r\n    }\r\n\r\n    // Coping with removed players.\r\n    for (let k in toRemovePlayerNodeDict) {\r\n      const playerId = parseInt(k);\r\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\r\n      delete self.otherPlayerNodeDict[playerId];\r\n    }\r\n\r\n    // Coping with removed treasures.\r\n    for (let k in toRemoveTreasureNodeDict) {\r\n      const treasureLocalIdInBattle = parseInt(k);\r\n      toRemoveTreasureNodeDict[k].parent.removeChild(toRemoveTreasureNodeDict[k]);\r\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\r\n    }\r\n\r\n    // Coping with removed traps.\r\n    for (let k in toRemoveTrapNodeDict) {\r\n      const trapLocalIdInBattle = parseInt(k);\r\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\r\n      delete self.trapNodeDict[trapLocalIdInBattle];\r\n    }\r\n\r\n    // Coping with removed bullets.\r\n    for (let k in toRemoveBulletNodeDict) {\r\n      const bulletLocalIdInBattle = parseInt(k);\r\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\r\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\r\n    }\r\n  },\r\n\r\n  transitToState(s) {\r\n    const self = this;\r\n    self.state = s;\r\n  },\r\n\r\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\r\n    const localClearance = function() {\r\n      if (byClick) {\r\n        /**\r\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\r\n        */\r\n        window.closeWSConnection();\r\n      }\r\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\r\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\r\n      }\r\n      cc.sys.localStorage.removeItem('selfPlayer');\r\n      cc.director.loadScene('login');\r\n    };\r\n\r\n    const self = this;\r\n    if (null != cc.sys.localStorage.selfPlayer) {\r\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\r\n      const requestContent = {\r\n        intAuthToken: selfPlayer.intAuthToken\r\n      }\r\n      try {\r\n        NetworkUtils.ajax({\r\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\r\n          type: \"POST\",\r\n          data: requestContent,\r\n          success: function(res) {\r\n            if (res.ret != constants.RET_CODE.OK) {\r\n              cc.log(`Logout failed: ${res}.`);\r\n            }\r\n            localClearance();\r\n          },\r\n          error: function(xhr, status, errMsg) {\r\n            localClearance();\r\n          },\r\n          timeout: function() {\r\n            localClearance();\r\n          }\r\n        });\r\n      } catch (e) {} finally {\r\n        // For Safari (both desktop and mobile).\r\n        localClearance();\r\n      }\r\n    } else {\r\n      localClearance();\r\n    }\r\n  },\r\n\r\n  onLogoutClicked(evt) {\r\n    const self = this;\r\n    self.showPopopInCanvas(self.confirmLogoutNode);\r\n  },\r\n\r\n  onLogoutConfirmationDismissed() {\r\n    const self = this;\r\n    self.transitToState(ALL_MAP_STATES.VISUAL);\r\n    const canvasNode = self.canvasNode;\r\n    canvasNode.removeChild(self.confirmLogoutNode);\r\n    self.enableInputControls();\r\n  },\r\n  \r\n  initWSConnection(evt, cb) {\r\n    const self = this;\r\n    if(cb){ \r\n      cb()\r\n    } \r\n    initPersistentSessionClient(self.initAfterWSConncted);\r\n  },\r\n\r\n  showPopopInCanvas(toShowNode) {\r\n    const self = this;\r\n    self.disableInputControls();\r\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\r\n    const canvasNode = self.canvasNode;\r\n    toShowNode.setScale(1 / canvasNode.getScale());\r\n    safelyAddChild(canvasNode, toShowNode);\r\n    setLocalZOrder(toShowNode, 10);\r\n  },\r\n\r\n});\r\n"]}