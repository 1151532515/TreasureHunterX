{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","canvasNode","type","Node","default","tiledAnimPrefab","Prefab","selfPlayerPrefab","treasurePrefab","trapPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","selfPlayerIdLabel","Label","boundRoomIdLabel","countdownLabel","selfPlayerScoreLabel","otherPlayerScoreIndicatorPrefab","trapBulletPrefab","resultPanelPrefab","_onPerUpsyncFrame","instance","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","id","dir","dx","parseFloat","dy","x","selfPlayerNode","y","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","self","upsyncLoopInterval","clearInterval","inputControlTimer","popupSimplePressToGo","labelString","state","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","getScale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","onLoad","lastRoomDownsyncFrameId","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","mapNode","node","parent","battleState","otherPlayerCachedDataDict","otherPlayerNodeDict","treasureInfoDict","treasureNodeDict","trapInfoDict","trapBulletInfoDict","trapBulletNodeDict","trapNodeDict","scoreInfoDict","confirmLogoutNode","width","height","resultPanelNode","clientUpsyncFps","handleClientSessionCloseOrError","initPersistentSessionClient","tiledMapIns","TiledMap","parse","sys","localStorage","selfPlayer","Object","assign","playerId","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","sizeInMapNode","origSize","setAnchorPoint","setLocalZOrder","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleRoomDownsyncFrame","roomDownsyncFrame","frameId","countdownNanos","onBattleStopped","players","parseInt","toString","sentAt","refFrameId","playerIdStrList","keys","i","length","k","immediateSelfPlayerInfo","speed","score","anotherPlayer","treasures","treasuresLocalIdStrList","treasureLocalIdInBattle","treasureInfo","traps","trapsLocalIdStrList","trapLocalIdInBattle","trapInfo","bullets","bulletsLocalIdStrList","bulletLocalIdInBattle","bulletInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","resultPanelScriptIns","showPlayerInfo","scheduleNewDirection","newPlayerNode","toStartWithPos","update","dt","canvasParentNode","boundRoomId","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","scoreNode","debugInfoNode","playerScore","targetNode","newScheduledDirection","discretizeDirection","joyStickEps","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","log","normalizedDir","getNumberOfRunningActions","durationSeconds","runAction","moveTo","s","byClick","localClearance","closeWSConnection","clearBoundRoomIdInBothVolatileAndPersistentStorage","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    \n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    selfPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    npcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    type2NpcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    selfPlayerIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    selfPlayerScoreLabel: {\n      type: cc.Label,\n      default: null\n    },\n    otherPlayerScoreIndicatorPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    trapBulletPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    resultPanelPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  onDestroy() {\n    const self = this;\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    if (ALL_MAP_STATES.VISUAL != self.state) {\n      return;\n    }\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, simplePressToGoDialogNode);\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s Will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n },\n\n  //onLoad\n  onLoad() {\n    const self = this;\n    self.lastRoomDownsyncFrameId = 0;\n\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n    self.scoreInfoDict = {};\n\n    /** init confirmLogoutNode started */\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n    self.confirmLogoutNode.width = canvasNode.width;\n    self.confirmLogoutNode.height = canvasNode.height;\n    /** init confirmLogoutNode ended */\n\n    /** init Node started */\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\n    self.resultPanelNode.width = canvasNode.width;\n    self.resultPanelNode.height = canvasNode.height;\n    /** init resultPanelNode ended */\n\n    self.clientUpsyncFps = 20;\n    self.upsyncLoopInterval = null;\n\n    window.handleClientSessionCloseOrError = function() {\n      if(!self.battleState)\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n    };\n\n    initPersistentSessionClient(() => {\n      self.state = ALL_MAP_STATES.VISUAL;\n      const tiledMapIns = self.node.getComponent(cc.TiledMap);\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      this._inputControlEnabled = false;\n      self.setupInputControls();\n\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n      for (let frameAnim of boundaryObjs.frameAnimations) {\n        const animNode = cc.instantiate(self.tiledAnimPrefab);\n        const anim = animNode.getComponent(cc.Animation);\n        animNode.setPosition(frameAnim.posInMapNode);\n        animNode.width = frameAnim.sizeInMapNode.width;\n        animNode.height = frameAnim.sizeInMapNode.height;\n        animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n        safelyAddChild(self.node, animNode);\n        setLocalZOrder(animNode, 5);\n        anim.addClip(frameAnim.animationClip, \"default\");\n        anim.play(\"default\");\n      }\n\n      self.barrierColliders = [];\n      for (let boundaryObj of boundaryObjs.barriers) {\n        const newBarrier = cc.instantiate(self.barrierPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n        newBarrierColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.barrierColliders.push(newBarrierColliderIns);\n        self.node.addChild(newBarrier);\n      }\n\n      const allLayers = tiledMapIns.getLayers();\n      for (let layer of allLayers) {\n        const layerType = layer.getProperty(\"type\");\n        switch (layerType) {\n          case \"normal\":\n            setLocalZOrder(layer.node, 0);\n            break;\n          case \"barrier_and_shelter\":\n            setLocalZOrder(layer.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      const allObjectGroups = tiledMapIns.getObjectGroups();\n      for (let objectGroup of allObjectGroups) {\n        const objectGroupType = objectGroup.getProperty(\"type\");\n        switch (objectGroupType) {\n          case \"barrier_and_shelter\":\n            setLocalZOrder(objectGroup.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (this.joystickInputControllerNode.parent !== this.node.parent.parent.getChildByName('JoystickContainer')) {\n        this.joystickInputControllerNode.parent = this.node.parent.parent.getChildByName('JoystickContainer');\n      }\n      this.joystickInputControllerNode.parent.width = this.node.parent.width * 0.5;\n      this.joystickInputControllerNode.parent.height = this.node.parent.height;\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newShelter.setPosition(newBoundaryOffsetInMapNode);\n        newShelter.setAnchorPoint(cc.v2(0, 0));\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n        newShelterColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.node.addChild(newShelter);\n      }\n\n      window.handleRoomDownsyncFrame = function(roomDownsyncFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n\n        const frameId = roomDownsyncFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        if (roomDownsyncFrame.countdownNanos == -1) {\n          self.onBattleStopped(roomDownsyncFrame.players);\n          return;\n        }\n        self.countdownLabel.string = parseInt(roomDownsyncFrame.countdownNanos / 1000000000).toString();\n        const sentAt = roomDownsyncFrame.sentAt;\n        const refFrameId = roomDownsyncFrame.refFrameId;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n//初始化trapInfo\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n//初始化trapBulletsInfo\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(\"Battle started!\");\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n      // TODO: Cope with FullFrame reconstruction by `refFrameId` and a cache of recent FullFrames.\n      // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    });\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.enableInputControls();\n  },\n\n  onBattleStopped(players) {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    const resultPanelNode = self.resultPanelNode;\n    const resultPanelScriptIns =  resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.showPlayerInfo(players);\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    self.selfPlayerScriptIns.scheduleNewDirection({\n      dx: 0,\n      dy: 0\n    });\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n   // self.alertForGoingBackToLoginScene(\"Battle stopped!\", self, false);\n    resultPanelNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, resultPanelNode);\n    setLocalZOrder(resultPanelNode, 10);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const newPlayerNode = cc.instantiate(instance.selfPlayerPrefab);\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      self.selfPlayerIdLabel.string = self.selfPlayerInfo.id;\n      const score  = self.selfPlayerInfo.score ? self.selfPlayerInfo.score : 0 \n      self.selfPlayerScoreLabel.string = score;\n    }\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n     //显示分数\n     if(!self.scoreInfoDict[playerId]){\n        const scoreNode = cc.instantiate(self.otherPlayerScoreIndicatorPrefab);  \n        const debugInfoNode = canvasParentNode.getChildByName(\"DebugInfo\");\n        scoreNode.getChildByName(\"title\").getComponent(cc.Label).string = \"player\"+cachedPlayerData.id+\"'s score:\";\n        safelyAddChild(debugInfoNode,scoreNode);\n        self.scoreInfoDict[playerId] = scoreNode;\n      }\n      const playerScore  = !cachedPlayerData.score ? cachedPlayerData.score  : 0 \n      self.scoreInfoDict[playerId].getChildByName(\"OtherPlayerScoreLabel\").getComponent(cc.Label).string = playerScore;\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        targetNode.getComponent(\"SelfPlayer\").speed = cachedPlayerData.speed;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag >= toTeleportDisThreshold) {\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = normalizedDir;\n        }\n      }\n    }\n\n   // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.x,\n        trapInfo.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        /*\n        //初始化trap的标记\n        const pickupBoundary = trapInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n      \n    }\n\n   // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.x,\n        bulletInfo.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }else {\n        targetNode.setPosition(newPos);\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n   // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.x,\n        treasureInfo.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        \n        /* \n        //初始化treasure的标记\n        const pickupBoundary = treasureInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      toRemoveTreasureNodeDict[k].parent.removeChild(toRemoveTreasureNodeDict[k]);\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      if (byClick) {\n        /**\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\n        */\n        window.closeWSConnection();\n      }\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    const canvasNode = self.canvasNode;\n    self.confirmLogoutNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, self.confirmLogoutNode);\n    setLocalZOrder(self.confirmLogoutNode, 10);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n});\n"]}