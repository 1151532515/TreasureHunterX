{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","useDiffFrameAlgo","default","canvasNode","type","Node","tiledAnimPrefab","Prefab","player1Prefab","player2Prefab","treasurePrefab","trapPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","boundRoomIdLabel","Label","countdownLabel","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","countdownToBeginGamePrefab","playersInfoPrefab","_generateNewFullFrame","refFullFrame","diffFrame","newFullFrame","id","treasures","traps","bullets","players","playersLocalIdStrList","Object","keys","i","length","k","playerId","parseInt","removed","treasuresLocalIdStrList","treasureLocalIdInBattle","trapsLocalIdStrList","trapLocalIdInBattle","bulletsLocalIdStrList","bulletLocalIdInBattle","_dumpToFullFrameCache","fullFrame","self","recentFrameCacheCurrentSize","recentFrameCacheMaxCount","toDelFrameId","recentFrameCache","_onPerUpsyncFrame","instance","resyncing","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","dir","dx","parseFloat","dy","x","selfPlayerNode","y","ackingFrameId","lastRoomDownsyncFrameId","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","upsyncLoopInterval","clearInterval","inputControlTimer","_lazilyTriggerResync","state","popupSimplePressToGo","_onResyncCompleted","log","labelString","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","scale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","widgetsAboveAllNode","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","_resetCurrentMatch","mapNode","node","parent","playersNode","Animation","play","start","active","otherPlayerNodeDict","treasureNodeDict","trapBulletNodeDict","trapNodeDict","mainCameraNode","mainCamera","Camera","children","child","zoomRatio","battleState","otherPlayerCachedDataDict","treasureInfoDict","trapInfoDict","trapBulletInfoDict","findingPlayerNode","findingPlayerScriptIns","showPopopInCanvas","gameRuleNode","playersInfoNode","onLoad","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","confirmLogoutNode","resultPanelNode","resultPanelScriptIns","mapScriptIns","gameRuleScriptIns","countdownToBeginGameNode","player1Node","player2Node","assign","clientUpsyncFps","tiledMapIns","TiledMap","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","posInMapNode","width","sizeInMapNode","height","origSize","setAnchorPoint","addClip","animationClip","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","reconnectWSWithoutRoomId","Promise","resolve","reject","clientSessionPingInterval","clearBoundRoomIdInBothVolatileAndPersistentStorage","then","initPersistentSessionClient","initAfterWSConncted","handleClientSessionCloseOrError","parse","sys","localStorage","selfPlayer","_inputControlEnabled","setupInputControls","handleRoomDownsyncFrame","refFrameId","matchPlayersFinsihed","updatePlayersInfo","frameId","isInitiatingFrame","cachedFullFrame","countdownNanos","countdownSeconds","isNaN","roomDownsyncFrame","onBattleStopped","sentAt","playerIdStrList","immediateSelfPlayerInfo","speed","score","joinIndex","anotherPlayer","treasureInfo","trapInfo","bulletInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","showPlayerInfo","newPlayerNode","toStartWithPos","showArrowTipNode","update","dt","canvasParentNode","boundRoomId","playersScriptIns","updateData","updateSpeed","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","targetNode","aControlledOtherPlayerScriptIns","newScheduledDirection","discretizeDirection","joyStickEps","scheduleNewDirection","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","normalizedDir","getNumberOfRunningActions","durationSeconds","runAction","moveTo","treasureNodeScriptIns","setData","treasureScriptIns","playPickedUpAnimAndDestroy","s","byClick","localClearance","closeWSConnection","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","initWSConnection","cb","toShowNode","playerInfo","countDownScriptIns"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    useDiffFrameAlgo: {\n      default: true\n    },\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    player1Prefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    player2Prefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    trapBulletPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    resultPanelPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    gameRulePrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    findingPlayerPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    countdownToBeginGamePrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    playersInfoPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n\n  },\n\n  _generateNewFullFrame: function(refFullFrame, diffFrame) {\n    let newFullFrame = {\n      id: diffFrame.id,\n      treasures: refFullFrame.treasures,\n      traps: refFullFrame.traps,\n      bullets: refFullFrame.bullets,\n      players: refFullFrame.players,\n    };\n\n    const players = diffFrame.players;\n    const playersLocalIdStrList = Object.keys(players);\n    for (let i = 0; i < playersLocalIdStrList.length; ++i) {\n      const k = playersLocalIdStrList[i];\n      const playerId = parseInt(k);\n      if (true == diffFrame.players[playerId].removed) {\n        // cc.log(`Player id == ${playerId} is removed.`);\n        delete newFullFrame.players[playerId];\n      } else {\n        newFullFrame.players[playerId] = diffFrame.players[playerId];\n      }\n    }\n\n    const treasures = diffFrame.treasures;\n    const treasuresLocalIdStrList = Object.keys(treasures);\n    for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n      const k = treasuresLocalIdStrList[i];\n      const treasureLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.treasures[treasureLocalIdInBattle].removed) {\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\n        delete newFullFrame.treasures[treasureLocalIdInBattle];\n      } else {\n        newFullFrame.treasures[treasureLocalIdInBattle] = diffFrame.treasures[treasureLocalIdInBattle];\n      }\n    }\n\n    const traps = diffFrame.traps;\n    const trapsLocalIdStrList = Object.keys(traps);\n    for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n      const k = trapsLocalIdStrList[i];\n      const trapLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.traps[trapLocalIdInBattle].removed) {\n        // cc.log(`Trap with localIdInBattle == ${trapLocalIdInBattle} is removed.`);\n        delete newFullFrame.traps[trapLocalIdInBattle];\n      } else {\n        newFullFrame.traps[trapLocalIdInBattle] = diffFrame.traps[trapLocalIdInBattle];\n      }\n    }\n\n    const bullets = diffFrame.bullets;\n    const bulletsLocalIdStrList = Object.keys(bullets);\n    for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n      const k = bulletsLocalIdStrList[i];\n      const bulletLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.bullets[bulletLocalIdInBattle].removed) {\n        // cc.log(`Bullet with localIdInBattle == ${bulletLocalIdInBattle} is removed.`);\n        delete newFullFrame.bullets[bulletLocalIdInBattle];\n      } else {\n        newFullFrame.bullets[bulletLocalIdInBattle] = diffFrame.bullets[bulletLocalIdInBattle];\n      }\n    }\n\n    return newFullFrame;\n  },\n\n  _dumpToFullFrameCache: function(fullFrame) {\n    const self = this;\n    while (self.recentFrameCacheCurrentSize >= self.recentFrameCacheMaxCount) {\n      // Trick here: never evict the \"Zero-th Frame\" for resyncing!\n      const toDelFrameId = Object.keys(self.recentFrameCache)[1];\n      // cc.log(\"toDelFrameId is \" + toDelFrameId + \".\");\n      delete self.recentFrameCache[toDelFrameId];\n      --self.recentFrameCacheCurrentSize;\n    }\n    self.recentFrameCache[fullFrame.id] = fullFrame;\n    ++self.recentFrameCacheCurrentSize;\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (instance.resyncing) return;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n      ackingFrameId: instance.lastRoomDownsyncFrameId,\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  onDestroy() {\n    const self = this;\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  _lazilyTriggerResync() {\n    if (true == this.resyncing) return;\n    this.resyncing = false;\n    if (ALL_MAP_STATES.SHOWING_MODAL_POPUP != this.state) {\n      this.popupSimplePressToGo(\"Resyncing your battle, please wait...\");\n    }\n  },\n\n  _onResyncCompleted() {\n    if (false == this.resyncing) return;\n    cc.log(`_onResyncCompleted`);\n    this.resyncing = true;\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.scale);\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, simplePressToGoDialogNode);\n    setLocalZOrder(simplePressToGoDialogNode, 20);\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n  },\n\n  _resetCurrentMatch() {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    self.countdownLabel.string = \"\";\n    if(self.playersNode) {\n      for (let i in self.playersNode) {\n        let node = self.playersNode[i];\n        node.getComponent(cc.Animation).play(\"Bottom\");\n        node.getComponent(\"SelfPlayer\").start();  \n        node.active = true;\n      }\n    }\n    if(self.otherPlayerNodeDict ){\n      for (let i in self.otherPlayerNodeDict) {\n        let node = self.otherPlayerNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if (self.selfPlayerNode && self.selfPlayerNode.parent) {\n      self.selfPlayerNode.parent.removeChild(self.selfPlayerNode);\n    }\n    if(self.treasureNodeDict) {\n      for (let i in self.treasureNodeDict) {\n        let node = self.treasureNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if(self.trapBulletNodeDict) {\n      for (let i in self.trapBulletNodeDict) {\n        let node = self.trapBulletNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n    if(self.trapNodeDict) {\n      for (let i in self.trapNodeDict) {\n      let node = self.trapNodeDict[i];\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n      }\n    }\n\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n\n    self.mainCameraNode = canvasNode.getChildByName(\"Main Camera\");\n    self.mainCamera = self.mainCameraNode.getComponent(cc.Camera);\n    for (let child of self.mainCameraNode.children) {\n      child.setScale(1 / self.mainCamera.zoomRatio);\n    }\n    self.widgetsAboveAllNode = self.mainCameraNode.getChildByName(\"WidgetsAboveAll\");\n    self.mainCameraNode.setPosition(cc.v2());\n\n    self.resyncing = false;\n    self.lastRoomDownsyncFrameId = 0;\n\n    self.recentFrameCache = {};\n    self.recentFrameCacheCurrentSize = 0;\n    self.recentFrameCacheMaxCount = 2048;\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n    if(self.findingPlayerNode) {\n      const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");  \n      findingPlayerScriptIns.init();\n    }\n    self.showPopopInCanvas(self.gameRuleNode);\n    safelyAddChild(self.widgetsAboveAllNode, self.playersInfoNode);\n  },\n\n  onLoad() {\n    const self = this;\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    /** init requeired prefab started */\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\n    const resultPanelScriptIns = self.resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.mapScriptIns = self;\n\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\n    self.gameRuleScriptIns.mapNode = self.node;\n\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\n    const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n    findingPlayerScriptIns.init();\n\n    self.playersInfoNode = cc.instantiate(self.playersInfoPrefab);\n\n    self.countdownToBeginGameNode = cc.instantiate(self.countdownToBeginGamePrefab);\n\n    self.playersNode = {};\n    const player1Node = cc.instantiate(self.player1Prefab);\n    const player2Node = cc.instantiate(self.player2Prefab);\n    Object.assign(self.playersNode, {\n      1: player1Node\n    });\n    Object.assign(self.playersNode, {\n      2: player2Node\n    });\n    /** init requeired prefab ended */\n\n    self.clientUpsyncFps = 20;\n    self._resetCurrentMatch();\n\n    const tiledMapIns = self.node.getComponent(cc.TiledMap);\n    const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n    for (let frameAnim of boundaryObjs.frameAnimations) {\n      const animNode = cc.instantiate(self.tiledAnimPrefab);\n      const anim = animNode.getComponent(cc.Animation);\n      animNode.setPosition(frameAnim.posInMapNode);\n      animNode.width = frameAnim.sizeInMapNode.width;\n      animNode.height = frameAnim.sizeInMapNode.height;\n      animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n      animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n      safelyAddChild(self.node, animNode);\n      setLocalZOrder(animNode, 5);\n      anim.addClip(frameAnim.animationClip, \"default\");\n      anim.play(\"default\");\n    }\n\n    self.barrierColliders = [];\n    for (let boundaryObj of boundaryObjs.barriers) {\n      const newBarrier = cc.instantiate(self.barrierPrefab);\n      const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n      newBarrier.setPosition(newBoundaryOffsetInMapNode);\n      newBarrier.setAnchorPoint(cc.v2(0, 0));\n      const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n      newBarrierColliderIns.points = [];\n      for (let p of boundaryObj) {\n        newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n      }\n      self.barrierColliders.push(newBarrierColliderIns);\n      self.node.addChild(newBarrier);\n    }\n    const allLayers = tiledMapIns.getLayers();\n    for (let layer of allLayers) {\n      const layerType = layer.getProperty(\"type\");\n      switch (layerType) {\n        case \"normal\":\n          setLocalZOrder(layer.node, 0);\n          break;\n        case \"barrier_and_shelter\":\n          setLocalZOrder(layer.node, 3);\n          break;\n        default:\n          break;\n      }\n    }\n\n    const allObjectGroups = tiledMapIns.getObjectGroups();\n    for (let objectGroup of allObjectGroups) {\n      const objectGroupType = objectGroup.getProperty(\"type\");\n      switch (objectGroupType) {\n        case \"barrier_and_shelter\":\n          setLocalZOrder(objectGroup.node, 3);\n          break;\n        default:\n          break;\n      }\n    }\n\n    for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n      const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n      const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n      newShelter.setPosition(newBoundaryOffsetInMapNode);\n      newShelter.setAnchorPoint(cc.v2(0, 0));\n      const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n      newShelterColliderIns.points = [];\n      for (let p of boundaryObj) {\n        newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n      }\n      self.node.addChild(newShelter);\n    }\n\n    window.reconnectWSWithoutRoomId = function() {\n      return new Promise((resolve, reject) => {\n        if (window.clientSessionPingInterval) {\n          clearInterval(clientSessionPingInterval);\n        }\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage()\n        return resolve();\n      })\n        .then(() => {\n          this.initPersistentSessionClient(self.initAfterWSConncted);\n        });\n    }\n\n    window.handleClientSessionCloseOrError = function() {\n      if (!self.battleState){\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n        if (window.clientSessionPingInterval) {\n          clearInterval(clientSessionPingInterval);\n        }\n      }\n    };\n\n    self.initAfterWSConncted = () => {\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      self._inputControlEnabled = false;\n      self.setupInputControls();\n\n\n      window.handleRoomDownsyncFrame = function(diffFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n        const refFrameId = diffFrame.refFrameId;\n        if (0 > refFrameId) {\n          cc.log(diffFrame.players)\n          cc.log(refFrameId)\n        }\n        if (-99 == refFrameId) { //显示倒计时\n          self.matchPlayersFinsihed(diffFrame.players);\n        } else if (-98 == refFrameId) { //显示匹配玩家\n          const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n          if (!self.findingPlayerNode.parent) {\n            self.showPopopInCanvas(self.findingPlayerNode);\n          }\n          findingPlayerScriptIns.updatePlayersInfo(diffFrame.players);\n          return;\n        }\n        const frameId = diffFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        const isInitiatingFrame = (0 > self.recentFrameCacheCurrentSize || 0 == refFrameId);\n        /*\n        if (frameId % 300 == 0) {\n          // WARNING: For testing only!\n          if (0 < frameId) {\n            self._lazilyTriggerResync(); \n          }\n          cc.log(`${JSON.stringify(diffFrame)}`);\n        }\n        */\n        const cachedFullFrame = self.recentFrameCache[refFrameId];\n        if (\n          !isInitiatingFrame\n          && self.useDiffFrameAlgo\n          && (refFrameId > 0 || 0 < self.recentFrameCacheCurrentSize) // Critical condition to differentiate between \"BattleStarted\" or \"ShouldResync\". \n          && null == cachedFullFrame\n        ) {\n          self._lazilyTriggerResync();\n          // Later incoming diffFrames will all suffice that `0 < self.recentFrameCacheCurrentSize && null == cachedFullFrame`, until `this._onResyncCompleted` is successfully invoked.\n          return;\n        }\n\n        if (isInitiatingFrame && 0 == refFrameId) {\n          // Reaching here implies that you've received the resync frame.\n          self._onResyncCompleted();\n        }\n        let countdownNanos = diffFrame.countdownNanos;\n        if (countdownNanos < 0)\n          countdownNanos = 0;\n        const countdownSeconds = parseInt(countdownNanos / 1000000000);\n        if (isNaN(countdownSeconds)) {\n          cc.log(`countdownSeconds is NaN for countdownNanos == ${countdownNanos}.`);\n        }\n        self.countdownLabel.string = countdownSeconds;\n        const roomDownsyncFrame = (\n        (isInitiatingFrame || !self.useDiffFrameAlgo)\n          ?\n          diffFrame\n          :\n          self._generateNewFullFrame(cachedFullFrame, diffFrame)\n        );\n        if (countdownNanos <= 0) {\n          self.onBattleStopped(roomDownsyncFrame.players);\n          return;\n        }\n        self._dumpToFullFrameCache(roomDownsyncFrame);\n        const sentAt = roomDownsyncFrame.sentAt;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n              joinIndex: immediateSelfPlayerInfo.joinIndex,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(\"Battle started!\");\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n      // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    }\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    self.enableInputControls();\n    if (self.countdownToBeginGameNode.parent) {\n      self.countdownToBeginGameNode.parent.removeChild(self.countdownToBeginGameNode);\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n    }\n  },\n\n  onBattleStopped(players) {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    const resultPanelNode = self.resultPanelNode;\n    const resultPanelScriptIns = resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.showPlayerInfo(players);\n    window.clearBoundRoomIdInBothVolatileAndPersistentStorage(); //清除cached boundRoomId\n    // Such that it doesn't execute \"update(dt)\" anymore. \n    self.selfPlayerNode.active = false;\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.showPopopInCanvas(resultPanelNode);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const joinIndex = this.selfPlayerInfo.joinIndex;\n    const newPlayerNode = this.playersNode[joinIndex];\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n    instance.selfPlayerScriptIns.showArrowTipNode();\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n      playersScriptIns.updateData(self.selfPlayerInfo);\n      if (null != self.selfPlayerScriptIns) {\n        self.selfPlayerScriptIns.updateSpeed(self.selfPlayerInfo.speed);\n      }\n    }\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n      //更新信息\n      if (null != cachedPlayerData) {\n        const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n        playersScriptIns.updateData(cachedPlayerData);\n      }\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = self.playersNode[cachedPlayerData.joinIndex];\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aControlledOtherPlayerScriptIns = targetNode.getComponent(\"SelfPlayer\");\n      aControlledOtherPlayerScriptIns.updateSpeed(cachedPlayerData.speed);\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag >= toTeleportDisThreshold) {\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = normalizedDir;\n        }\n      }\n    }\n\n    // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.x,\n        trapInfo.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      /*\n      //初始化trap的标记\n      const pickupBoundary = trapInfo.pickupBoundary;\n      const anchor = pickupBoundary.anchor; \n      const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n      newColliderIns.points = [];\n      for (let point of pickupBoundary.points) {\n        const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n        newColliderIns.points.push(p);\n      }\n      */\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n\n    }\n\n    // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.x,\n        bulletInfo.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      } else {\n        targetNode.setPosition(newPos);\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.x,\n        treasureInfo.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        const treasureNodeScriptIns = targetNode.getComponent(\"Treasure\");\n        treasureNodeScriptIns.setData(treasureInfo);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n\n      /* \n      //初始化treasure的标记\n      const pickupBoundary = treasureInfo.pickupBoundary;\n      const anchor = pickupBoundary.anchor; \n      const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n      newColliderIns.points = [];\n      for (let point of pickupBoundary.points) {\n        const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n        newColliderIns.points.push(p);\n      }\n      */\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureScriptIns = toRemoveTreasureNodeDict[k].getComponent(\"Treasure\");\n      treasureScriptIns.playPickedUpAnimAndDestroy();\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      if (byClick) {\n        /**\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\n        */\n        window.closeWSConnection();\n      }\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.showPopopInCanvas(self.confirmLogoutNode);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n\n  initWSConnection(evt, cb) {\n    const self = this;\n    if (cb) {\n      cb()\n    }\n    initPersistentSessionClient(self.initAfterWSConncted);\n  },\n\n  showPopopInCanvas(toShowNode) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, toShowNode);\n    setLocalZOrder(toShowNode, 10);\n  },\n  matchPlayersFinsihed(players) {\n    const self = this;\n    const findingPlayerScriptIns = self.findingPlayerNode.getComponent(\"FindingPlayer\");\n    findingPlayerScriptIns.updatePlayersInfo(players);\n    window.setTimeout(() => {\n      if (self.findingPlayerNode.parent) {\n        self.findingPlayerNode.parent.removeChild(self.findingPlayerNode);\n        self.transitToState(ALL_MAP_STATES.VISUAL);\n        for (let i in players) {\n          //更新在线玩家信息面板的信息\n          const playerInfo = players[i];\n          const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n          playersScriptIns.updateData(playerInfo);\n        }\n      }\n      const countDownScriptIns = self.countdownToBeginGameNode.getComponent(\"CountdownToBeginGame\"); \n      countDownScriptIns.setData();\n      self.showPopopInCanvas(self.countdownToBeginGameNode);\n      return;\n    }, 2000);\n  },\n});\n"]}