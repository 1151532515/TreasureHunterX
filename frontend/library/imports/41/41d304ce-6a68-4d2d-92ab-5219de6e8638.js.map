{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","canvasNode","type","Node","default","tiledAnimPrefab","Prefab","selfPlayerPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","selfPlayerIdLabel","Label","boundRoomIdLabel","countdownLabel","_onPerUpsyncFrame","instance","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","id","dir","dx","parseFloat","dy","x","selfPlayerNode","y","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","self","upsyncLoopInterval","clearInterval","inputControlTimer","popupSimplePressToGo","labelString","state","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","getScale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","onLoad","lastRoomDownsyncFrameId","mapNode","node","parent","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","battleState","otherPlayerNodeDict","otherPlayerCachedDataDict","confirmLogoutNode","width","height","clientUpsyncFps","handleClientSessionCloseOrError","initPersistentSessionClient","tiledMapIns","TiledMap","parse","sys","localStorage","selfPlayer","Object","assign","playerId","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","sizeInMapNode","origSize","setAnchorPoint","setLocalZOrder","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleRoomDownsyncFrame","roomDownsyncFrame","frameId","countdownNanos","onBattleStopped","parseInt","toString","sentAt","refFrameId","players","playerIdStrList","keys","i","length","k","immediateSelfPlayerInfo","speed","anotherPlayer","onBattleStarted","renderAnotherControlledPlayer","anotherPlayerCachedData","targetNode","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","newScheduledDirectionInWorldCoordinate","activeDirection","dPjX","dPjY","newScheduledDirectionInLocalCoordinate","scheduleNewDirection","enableInputControls","disableInputControls","spawnSelfPlayer","newPlayerNode","update","dt","boundRoomId","toRemovePlayerNodeDict","cachedPlayerData","newPos","getNumberOfRunningActions","newScheduledDirection","discretizeDirection","joyStickEps","oldPos","toMoveByVec","durationSeconds","mag","runAction","moveTo","s","byClick","localClearance","closeWSConnection","clearBoundRoomIdInBothVolatileAndPersistentStorage","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","log","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    selfPlayerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    npcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    type2NpcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    selfPlayerIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this; \n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n    ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y), \n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData, \n    }\n    window.sendSafely(JSON.stringify(wrapped)); \n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  onDestroy() {\n    const self = this;\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    if (ALL_MAP_STATES.VISUAL != self.state) {\n      return;\n    }\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, simplePressToGoDialogNode);\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s Will logout in %s seconds.\", labelString, millisToGo/1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n  },\n\n  onLoad() {\n    const self = this;\n    self.lastRoomDownsyncFrameId = 0;\n\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerNodeDict = {};\n    self.otherPlayerCachedDataDict = {};\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n    self.confirmLogoutNode.width = canvasNode.width;\n    self.confirmLogoutNode.height = canvasNode.height;\n\n    self.clientUpsyncFps = 20;\n    self.upsyncLoopInterval = null;\n\n    window.handleClientSessionCloseOrError = function() {\n      self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n    }; \n\n    initPersistentSessionClient(() => {\n      self.state = ALL_MAP_STATES.VISUAL;\n      const tiledMapIns = self.node.getComponent(cc.TiledMap); \n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      this._inputControlEnabled = false;\n      self.setupInputControls();\n\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node); \n      for (let frameAnim of boundaryObjs.frameAnimations) {\n        const animNode = cc.instantiate(self.tiledAnimPrefab);  \n        const anim = animNode.getComponent(cc.Animation); \n        animNode.setPosition(frameAnim.posInMapNode);\n        animNode.width = frameAnim.sizeInMapNode.width;\n        animNode.height = frameAnim.sizeInMapNode.height;\n        animNode.setScale(frameAnim.sizeInMapNode.width/frameAnim.origSize.width, frameAnim.sizeInMapNode.height/frameAnim.origSize.height);\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n        safelyAddChild(self.node, animNode);  \n        setLocalZOrder(animNode, 5);  \n        anim.addClip(frameAnim.animationClip, \"default\");\n        anim.play(\"default\");\n      } \n\n      self.barrierColliders = [];\n      for (let boundaryObj of boundaryObjs.barriers) {\n        const newBarrier = cc.instantiate(self.barrierPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y); \n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider); \n        newBarrierColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode)); \n        }  \n        self.barrierColliders.push(newBarrierColliderIns);\n        self.node.addChild(newBarrier);\n      }\n\n      const allLayers = tiledMapIns.getLayers();\n      for (let layer of allLayers) {\n        const layerType = layer.getProperty(\"type\"); \n        switch (layerType) {\n          case \"normal\":\n            setLocalZOrder(layer.node, 0);\n            break;\n          case \"barrier_and_shelter\":\n            setLocalZOrder(layer.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      const allObjectGroups = tiledMapIns.getObjectGroups(); \n      for (let objectGroup of allObjectGroups) {\n        const objectGroupType = objectGroup.getProperty(\"type\"); \n        switch (objectGroupType) {\n          case \"barrier_and_shelter\":\n            setLocalZOrder(objectGroup.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (this.joystickInputControllerNode.parent !== this.node.parent.parent.getChildByName('JoystickContainer')) {\n        this.joystickInputControllerNode.parent = this.node.parent.parent.getChildByName('JoystickContainer');\n      }\n      this.joystickInputControllerNode.parent.width = this.node.parent.width * 0.5;\n      this.joystickInputControllerNode.parent.height = this.node.parent.height;\n\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y); \n        newShelter.setPosition(newBoundaryOffsetInMapNode);\n        newShelter.setAnchorPoint(cc.v2(0, 0));\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider); \n        newShelterColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode)); \n        }  \n        self.node.addChild(newShelter);\n      }\n      window.handleRoomDownsyncFrame = function(roomDownsyncFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n\n        const frameId = roomDownsyncFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        if (roomDownsyncFrame.countdownNanos == -1) {\n          self.onBattleStopped();\n          return;\n        }\n        self.countdownLabel.string = parseInt(roomDownsyncFrame.countdownNanos/1000000000).toString();\n        const sentAt = roomDownsyncFrame.sentAt;\n        const refFrameId = roomDownsyncFrame.refFrameId;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k]; \n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed, \n              battleState: immediateSelfPlayerInfo.battleState,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k]; \n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer; \n        } \n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(\"Battle started!\");\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n        // TODO: Cope with FullFrame reconstruction by `refFrameId` and a cache of recent FullFrames.\n        // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    });\n  },\n\n  renderAnotherControlledPlayer: (mapIns, anotherPlayerCachedData, targetNode) => {\n    const mapNode = mapIns.node;\n  }, \n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n\n      const newScheduledDirectionInWorldCoordinate = {\n        dx: ctrl.activeDirection.dPjX,\n        dy: ctrl.activeDirection.dPjY\n      };\n\n      const newScheduledDirectionInLocalCoordinate = newScheduledDirectionInWorldCoordinate;\n      instance.selfPlayerScriptIns.scheduleNewDirection(newScheduledDirectionInLocalCoordinate);\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true; \n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.enableInputControls();\n  },\n\n  onBattleStopped() {\n    const self = this;\n    self.disableInputControls();\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.alertForGoingBackToLoginScene(\"Battle stopped!\", self, false);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const newPlayerNode = cc.instantiate(instance.selfPlayerPrefab);\n    newPlayerNode.setPosition(cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y));\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;  \n    }\n    if (null != self.selfPlayerInfo) {\n      self.selfPlayerIdLabel.string = self.selfPlayerInfo.id; \n    }\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId]; \n      const newPos = cc.v2(\n        cachedPlayerData.x, \n        cachedPlayerData.y\n      );\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        targetNode.getComponent(\"SelfPlayer\").speed = 0; // A dirty fix to prevent jittering.\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue; \n      }\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) { \n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);  \n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, true);\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = toMoveByVec.mag()/cachedPlayerData.speed; // WARNING: To interpolate in a smooth manner, don't just assign `dt` to `durationSeconds` here!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      if (byClick) {\n        /**\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\n        */\n        window.closeWSConnection();\n      }\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {\n\n      } finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    const canvasNode = self.canvasNode;\n    self.confirmLogoutNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, self.confirmLogoutNode);\n    setLocalZOrder(self.confirmLogoutNode, 10);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n});\n\n"]}