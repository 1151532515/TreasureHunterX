{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","useDiffFrameAlgo","default","canvasNode","type","Node","tiledAnimPrefab","Prefab","selfPlayerPrefab","treasurePrefab","trapPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","selfPlayerIdLabel","Label","boundRoomIdLabel","countdownLabel","selfPlayerScoreLabel","otherPlayerScoreIndicatorPrefab","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","_generateNewFullFrame","refFullFrame","diffFrame","newFullFrame","id","treasures","traps","bullets","players","playersLocalIdStrList","Object","keys","i","length","k","playerId","parseInt","removed","treasuresLocalIdStrList","treasureLocalIdInBattle","trapsLocalIdStrList","trapLocalIdInBattle","bulletsLocalIdStrList","bulletLocalIdInBattle","_dumpToFullFrameCache","fullFrame","self","recentFrameCacheCurrentSize","recentFrameCacheMaxCount","toDelFrameId","recentFrameCache","_onPerUpsyncFrame","instance","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","dir","dx","parseFloat","dy","x","selfPlayerNode","y","ackingFrameId","lastRoomDownsyncFrameId","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","upsyncLoopInterval","clearInterval","inputControlTimer","popupSimplePressToGo","labelString","state","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","getScale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","onLoad","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","mapNode","node","parent","battleState","otherPlayerCachedDataDict","otherPlayerNodeDict","treasureInfoDict","treasureNodeDict","trapInfoDict","trapBulletInfoDict","trapBulletNodeDict","trapNodeDict","scoreInfoDict","confirmLogoutNode","resultPanelNode","gameRuleNode","gameRuleScriptIns","showPopopInCanvas","findingPlayerNode","clientUpsyncFps","reconnectWSWithoutRoomId","Promise","resolve","reject","clientSessionPingInterval","clearBoundRoomIdInBothVolatileAndPersistentStorage","then","initPersistentSessionClient","initAfterWSConncted","handleClientSessionCloseOrError","tiledMapIns","TiledMap","parse","sys","localStorage","selfPlayer","assign","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","width","sizeInMapNode","height","origSize","setAnchorPoint","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleRoomDownsyncFrame","frameId","refFrameId","isInitiatingFrame","log","cachedFullFrame","countdownNanos","countdownSeconds","isNaN","roomDownsyncFrame","onBattleStopped","sentAt","playerIdStrList","immediateSelfPlayerInfo","speed","score","anotherPlayer","treasureInfo","trapInfo","bulletInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","resultPanelScriptIns","showPlayerInfo","active","newPlayerNode","toStartWithPos","update","dt","canvasParentNode","boundRoomId","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","scoreNode","debugInfoNode","playerScore","targetNode","newScheduledDirection","discretizeDirection","joyStickEps","scheduleNewDirection","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","normalizedDir","getNumberOfRunningActions","durationSeconds","runAction","moveTo","s","byClick","localClearance","closeWSConnection","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","initWSConnection","cb","toShowNode"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: { \n    useDiffFrameAlgo: {\n      default: true \n    },\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    selfPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    npcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    type2NpcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    selfPlayerIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    selfPlayerScoreLabel: {\n      type: cc.Label,\n      default: null\n    },\n    otherPlayerScoreIndicatorPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    trapBulletPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    resultPanelPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    gameRulePrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    findingPlayerPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n  },\n  \n  _generateNewFullFrame: function(refFullFrame, diffFrame) {\n    let newFullFrame = {\n      id: diffFrame.id,\n      treasures: refFullFrame.treasures,\n      traps: refFullFrame.traps,\n      bullets: refFullFrame.bullets,\n      players: refFullFrame.players,\n    };\n\n    const players = diffFrame.players;\n    const playersLocalIdStrList = Object.keys(players);\n    for (let i = 0; i < playersLocalIdStrList.length; ++i) {\n      const k = playersLocalIdStrList[i];\n      const playerId = parseInt(k);\n      if (true == diffFrame.players[playerId].removed) {\n        // cc.log(`Player id == ${playerId} is removed.`);\n        delete newFullFrame.players[playerId];\n      } else {\n        newFullFrame.players[playerId] = diffFrame.players[playerId];  \n      }  \n    }\n    \n    const treasures = diffFrame.treasures;\n    const treasuresLocalIdStrList = Object.keys(treasures);\n    for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n      const k = treasuresLocalIdStrList[i];\n      const treasureLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.treasures[treasureLocalIdInBattle].removed) {\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\n        delete newFullFrame.treasures[treasureLocalIdInBattle];\n      } else {\n        newFullFrame.treasures[treasureLocalIdInBattle] = diffFrame.treasures[treasureLocalIdInBattle];  \n      }  \n    }\n\n    const traps = diffFrame.traps;\n    const trapsLocalIdStrList = Object.keys(traps);\n    for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n      const k = trapsLocalIdStrList[i];\n      const trapLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.traps[trapLocalIdInBattle].removed) {\n        // cc.log(`Trap with localIdInBattle == ${trapLocalIdInBattle} is removed.`);\n        delete newFullFrame.traps[trapLocalIdInBattle];\n      } else {\n        newFullFrame.traps[trapLocalIdInBattle] = diffFrame.traps[trapLocalIdInBattle];  \n      }\n    }\n\n    const bullets = diffFrame.bullets;\n    const bulletsLocalIdStrList = Object.keys(bullets);\n    for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n      const k = bulletsLocalIdStrList[i];\n      const bulletLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.bullets[bulletLocalIdInBattle].removed) {\n        // cc.log(`Bullet with localIdInBattle == ${bulletLocalIdInBattle} is removed.`);\n        delete newFullFrame.bullets[bulletLocalIdInBattle];\n      } else {\n        newFullFrame.bullets[bulletLocalIdInBattle] = diffFrame.bullets[bulletLocalIdInBattle];  \n      }\n    }\n\n    return newFullFrame;\n  },\n\n  _dumpToFullFrameCache: function(fullFrame) {\n    const self = this;\n    while (self.recentFrameCacheCurrentSize >= self.recentFrameCacheMaxCount) {\n      const toDelFrameId = Object.keys(self.recentFrameCache)[0];\n      // cc.log(\"toDelFrameId is \" + toDelFrameId + \".\");\n      delete self.recentFrameCache[toDelFrameId];\n      --self.recentFrameCacheCurrentSize;\n    }\n    self.recentFrameCache[fullFrame.id] = fullFrame;\n    ++self.recentFrameCacheCurrentSize;\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n      ackingFrameId: instance.lastRoomDownsyncFrameId,\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  onDestroy() {\n    const self = this;\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    /*\n    if (ALL_MAP_STATES.VISUAL != self.state) {\n      return;\n    }*/\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, simplePressToGoDialogNode);\n    setLocalZOrder(simplePressToGoDialogNode, 20);\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n },\n\n  onLoad() {\n    const self = this;\n    self.lastRoomDownsyncFrameId = 0;\n\n    self.recentFrameCache = {};\n    self.recentFrameCacheCurrentSize = 0;\n    self.recentFrameCacheMaxCount = 2048;\n\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n    self.scoreInfoDict = {};\n\n    /** init confirmLogoutNode started */\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n    /** init confirmLogoutNode ended */\n\n    /** init resultPanelNode started */\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\n    /** init resultPanelNode ended */\n\n    /** init gameRuleNode started */\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\n    self.gameRuleScriptIns.mapNode = self.node;\n    self.showPopopInCanvas(self.gameRuleNode);\n    /** init resultPanelNode ended */\n\n    /** init findingPlayer started */\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\n    /** init findingPlayerNode ended */\n\n    self.clientUpsyncFps = 20;\n    self.upsyncLoopInterval = null;\n\n    window.reconnectWSWithoutRoomId = function() {\n      return  new Promise((resolve,reject) => {\n      if (window.clientSessionPingInterval) {\n        clearInterval(clientSessionPingInterval);\n      }\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage()\n      return resolve();\n      })\n      .then(() =>{\n        this.initPersistentSessionClient(this.initAfterWSConncted);\n      });\n    }\n\n    window.handleClientSessionCloseOrError = function() {\n      if(!self.battleState)\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n    };\n\n    self.initAfterWSConncted = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      const tiledMapIns = self.node.getComponent(cc.TiledMap);\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      this._inputControlEnabled = false;\n      self.setupInputControls();\n\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n      for (let frameAnim of boundaryObjs.frameAnimations) {\n        const animNode = cc.instantiate(self.tiledAnimPrefab);\n        const anim = animNode.getComponent(cc.Animation);\n        animNode.setPosition(frameAnim.posInMapNode);\n        animNode.width = frameAnim.sizeInMapNode.width;\n        animNode.height = frameAnim.sizeInMapNode.height;\n        animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n        safelyAddChild(self.node, animNode);\n        setLocalZOrder(animNode, 5);\n        anim.addClip(frameAnim.animationClip, \"default\");\n        anim.play(\"default\");\n      }\n\n      self.barrierColliders = [];\n      for (let boundaryObj of boundaryObjs.barriers) {\n        const newBarrier = cc.instantiate(self.barrierPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n        newBarrierColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.barrierColliders.push(newBarrierColliderIns);\n        self.node.addChild(newBarrier);\n      }\n\n      const allLayers = tiledMapIns.getLayers();\n      for (let layer of allLayers) {\n        const layerType = layer.getProperty(\"type\");\n        switch (layerType) {\n          case \"normal\":\n            setLocalZOrder(layer.node, 0);\n            break;\n          case \"barrier_and_shelter\":\n            setLocalZOrder(layer.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      const allObjectGroups = tiledMapIns.getObjectGroups();\n      for (let objectGroup of allObjectGroups) {\n        const objectGroupType = objectGroup.getProperty(\"type\");\n        switch (objectGroupType) {\n          case \"barrier_and_shelter\":\n            setLocalZOrder(objectGroup.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (this.joystickInputControllerNode.parent !== this.node.parent.parent.getChildByName('JoystickContainer')) {\n        this.joystickInputControllerNode.parent = this.node.parent.parent.getChildByName('JoystickContainer');\n      }\n      this.joystickInputControllerNode.parent.width = this.node.parent.width * 0.5;\n      this.joystickInputControllerNode.parent.height = this.node.parent.height;\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newShelter.setPosition(newBoundaryOffsetInMapNode);\n        newShelter.setAnchorPoint(cc.v2(0, 0));\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n        newShelterColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.node.addChild(newShelter);\n      }\n\n      window.handleRoomDownsyncFrame = function(diffFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n        const frameId = diffFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        const refFrameId = diffFrame.refFrameId;\n        const isInitiatingFrame = (0 >= self.recentFrameCacheCurrentSize || 0 == refFrameId); \n        if (refFrameId % 60 == 0) {\n          cc.log(`${JSON.stringify(diffFrame)}`);\n        }\n        const cachedFullFrame = self.recentFrameCache[refFrameId];\n        if (!isInitiatingFrame && self.useDiffFrameAlgo && null == cachedFullFrame) {\n          cc.log(`Should send a reset upsync to server for diffFrame id == ${frameId}, refFrameId == ${refFrameId}`);\n          return;\n        } \n        let countdownNanos = diffFrame.countdownNanos;\n        if (countdownNanos < 0) countdownNanos = 0;\n        const countdownSeconds = parseInt(countdownNanos / 1000000000);\n        if (isNaN(countdownSeconds)) {\n          cc.log(`countdownSeconds is NaN for countdownNanos == ${countdownNanos}.`);\n        }\n        self.countdownLabel.string = countdownSeconds;\n        const roomDownsyncFrame = (\n          (isInitiatingFrame || !self.useDiffFrameAlgo)\n          ?\n          diffFrame    \n          :\n          self._generateNewFullFrame(cachedFullFrame, diffFrame) \n        ); \n        if (countdownNanos <= 0) {\n          self.onBattleStopped(roomDownsyncFrame.players);\n          return;\n        }\n        self._dumpToFullFrameCache(roomDownsyncFrame);\n        const sentAt = roomDownsyncFrame.sentAt;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(\"Battle started!\");\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n        // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n      if(ALL_BATTLE_STATES.WAITING == self.battleState) {\n        self.showPopopInCanvas(self.findingPlayerNode);\n      }\n    }\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    self.enableInputControls();\n    if(self.findingPlayerNode.parent)\n      canvasNode.removeChild(self.findingPlayerNode);\n  },\n\n  onBattleStopped(players) {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    const resultPanelNode = self.resultPanelNode;\n    const resultPanelScriptIns =  resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.showPlayerInfo(players);\n    // Such that it doesn't execute \"update(dt)\" anymore. \n    self.selfPlayerNode.active = false;\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.showPopopInCanvas(resultPanelNode);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const newPlayerNode = cc.instantiate(instance.selfPlayerPrefab);\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      self.selfPlayerIdLabel.string = self.selfPlayerInfo.id;\n      const score  = self.selfPlayerInfo.score ? self.selfPlayerInfo.score : 0 \n      self.selfPlayerScoreLabel.string = score;\n    }\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n     //显示分数\n     if(!self.scoreInfoDict[playerId]){\n        const scoreNode = cc.instantiate(self.otherPlayerScoreIndicatorPrefab);  \n        const debugInfoNode = canvasParentNode.getChildByName(\"DebugInfo\");\n        scoreNode.getChildByName(\"title\").getComponent(cc.Label).string = \"player\"+cachedPlayerData.id+\"'s score:\";\n        safelyAddChild(debugInfoNode,scoreNode);\n        self.scoreInfoDict[playerId] = scoreNode;\n      }\n      const playerScore  = !cachedPlayerData.score ? cachedPlayerData.score  : 0 \n      self.scoreInfoDict[playerId].getChildByName(\"OtherPlayerScoreLabel\").getComponent(cc.Label).string = playerScore;\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        targetNode.getComponent(\"SelfPlayer\").speed = cachedPlayerData.speed;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag >= toTeleportDisThreshold) {\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = normalizedDir;\n        }\n      }\n    }\n\n   // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.x,\n        trapInfo.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        /*\n        //初始化trap的标记\n        const pickupBoundary = trapInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n      \n    }\n\n   // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.x,\n        bulletInfo.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }else {\n        targetNode.setPosition(newPos);\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n   // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.x,\n        treasureInfo.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        \n        /* \n        //初始化treasure的标记\n        const pickupBoundary = treasureInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      toRemoveTreasureNodeDict[k].parent.removeChild(toRemoveTreasureNodeDict[k]);\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      if (byClick) {\n        /**\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\n        */\n        window.closeWSConnection();\n      }\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.showPopopInCanvas(self.confirmLogoutNode);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n  \n  initWSConnection(evt, cb) {\n    const self = this;\n    if(cb){ \n      cb()\n    } \n    initPersistentSessionClient(self.initAfterWSConncted);\n  },\n\n  showPopopInCanvas(toShowNode) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    const canvasNode = self.canvasNode;\n    toShowNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, toShowNode);\n    setLocalZOrder(toShowNode, 10);\n  },\n\n});\n"]}