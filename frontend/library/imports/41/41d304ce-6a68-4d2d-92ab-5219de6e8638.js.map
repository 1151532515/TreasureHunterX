{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","selfPlayer","canvasNode","type","Node","default","tiledAnimPrefab","Prefab","selfPlayerPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","boundRoomIdLabel","Label","countdownLabel","_onPerUpsyncFrame","instance","selfPlayerId","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","id","dir","dx","parseFloat","dy","x","y","wrapped","msgId","Date","now","act","data","clientSession","send","JSON","stringify","onDestroy","self","upsyncLoopInterval","clearInterval","inputControlTimer","popupSimplePressToGo","labelString","state","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","getScale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","alertForGoingBackToLoginScene","mapIns","millisToGo","js","formatStr","setTimeout","logout","onLoad","lastRoomDownsyncFrameId","mapNode","node","parent","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","battleState","otherPlayerNodeDict","otherPlayerCachedDataDict","confirmLogoutNode","width","height","clientUpsyncFps","handleClientSessionCloseOrError","initPersistentSessionClient","tiledMapIns","TiledMap","parse","sys","localStorage","playerId","spawnSelfPlayer","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","sizeInMapNode","origSize","setAnchorPoint","setLocalZOrder","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","setInterval","handleDownsyncRoomFrame","roomDownsyncFrame","parseInt","countdownNanos","toString","frameId","sentAt","refFrameId","players","playerIdStrList","Object","keys","i","length","k","anotherPlayer","renderAnotherControlledPlayer","anotherPlayerCachedData","targetNode","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","newScheduledDirectionInWorldCoordinate","activeDirection","dPjX","dPjY","newScheduledDirectionInLocalCoordinate","scheduleNewDirection","enableInputControls","disableInputControls","newPlayer","uid","update","dt","boundRoomId","cachedPlayerData","newPos","speed","getNumberOfRunningActions","newScheduledDirection","discretizeDirection","joyStickEps","oldPos","toMoveByVec","durationSeconds","mag","runAction","moveTo","s","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","log","closeWSConnection","removeItem","loadScene","onLogoutClicked","evt","onLogoutConfirmationDismissed"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    selfPlayer: null,\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    selfPlayerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    npcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    type2NpcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null, \n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this; \n    if (\n      null == instance.selfPlayerId ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n    ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerId,\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayer.x),\n      y: parseFloat(instance.selfPlayer.y), \n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData, \n    }\n    window.clientSession.send(JSON.stringify(wrapped)); \n  },\n\n  // LIFE-CYCLE CALLBACKS:\n  onDestroy() {\n    const self = this;\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    if (ALL_MAP_STATES.VISUAL != self.state) {\n      return;\n    }\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, simplePressToGoDialogNode);\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s Will logout in %s seconds.\", labelString, millisToGo/1000));\n    setTimeout(() => {\n      mapIns.logout();\n    }, millisToGo);\n  },\n\n  onLoad() {\n    const self = this;\n    self.lastRoomDownsyncFrameId = 0;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerNodeDict = {};\n    self.otherPlayerCachedDataDict = {};\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n    self.confirmLogoutNode.width = canvasNode.width;\n    self.confirmLogoutNode.height = canvasNode.height;\n\n    self.clientUpsyncFps = 24;\n    self.upsyncLoopInterval = null;\n\n    window.handleClientSessionCloseOrError = function() {\n      self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self);\n    }; \n\n    initPersistentSessionClient(() => {\n      self.state = ALL_MAP_STATES.VISUAL;\n      const tiledMapIns = self.node.getComponent(cc.TiledMap); \n      self.selfPlayerId = JSON.parse(cc.sys.localStorage.selfPlayer).playerId;\n      self.spawnSelfPlayer();\n      self.selfPlayerScriptIns = self.selfPlayer.getComponent(\"SelfPlayer\");\n      this._inputControlEnabled = true;\n      self.setupInputControls();\n\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node); \n      for (let frameAnim of boundaryObjs.frameAnimations) {\n        const animNode = cc.instantiate(self.tiledAnimPrefab);  \n        const anim = animNode.getComponent(cc.Animation); \n        animNode.setPosition(frameAnim.posInMapNode);\n        animNode.width = frameAnim.sizeInMapNode.width;\n        animNode.height = frameAnim.sizeInMapNode.height;\n        animNode.setScale(frameAnim.sizeInMapNode.width/frameAnim.origSize.width, frameAnim.sizeInMapNode.height/frameAnim.origSize.height);\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n        safelyAddChild(self.node, animNode);  \n        setLocalZOrder(animNode, 5);  \n        anim.addClip(frameAnim.animationClip, \"default\");\n        anim.play(\"default\");\n      } \n\n      self.barrierColliders = [];\n      for (let boundaryObj of boundaryObjs.barriers) {\n        const newBarrier = cc.instantiate(self.barrierPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y); \n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider); \n        newBarrierColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode)); \n        }  \n        self.barrierColliders.push(newBarrierColliderIns);\n        self.node.addChild(newBarrier);\n      }\n\n      const allLayers = tiledMapIns.getLayers();\n      for (let layer of allLayers) {\n        const layerType = layer.getProperty(\"type\"); \n        switch (layerType) {\n          case \"normal\":\n            setLocalZOrder(layer.node, 0);\n            break;\n          case \"barrier_and_shelter\":\n            setLocalZOrder(layer.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      const allObjectGroups = tiledMapIns.getObjectGroups(); \n      for (let objectGroup of allObjectGroups) {\n        const objectGroupType = objectGroup.getProperty(\"type\"); \n        switch (objectGroupType) {\n          case \"barrier_and_shelter\":\n            setLocalZOrder(objectGroup.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (this.joystickInputControllerNode.parent !== this.node.parent.parent.getChildByName('JoystickContainer')) {\n        this.joystickInputControllerNode.parent = this.node.parent.parent.getChildByName('JoystickContainer');\n      }\n      this.joystickInputControllerNode.parent.width = this.node.parent.width * 0.5;\n      this.joystickInputControllerNode.parent.height = this.node.parent.height;\n\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y); \n        newShelter.setPosition(newBoundaryOffsetInMapNode);\n        newShelter.setAnchorPoint(cc.v2(0, 0));\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider); \n        newShelterColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode)); \n        }  \n        self.node.addChild(newShelter);\n      }\n      self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n      window.handleDownsyncRoomFrame = function(roomDownsyncFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n\n        self.countdownLabel.string = parseInt(roomDownsyncFrame.countdownNanos/1000000000).toString();\n        const frameId = roomDownsyncFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) return;\n        if (roomDownsyncFrame.countdownNanos == -1) {\n          self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n          self.alertForGoingBackToLoginScene(\"Battle stopped!\", self)\n        }\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          self.popupSimplePressToGo(\"Battle started!\");\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n        const sentAt = roomDownsyncFrame.sentAt;\n        const refFrameId = roomDownsyncFrame.refFrameId;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerId) continue;\n          const anotherPlayer = players[k]; \n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer; \n        } \n        // TODO: Cope with removed players.\n        // TODO: Cope with FullFrame reconstruction by `refFrameId` and a cache of recent FullFrames.\n        // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    });\n  },\n\n  renderAnotherControlledPlayer: (mapIns, anotherPlayerCachedData, targetNode) => {\n    const mapNode = mapIns.node;\n  }, \n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const selfPlayerScriptIns = instance.selfPlayerScriptIns;\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n\n      const newScheduledDirectionInWorldCoordinate = {\n        dx: ctrl.activeDirection.dPjX,\n        dy: ctrl.activeDirection.dPjY\n      };\n\n      const newScheduledDirectionInLocalCoordinate = newScheduledDirectionInWorldCoordinate;\n      selfPlayerScriptIns.scheduleNewDirection(newScheduledDirectionInLocalCoordinate);\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true; \n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const newPlayer = cc.instantiate(instance.selfPlayerPrefab);\n    newPlayer.uid = 0;\n    newPlayer.setPosition(cc.v2(0, 0));\n    newPlayer.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayer);\n\n    setLocalZOrder(newPlayer, 5);\n    instance.selfPlayer = newPlayer;\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;  \n    }\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId]; \n      const newPos = cc.v2(\n        cachedPlayerData.x, \n        cachedPlayerData.y\n      );\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        targetNode.getComponent(\"SelfPlayer\").speed = 0; // A dirty fix to prevent jittering.\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue; \n      }\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) { \n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);  \n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, true);\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = toMoveByVec.mag()/self.selfPlayerScriptIns.speed;\n      // cc.log(`Moving targetNode from <${oldPos.x}, ${oldPos.y}> to <${newPos.x}, ${newPos.y}> in ${durationSeconds} seconds.`);\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n    // TODO: Cope with removed players.\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout() {\n    // Will be called within \"ConfirmLogout.js\".\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      NetworkUtils.ajax({\n        url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n        type: \"POST\",\n        data: requestContent,\n        success: function(res) {\n          if (res.ret != constants.RET_CODE.OK) {\n            cc.log(`Logout failed: ${res}.`);\n          }\n          window.closeWSConnection();\n          cc.sys.localStorage.removeItem('selfPlayer');\n          cc.director.loadScene('login');\n        }\n      });\n    } else {\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    const canvasNode = self.canvasNode;\n    self.confirmLogoutNode.setScale(1 / canvasNode.getScale());\n    safelyAddChild(canvasNode, self.confirmLogoutNode);\n    setLocalZOrder(self.confirmLogoutNode, 10);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n});\n\n"]}