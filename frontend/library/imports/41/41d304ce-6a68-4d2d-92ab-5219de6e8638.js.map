{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","useDiffFrameAlgo","default","canvasNode","type","Node","tiledAnimPrefab","Prefab","selfPlayerPrefab","treasurePrefab","trapPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","selfPlayerIdLabel","Label","boundRoomIdLabel","countdownLabel","selfPlayerScoreLabel","otherPlayerScoreIndicatorPrefab","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","_generateNewFullFrame","refFullFrame","diffFrame","newFullFrame","id","treasures","traps","bullets","players","playersLocalIdStrList","Object","keys","i","length","k","playerId","parseInt","removed","treasuresLocalIdStrList","treasureLocalIdInBattle","trapsLocalIdStrList","trapLocalIdInBattle","bulletsLocalIdStrList","bulletLocalIdInBattle","_dumpToFullFrameCache","fullFrame","self","recentFrameCacheCurrentSize","recentFrameCacheMaxCount","toDelFrameId","recentFrameCache","_onPerUpsyncFrame","instance","resyncing","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","dir","dx","parseFloat","dy","x","selfPlayerNode","y","ackingFrameId","lastRoomDownsyncFrameId","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","upsyncLoopInterval","clearInterval","inputControlTimer","_lazilyTriggerResync","popupSimplePressToGo","_onResyncCompleted","labelString","state","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","getScale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","widgetsAboveAllNode","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","onLoad","mapNode","node","parent","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","mainCameraNode","mainCamera","Camera","children","child","zoomRatio","battleState","otherPlayerCachedDataDict","otherPlayerNodeDict","treasureInfoDict","treasureNodeDict","trapInfoDict","trapBulletInfoDict","trapBulletNodeDict","trapNodeDict","scoreInfoDict","confirmLogoutNode","resultPanelNode","gameRuleNode","gameRuleScriptIns","showPopopInCanvas","findingPlayerNode","clientUpsyncFps","reconnectWSWithoutRoomId","Promise","resolve","reject","clientSessionPingInterval","clearBoundRoomIdInBothVolatileAndPersistentStorage","then","initPersistentSessionClient","initAfterWSConncted","handleClientSessionCloseOrError","tiledMapIns","TiledMap","parse","sys","localStorage","selfPlayer","assign","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","width","sizeInMapNode","height","origSize","setAnchorPoint","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleRoomDownsyncFrame","frameId","refFrameId","isInitiatingFrame","log","cachedFullFrame","countdownNanos","countdownSeconds","isNaN","roomDownsyncFrame","onBattleStopped","sentAt","playerIdStrList","immediateSelfPlayerInfo","speed","score","anotherPlayer","treasureInfo","trapInfo","bulletInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","resultPanelScriptIns","showPlayerInfo","active","newPlayerNode","toStartWithPos","update","dt","canvasParentNode","boundRoomId","updateSpeed","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","scoreNode","debugInfoNode","playerScore","targetNode","aControlledOtherPlayerScriptIns","newScheduledDirection","discretizeDirection","joyStickEps","scheduleNewDirection","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","normalizedDir","getNumberOfRunningActions","durationSeconds","runAction","moveTo","s","byClick","localClearance","closeWSConnection","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","initWSConnection","cb","toShowNode"],"mappings":";;;;;;AAAA,IAAMA,OAAOC,QAAQ,cAAR,CAAb;AACAD,KAAKE,IAAL,CAAUC,OAAOC,QAAjB,GAA4B;;AAE5BD,OAAOE,cAAP,GAAwB;AACtBC,UAAQ,CADc,EACX;AACXC,qBAAmB,CAFG;AAGtBC,uBAAqB;AAHC,CAAxB;;AAMAL,OAAOM,iBAAP,GAA2B;AACzBC,WAAS,CADgB;AAEzBC,aAAW,CAFc;AAGzBC,iBAAe,CAHU;AAIzBC,gBAAc;AAJW,CAA3B;;AAOAC,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACVC,sBAAkB;AAChBC,eAAS;AADO,KADR;AAIVC,gBAAY;AACVC,YAAMR,GAAGS,IADC;AAEVH,eAAS;AAFC,KAJF;AAQVI,qBAAiB;AACfF,YAAMR,GAAGW,MADM;AAEfL,eAAS;AAFM,KARP;AAYVM,sBAAkB;AAChBJ,YAAMR,GAAGW,MADO;AAEhBL,eAAS;AAFO,KAZR;AAgBVO,oBAAgB;AACdL,YAAMR,GAAGW,MADK;AAEdL,eAAS;AAFK,KAhBN;AAoBVQ,gBAAY;AACVN,YAAMR,GAAGW,MADC;AAEVL,eAAS;AAFC,KApBF;AAwBVS,qBAAiB;AACfP,YAAMR,GAAGW,MADM;AAEfL,eAAS;AAFM,KAxBP;AA4BVU,0BAAsB;AACpBR,YAAMR,GAAGW,MADW;AAEpBL,eAAS;AAFW,KA5BZ;AAgCVW,mBAAe;AACbT,YAAMR,GAAGW,MADI;AAEbL,eAAS;AAFI,KAhCL;AAoCVY,mBAAe;AACbV,YAAMR,GAAGW,MADI;AAEbL,eAAS;AAFI,KApCL;AAwCVa,2BAAuB;AACrBX,YAAMR,GAAGW,MADY;AAErBL,eAAS;AAFY,KAxCb;AA4CVc,iCAA6B;AAC3BZ,YAAMR,GAAGS,IADkB;AAE3BH,eAAS;AAFkB,KA5CnB;AAgDVe,iCAA6B;AAC3Bb,YAAMR,GAAGS,IADkB;AAE3BH,eAAS;AAFkB,KAhDnB;AAoDVgB,yBAAqB;AACnBd,YAAMR,GAAGW,MADU;AAEnBL,eAAS;AAFU,KApDX;AAwDViB,iCAA6B;AAC3Bf,YAAMR,GAAGW,MADkB;AAE3BL,eAAS;AAFkB,KAxDnB;AA4DVkB,uBAAmB;AACjBhB,YAAMR,GAAGyB,KADQ;AAEjBnB,eAAS;AAFQ,KA5DT;AAgEVoB,sBAAkB;AAChBlB,YAAMR,GAAGyB,KADO;AAEhBnB,eAAS;AAFO,KAhER;AAoEVqB,oBAAgB;AACdnB,YAAMR,GAAGyB,KADK;AAEdnB,eAAS;AAFK,KApEN;AAwEVsB,0BAAsB;AACpBpB,YAAMR,GAAGyB,KADW;AAEpBnB,eAAS;AAFW,KAxEZ;AA4EVuB,qCAAiC;AAC/BrB,YAAKR,GAAGW,MADuB;AAE/BL,eAAS;AAFsB,KA5EvB;AAgFVwB,sBAAkB;AAChBtB,YAAKR,GAAGW,MADQ;AAEhBL,eAAS;AAFO,KAhFR;AAoFVyB,uBAAmB;AACjBvB,YAAKR,GAAGW,MADS;AAEjBL,eAAS;AAFQ,KApFT;AAwFV0B,oBAAgB;AACdxB,YAAKR,GAAGW,MADM;AAEdL,eAAS;AAFK,KAxFN;AA4FV2B,yBAAqB;AACnBzB,YAAKR,GAAGW,MADW;AAEnBL,eAAS;AAFU;AA5FX,GAHL;;AAqGP4B,yBAAuB,+BAASC,YAAT,EAAuBC,SAAvB,EAAkC;AACvD,QAAIC,eAAe;AACjBC,UAAIF,UAAUE,EADG;AAEjBC,iBAAWJ,aAAaI,SAFP;AAGjBC,aAAOL,aAAaK,KAHH;AAIjBC,eAASN,aAAaM,OAJL;AAKjBC,eAASP,aAAaO;AALL,KAAnB;;AAQA,QAAMA,UAAUN,UAAUM,OAA1B;AACA,QAAMC,wBAAwBC,OAAOC,IAAP,CAAYH,OAAZ,CAA9B;AACA,SAAK,IAAII,IAAI,CAAb,EAAgBA,IAAIH,sBAAsBI,MAA1C,EAAkD,EAAED,CAApD,EAAuD;AACrD,UAAME,IAAIL,sBAAsBG,CAAtB,CAAV;AACA,UAAMG,WAAWC,SAASF,CAAT,CAAjB;AACA,UAAI,QAAQZ,UAAUM,OAAV,CAAkBO,QAAlB,EAA4BE,OAAxC,EAAiD;AAC/C;AACA,eAAOd,aAAaK,OAAb,CAAqBO,QAArB,CAAP;AACD,OAHD,MAGO;AACLZ,qBAAaK,OAAb,CAAqBO,QAArB,IAAiCb,UAAUM,OAAV,CAAkBO,QAAlB,CAAjC;AACD;AACF;;AAED,QAAMV,YAAYH,UAAUG,SAA5B;AACA,QAAMa,0BAA0BR,OAAOC,IAAP,CAAYN,SAAZ,CAAhC;AACA,SAAK,IAAIO,KAAI,CAAb,EAAgBA,KAAIM,wBAAwBL,MAA5C,EAAoD,EAAED,EAAtD,EAAyD;AACvD,UAAME,KAAII,wBAAwBN,EAAxB,CAAV;AACA,UAAMO,0BAA0BH,SAASF,EAAT,CAAhC;AACA,UAAI,QAAQZ,UAAUG,SAAV,CAAoBc,uBAApB,EAA6CF,OAAzD,EAAkE;AAChE;AACA,eAAOd,aAAaE,SAAb,CAAuBc,uBAAvB,CAAP;AACD,OAHD,MAGO;AACLhB,qBAAaE,SAAb,CAAuBc,uBAAvB,IAAkDjB,UAAUG,SAAV,CAAoBc,uBAApB,CAAlD;AACD;AACF;;AAED,QAAMb,QAAQJ,UAAUI,KAAxB;AACA,QAAMc,sBAAsBV,OAAOC,IAAP,CAAYL,KAAZ,CAA5B;AACA,SAAK,IAAIM,MAAI,CAAb,EAAgBA,MAAIQ,oBAAoBP,MAAxC,EAAgD,EAAED,GAAlD,EAAqD;AACnD,UAAME,MAAIM,oBAAoBR,GAApB,CAAV;AACA,UAAMS,sBAAsBL,SAASF,GAAT,CAA5B;AACA,UAAI,QAAQZ,UAAUI,KAAV,CAAgBe,mBAAhB,EAAqCJ,OAAjD,EAA0D;AACxD;AACA,eAAOd,aAAaG,KAAb,CAAmBe,mBAAnB,CAAP;AACD,OAHD,MAGO;AACLlB,qBAAaG,KAAb,CAAmBe,mBAAnB,IAA0CnB,UAAUI,KAAV,CAAgBe,mBAAhB,CAA1C;AACD;AACF;;AAED,QAAMd,UAAUL,UAAUK,OAA1B;AACA,QAAMe,wBAAwBZ,OAAOC,IAAP,CAAYJ,OAAZ,CAA9B;AACA,SAAK,IAAIK,MAAI,CAAb,EAAgBA,MAAIU,sBAAsBT,MAA1C,EAAkD,EAAED,GAApD,EAAuD;AACrD,UAAME,MAAIQ,sBAAsBV,GAAtB,CAAV;AACA,UAAMW,wBAAwBP,SAASF,GAAT,CAA9B;AACA,UAAI,QAAQZ,UAAUK,OAAV,CAAkBgB,qBAAlB,EAAyCN,OAArD,EAA8D;AAC5D;AACA,eAAOd,aAAaI,OAAb,CAAqBgB,qBAArB,CAAP;AACD,OAHD,MAGO;AACLpB,qBAAaI,OAAb,CAAqBgB,qBAArB,IAA8CrB,UAAUK,OAAV,CAAkBgB,qBAAlB,CAA9C;AACD;AACF;;AAED,WAAOpB,YAAP;AACD,GAnKM;;AAqKPqB,yBAAuB,+BAASC,SAAT,EAAoB;AACzC,QAAMC,OAAO,IAAb;AACA,WAAOA,KAAKC,2BAAL,IAAoCD,KAAKE,wBAAhD,EAA0E;AACxE;AACA,UAAMC,eAAenB,OAAOC,IAAP,CAAYe,KAAKI,gBAAjB,EAAmC,CAAnC,CAArB;AACA;AACA,aAAOJ,KAAKI,gBAAL,CAAsBD,YAAtB,CAAP;AACA,QAAEH,KAAKC,2BAAP;AACD;AACDD,SAAKI,gBAAL,CAAsBL,UAAUrB,EAAhC,IAAsCqB,SAAtC;AACA,MAAEC,KAAKC,2BAAP;AACD,GAhLM;;AAkLPI,mBAlLO,+BAkLa;AAClB,QAAMC,WAAW,IAAjB;AACA,QAAIA,SAASC,SAAb,EAAwB;AACxB,QACE,QAAQD,SAASE,cAAjB,IACA,QAAQF,SAASG,mBADjB,IAEA,QAAQH,SAASG,mBAAT,CAA6BC,kBAHvC,EAII;AACJ,QAAMC,kBAAkB;AACtBjC,UAAI4B,SAASE,cAAT,CAAwB9B,EADN;AAEtB;;;;;AAKAkC,WAAK;AACHC,YAAIC,WAAWR,SAASG,mBAAT,CAA6BC,kBAA7B,CAAgDG,EAA3D,CADD;AAEHE,YAAID,WAAWR,SAASG,mBAAT,CAA6BC,kBAA7B,CAAgDK,EAA3D;AAFD,OAPiB;AAWtBC,SAAGF,WAAWR,SAASW,cAAT,CAAwBD,CAAnC,CAXmB;AAYtBE,SAAGJ,WAAWR,SAASW,cAAT,CAAwBC,CAAnC,CAZmB;AAatBC,qBAAeb,SAASc;AAbF,KAAxB;AAeA,QAAMC,UAAU;AACdC,aAAOC,KAAKC,GAAL,EADO;AAEdC,WAAK,iBAFS;AAGdC,YAAMf;AAHQ,KAAhB;AAKAlF,WAAOkG,UAAP,CAAkBC,KAAKC,SAAL,CAAeR,OAAf,CAAlB;AACD,GA/MM;AAiNPS,WAjNO,uBAiNK;AACV,QAAM9B,OAAO,IAAb;AACA,QAAIA,KAAK+B,kBAAT,EAA6B;AAC3BC,oBAAchC,KAAK+B,kBAAnB;AACD;AACD,QAAI/B,KAAKiC,iBAAT,EAA4B;AAC1BD,oBAAchC,KAAKiC,iBAAnB;AACD;AACF,GAzNM;AA2NPC,sBA3NO,kCA2NgB;AACrB,QAAI,QAAQ,KAAK3B,SAAjB,EAA4B;AAC5B,SAAKA,SAAL,GAAiB,KAAjB;AACA,SAAK4B,oBAAL,CAA0B,uCAA1B;AACD,GA/NM;AAiOPC,oBAjOO,gCAiOc;AACnB,QAAI,SAAS,KAAK7B,SAAlB,EAA6B;AAC7B,SAAKA,SAAL,GAAiB,IAAjB;AACD,GApOM;AAsOP4B,sBAtOO,gCAsOcE,WAtOd,EAsO2B;AAChC,QAAMrC,OAAO,IAAb;AACAA,SAAKsC,KAAL,GAAa3G,eAAeG,mBAA5B;;AAEA,QAAMa,aAAaqD,KAAKrD,UAAxB;AACA,QAAM4F,4BAA4BnG,GAAGoG,WAAH,CAAexC,KAAKrC,2BAApB,CAAlC;AACA4E,8BAA0BE,WAA1B,CAAsCrG,GAAGsG,EAAH,CAAM,CAAN,EAAS,CAAT,CAAtC;AACAH,8BAA0BI,QAA1B,CAAmC,IAAIhG,WAAWiG,QAAX,EAAvC;AACA,QAAMC,iCAAiCN,0BAA0BO,YAA1B,CAAuC,uBAAvC,CAAvC;AACA,QAAMC,YAAYR,0BAA0BS,cAA1B,CAAyC,KAAzC,CAAlB;AACA,QAAMC,qBAAqB,SAArBA,kBAAqB,GAAM;AAC/BjD,WAAKkD,cAAL,CAAoBvH,eAAeC,MAAnC;AACAe,iBAAWwG,WAAX,CAAuBZ,yBAAvB;AACD,KAHD;AAIAA,8BAA0BS,cAA1B,CAAyC,MAAzC,EAAiDF,YAAjD,CAA8D1G,GAAGyB,KAAjE,EAAwEuF,MAAxE,GAAiFf,WAAjF;AACAU,cAAUM,IAAV,CAAe,OAAf,EAAwBR,+BAA+BS,aAA/B,CAA6CC,IAA7C,CAAkDV,8BAAlD,EAAkFI,kBAAlF,CAAxB;AACAF,cAAUC,cAAV,CAAyB,OAAzB,EAAkCF,YAAlC,CAA+C1G,GAAGyB,KAAlD,EAAyDuF,MAAzD,GAAkE,IAAlE;AACApD,SAAKkD,cAAL,CAAoBvH,eAAeG,mBAAnC;AACA0H,mBAAexD,KAAKyD,mBAApB,EAAyClB,yBAAzC;AACAmB,mBAAenB,yBAAf,EAA0C,EAA1C;AACD,GA1PM;AA4PPoB,+BA5PO,yCA4PuBtB,WA5PvB,EA4PoCuB,MA5PpC,EA4P4CC,yDA5P5C,EA4PuG;AAC5G,QAAMC,aAAa,IAAnB;AACAF,WAAOzB,oBAAP,CAA4B/F,GAAG2H,EAAH,CAAMC,SAAN,CAAgB,+BAAhB,EAAiD3B,WAAjD,EAA8DyB,aAAa,IAA3E,CAA5B;AACAG,eAAW,YAAM;AACfL,aAAOM,MAAP,CAAc,KAAd,EAAqBL,yDAArB;AACD,KAFD,EAEGC,UAFH;AAGF,GAlQO;AAoQPK,QApQO,oBAoQE;AAAA;;AACP,QAAMnE,OAAO,IAAb;AACAA,SAAKO,SAAL,GAAiB,KAAjB;AACAP,SAAKoB,uBAAL,GAA+B,CAA/B;;AAEApB,SAAKI,gBAAL,GAAwB,EAAxB;AACAJ,SAAKC,2BAAL,GAAmC,CAAnC;AACAD,SAAKE,wBAAL,GAAgC,IAAhC;;AAEA,QAAMkE,UAAUpE,KAAKqE,IAArB;AACA,QAAM1H,aAAayH,QAAQE,MAA3B;AACAlI,OAAGmI,QAAH,CAAYC,mBAAZ,GAAkCC,OAAlC,GAA4C,IAA5C;AACArI,OAAGmI,QAAH,CAAYC,mBAAZ,GAAkCE,gBAAlC,GAAqDC,QAArD;;AAEA3E,SAAK4E,cAAL,GAAsBjI,WAAWqG,cAAX,CAA0B,aAA1B,CAAtB;AACAhD,SAAK6E,UAAL,GAAkB7E,KAAK4E,cAAL,CAAoB9B,YAApB,CAAiC1G,GAAG0I,MAApC,CAAlB;AAfO;AAAA;AAAA;;AAAA;AAgBP,2BAAkB9E,KAAK4E,cAAL,CAAoBG,QAAtC,8HAAgD;AAAA,YAAvCC,KAAuC;;AAC9CA,cAAMrC,QAAN,CAAe,IAAE3C,KAAK6E,UAAL,CAAgBI,SAAjC;AACD;AAlBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBPjF,SAAKyD,mBAAL,GAA2BzD,KAAK4E,cAAL,CAAoB5B,cAApB,CAAmC,iBAAnC,CAA3B;;AAEAhD,SAAKiB,cAAL,GAAsB,IAAtB;AACAjB,SAAKS,mBAAL,GAA2B,IAA3B;AACAT,SAAKQ,cAAL,GAAsB,IAAtB;AACAR,SAAK+B,kBAAL,GAA0B,IAA1B;AACA/B,SAAKkD,cAAL,CAAoBvH,eAAeC,MAAnC;;AAEAoE,SAAKkF,WAAL,GAAmBnJ,kBAAkBC,OAArC;AACAgE,SAAKmF,yBAAL,GAAiC,EAAjC;AACAnF,SAAKoF,mBAAL,GAA2B,EAA3B;AACApF,SAAKqF,gBAAL,GAAwB,EAAxB;AACArF,SAAKsF,gBAAL,GAAwB,EAAxB;AACAtF,SAAKuF,YAAL,GAAoB,EAApB;AACAvF,SAAKwF,kBAAL,GAA0B,EAA1B;AACAxF,SAAKyF,kBAAL,GAA0B,EAA1B;AACAzF,SAAK0F,YAAL,GAAoB,EAApB;AACA1F,SAAK2F,aAAL,GAAqB,EAArB;;AAEA;AACA3F,SAAK4F,iBAAL,GAAyBxJ,GAAGoG,WAAH,CAAexC,KAAKtC,mBAApB,CAAzB;AACAsC,SAAK4F,iBAAL,CAAuB9C,YAAvB,CAAoC,eAApC,EAAqDsB,OAArD,GAA+DpE,KAAKqE,IAApE;AACA;;AAEA;AACArE,SAAK6F,eAAL,GAAuBzJ,GAAGoG,WAAH,CAAexC,KAAK7B,iBAApB,CAAvB;AACA;;AAEA;AACA6B,SAAK8F,YAAL,GAAoB1J,GAAGoG,WAAH,CAAexC,KAAK5B,cAApB,CAApB;AACA4B,SAAK+F,iBAAL,GAAyB/F,KAAK8F,YAAL,CAAkBhD,YAAlB,CAA+B,UAA/B,CAAzB;AACA9C,SAAK+F,iBAAL,CAAuB3B,OAAvB,GAAiCpE,KAAKqE,IAAtC;AACArE,SAAKgG,iBAAL,CAAuBhG,KAAK8F,YAA5B;AACA;;AAEA;AACA9F,SAAKiG,iBAAL,GAAyB7J,GAAGoG,WAAH,CAAexC,KAAK3B,mBAApB,CAAzB;AACA;;AAEA2B,SAAKkG,eAAL,GAAuB,EAAvB;AACAlG,SAAK+B,kBAAL,GAA0B,IAA1B;;AAEAtG,WAAO0K,wBAAP,GAAkC,YAAW;AAAA;;AAC3C,aAAQ,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACxC,YAAI7K,OAAO8K,yBAAX,EAAsC;AACpCvE,wBAAcuE,yBAAd;AACD;AACD9K,eAAO+K,kDAAP;AACA,eAAOH,SAAP;AACC,OANO,EAOPI,IAPO,CAOF,YAAK;AACT,cAAKC,2BAAL,CAAiC,MAAKC,mBAAtC;AACD,OATO,CAAR;AAUD,KAXD;;AAaAlL,WAAOmL,+BAAP,GAAyC,YAAW;AAClD,UAAG,CAAC5G,KAAKkF,WAAT,EACElF,KAAK2D,6BAAL,CAAmC,qCAAnC,EAA0E3D,IAA1E,EAAgF,IAAhF;AACH,KAHD;;AAKAA,SAAK2G,mBAAL,GAA2B,YAAM;AAC/B3G,WAAKkD,cAAL,CAAoBvH,eAAeC,MAAnC;AACA,UAAMiL,cAAc7G,KAAKqE,IAAL,CAAUvB,YAAV,CAAuB1G,GAAG0K,QAA1B,CAApB;AACA9G,WAAKQ,cAAL,GAAsBoB,KAAKmF,KAAL,CAAW3K,GAAG4K,GAAH,CAAOC,YAAP,CAAoBC,UAA/B,CAAtB;AACAlI,aAAOmI,MAAP,CAAcnH,KAAKQ,cAAnB,EAAmC;AACjC9B,YAAIsB,KAAKQ,cAAL,CAAoBnB;AADS,OAAnC;AAGA,aAAK+H,oBAAL,GAA4B,KAA5B;AACApH,WAAKqH,kBAAL;;AAEA,UAAMC,eAAeC,qBAAqBC,sBAArB,CAA4CxH,KAAKqE,IAAjD,CAArB;AAV+B;AAAA;AAAA;;AAAA;AAW/B,8BAAsBiD,aAAaG,eAAnC,mIAAoD;AAAA,cAA3CC,SAA2C;;AAClD,cAAMC,WAAWvL,GAAGoG,WAAH,CAAexC,KAAKlD,eAApB,CAAjB;AACA,cAAM8K,OAAOD,SAAS7E,YAAT,CAAsB1G,GAAGyL,SAAzB,CAAb;AACAF,mBAASlF,WAAT,CAAqBiF,UAAUI,YAA/B;AACAH,mBAASI,KAAT,GAAiBL,UAAUM,aAAV,CAAwBD,KAAzC;AACAJ,mBAASM,MAAT,GAAkBP,UAAUM,aAAV,CAAwBC,MAA1C;AACAN,mBAAShF,QAAT,CAAkB+E,UAAUM,aAAV,CAAwBD,KAAxB,GAAgCL,UAAUQ,QAAV,CAAmBH,KAArE,EAA4EL,UAAUM,aAAV,CAAwBC,MAAxB,GAAiCP,UAAUQ,QAAV,CAAmBD,MAAhI;AACAN,mBAASQ,cAAT,CAAwB/L,GAAGsG,EAAH,CAAM,GAAN,EAAW,CAAX,CAAxB,EAPkD,CAOV;AACxCc,yBAAexD,KAAKqE,IAApB,EAA0BsD,QAA1B;AACAjE,yBAAeiE,QAAf,EAAyB,CAAzB;AACAC,eAAKQ,OAAL,CAAaV,UAAUW,aAAvB,EAAsC,SAAtC;AACAT,eAAKU,IAAL,CAAU,SAAV;AACD;AAvB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyB/BtI,WAAKuI,gBAAL,GAAwB,EAAxB;AAzB+B;AAAA;AAAA;;AAAA;AA0B/B,8BAAwBjB,aAAakB,QAArC,mIAA+C;AAAA,cAAtCC,WAAsC;;AAC7C,cAAMC,aAAatM,GAAGoG,WAAH,CAAexC,KAAK3C,aAApB,CAAnB;AACA,cAAMsL,6BAA6BvM,GAAGsG,EAAH,CAAM+F,YAAY,CAAZ,EAAezH,CAArB,EAAwByH,YAAY,CAAZ,EAAevH,CAAvC,CAAnC;AACAwH,qBAAWjG,WAAX,CAAuBkG,0BAAvB;AACAD,qBAAWP,cAAX,CAA0B/L,GAAGsG,EAAH,CAAM,CAAN,EAAS,CAAT,CAA1B;AACA,cAAMkG,wBAAwBF,WAAW5F,YAAX,CAAwB1G,GAAGyM,eAA3B,CAA9B;AACAD,gCAAsBE,MAAtB,GAA+B,EAA/B;AAN6C;AAAA;AAAA;;AAAA;AAO7C,kCAAcL,WAAd,mIAA2B;AAAA,kBAAlBM,CAAkB;;AACzBH,oCAAsBE,MAAtB,CAA6BE,IAA7B,CAAkCD,EAAEE,GAAF,CAAMN,0BAAN,CAAlC;AACD;AAT4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAU7C3I,eAAKuI,gBAAL,CAAsBS,IAAtB,CAA2BJ,qBAA3B;AACA5I,eAAKqE,IAAL,CAAU6E,QAAV,CAAmBR,UAAnB;AACD;AAtC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwC/B,UAAMS,YAAYtC,YAAYuC,SAAZ,EAAlB;AAxC+B;AAAA;AAAA;;AAAA;AAyC/B,8BAAkBD,SAAlB,mIAA6B;AAAA,cAApBE,KAAoB;;AAC3B,cAAMC,YAAYD,MAAME,WAAN,CAAkB,MAAlB,CAAlB;AACA,kBAAQD,SAAR;AACE,iBAAK,QAAL;AACE5F,6BAAe2F,MAAMhF,IAArB,EAA2B,CAA3B;AACA;AACF,iBAAK,qBAAL;AACEX,6BAAe2F,MAAMhF,IAArB,EAA2B,CAA3B;AACA;AACF;AACE;AARJ;AAUD;AArD8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuD/B,UAAMmF,kBAAkB3C,YAAY4C,eAAZ,EAAxB;AAvD+B;AAAA;AAAA;;AAAA;AAwD/B,8BAAwBD,eAAxB,mIAAyC;AAAA,cAAhCE,WAAgC;;AACvC,cAAMC,kBAAkBD,YAAYH,WAAZ,CAAwB,MAAxB,CAAxB;AACA,kBAAQI,eAAR;AACE,iBAAK,qBAAL;AACEjG,6BAAegG,YAAYrF,IAA3B,EAAiC,CAAjC;AACA;AACF;AACE;AALJ;AAOD;AAjE8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAmE/B,8BAAwBiD,aAAasC,gBAArC,mIAAuD;AAAA,cAA9CnB,YAA8C;;AACrD,cAAMoB,aAAazN,GAAGoG,WAAH,CAAexC,KAAKzC,qBAApB,CAAnB;AACA,cAAMoL,6BAA6BvM,GAAGsG,EAAH,CAAM+F,aAAY,CAAZ,EAAezH,CAArB,EAAwByH,aAAY,CAAZ,EAAevH,CAAvC,CAAnC;AACA2I,qBAAWpH,WAAX,CAAuBkG,0BAAvB;AACAkB,qBAAW1B,cAAX,CAA0B/L,GAAGsG,EAAH,CAAM,CAAN,EAAS,CAAT,CAA1B;AACA,cAAMoH,wBAAwBD,WAAW/G,YAAX,CAAwB1G,GAAGyM,eAA3B,CAA9B;AACAiB,gCAAsBhB,MAAtB,GAA+B,EAA/B;AANqD;AAAA;AAAA;;AAAA;AAOrD,kCAAcL,YAAd,mIAA2B;AAAA,kBAAlBM,EAAkB;;AACzBe,oCAAsBhB,MAAtB,CAA6BE,IAA7B,CAAkCD,GAAEE,GAAF,CAAMN,0BAAN,CAAlC;AACD;AAToD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUrD3I,eAAKqE,IAAL,CAAU6E,QAAV,CAAmBW,UAAnB;AACD;AA9E8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgF/BpO,aAAOsO,uBAAP,GAAiC,UAASvL,SAAT,EAAoB;AACnD,YAAIzC,kBAAkBC,OAAlB,IAA6BgE,KAAKkF,WAAlC,IAAiDnJ,kBAAkBE,SAAlB,IAA+B+D,KAAKkF,WAArF,IAAoGnJ,kBAAkBG,aAAlB,IAAmC8D,KAAKkF,WAAhJ,EAA6J;AAC7J,YAAM8E,UAAUxL,UAAUE,EAA1B;AACA,YAAIsL,WAAWhK,KAAKoB,uBAApB,EAA6C;AAC3C;AACA;AACD;AACD,YAAM6I,aAAazL,UAAUyL,UAA7B;AACA,YAAMC,oBAAqB,KAAKlK,KAAKC,2BAAV,IAAyC,KAAKgK,UAAzE;AACA,YAAIA,aAAa,EAAb,IAAmB,CAAvB,EAA0B;AACxB7N,aAAG+N,GAAH,MAAUvI,KAAKC,SAAL,CAAerD,SAAf,CAAV;AACD;AACD,YAAM4L,kBAAkBpK,KAAKI,gBAAL,CAAsB6J,UAAtB,CAAxB;AACA,YAAI,CAACC,iBAAD,IAAsBlK,KAAKvD,gBAA3B,IAA+C,QAAQ2N,eAA3D,EAA4E;AAC1E,eAAKlI,oBAAL;AACA;AACA;AACD;;AAED,YAAIgI,qBAAqB,KAAKD,UAA9B,EAA0C;AACxC;AACA,eAAK7H,kBAAL;AACD;AACD,YAAIiI,iBAAiB7L,UAAU6L,cAA/B;AACA,YAAIA,iBAAiB,CAArB,EAAwBA,iBAAiB,CAAjB;AACxB,YAAMC,mBAAmBhL,SAAS+K,iBAAiB,UAA1B,CAAzB;AACA,YAAIE,MAAMD,gBAAN,CAAJ,EAA6B;AAC3BlO,aAAG+N,GAAH,oDAAwDE,cAAxD;AACD;AACDrK,aAAKjC,cAAL,CAAoBqF,MAApB,GAA6BkH,gBAA7B;AACA,YAAME,oBACHN,qBAAqB,CAAClK,KAAKvD,gBAA5B,GAEA+B,SAFA,GAIAwB,KAAK1B,qBAAL,CAA2B8L,eAA3B,EAA4C5L,SAA5C,CALF;AAOA,YAAI6L,kBAAkB,CAAtB,EAAyB;AACvBrK,eAAKyK,eAAL,CAAqBD,kBAAkB1L,OAAvC;AACA;AACD;AACDkB,aAAKF,qBAAL,CAA2B0K,iBAA3B;AACA,YAAME,SAASF,kBAAkBE,MAAjC;AACA,YAAM5L,UAAU0L,kBAAkB1L,OAAlC;AACA,YAAM6L,kBAAkB3L,OAAOC,IAAP,CAAYH,OAAZ,CAAxB;AACAkB,aAAKmF,yBAAL,GAAiC,EAAjC;AACA,aAAK,IAAIjG,IAAI,CAAb,EAAgBA,IAAIyL,gBAAgBxL,MAApC,EAA4C,EAAED,CAA9C,EAAiD;AAC/C,cAAME,IAAIuL,gBAAgBzL,CAAhB,CAAV;AACA,cAAMG,WAAWC,SAASF,CAAT,CAAjB;AACA,cAAIC,YAAYW,KAAKQ,cAAL,CAAoB9B,EAApC,EAAwC;AACtC,gBAAMkM,0BAA0B9L,QAAQM,CAAR,CAAhC;AACAJ,mBAAOmI,MAAP,CAAcnH,KAAKQ,cAAnB,EAAmC;AACjCQ,iBAAG4J,wBAAwB5J,CADM;AAEjCE,iBAAG0J,wBAAwB1J,CAFM;AAGjC2J,qBAAOD,wBAAwBC,KAHE;AAIjC3F,2BAAa0F,wBAAwB1F,WAJJ;AAKjC4F,qBAAOF,wBAAwBE;AALE,aAAnC;AAOA;AACD;AACD,cAAMC,gBAAgBjM,QAAQM,CAAR,CAAtB;AACA;AACAY,eAAKmF,yBAAL,CAA+B9F,QAA/B,IAA2C0L,aAA3C;AACD;AACD/K,aAAKqF,gBAAL,GAAwB,EAAxB;AACA,YAAM1G,YAAY6L,kBAAkB7L,SAApC;AACA,YAAMa,0BAA0BR,OAAOC,IAAP,CAAYN,SAAZ,CAAhC;AACA,aAAK,IAAIO,MAAI,CAAb,EAAgBA,MAAIM,wBAAwBL,MAA5C,EAAoD,EAAED,GAAtD,EAAyD;AACvD,cAAME,MAAII,wBAAwBN,GAAxB,CAAV;AACA,cAAMO,0BAA0BH,SAASF,GAAT,CAAhC;AACA,cAAM4L,eAAerM,UAAUS,GAAV,CAArB;AACAY,eAAKqF,gBAAL,CAAsB5F,uBAAtB,IAAiDuL,YAAjD;AACD;;AAEDhL,aAAKuF,YAAL,GAAoB,EAApB;AACA,YAAM3G,QAAQ4L,kBAAkB5L,KAAhC;AACA,YAAMc,sBAAsBV,OAAOC,IAAP,CAAYL,KAAZ,CAA5B;AACA,aAAK,IAAIM,MAAI,CAAb,EAAgBA,MAAIQ,oBAAoBP,MAAxC,EAAgD,EAAED,GAAlD,EAAqD;AACnD,cAAME,MAAIM,oBAAoBR,GAApB,CAAV;AACA,cAAMS,sBAAsBL,SAASF,GAAT,CAA5B;AACA,cAAM6L,WAAWrM,MAAMQ,GAAN,CAAjB;AACAY,eAAKuF,YAAL,CAAkB5F,mBAAlB,IAAyCsL,QAAzC;AACD;;AAEDjL,aAAKwF,kBAAL,GAA0B,EAA1B;AACA,YAAM3G,UAAU2L,kBAAkB3L,OAAlC;AACA,YAAMe,wBAAwBZ,OAAOC,IAAP,CAAYJ,OAAZ,CAA9B;AACA,aAAK,IAAIK,MAAI,CAAb,EAAgBA,MAAIU,sBAAsBT,MAA1C,EAAkD,EAAED,GAApD,EAAuD;AACrD,cAAME,MAAIQ,sBAAsBV,GAAtB,CAAV;AACA,cAAMW,wBAAwBP,SAASF,GAAT,CAA9B;AACA,cAAM8L,aAAarM,QAAQO,GAAR,CAAnB;AACAY,eAAKwF,kBAAL,CAAwB3F,qBAAxB,IAAiDqL,UAAjD;AACD;;AAED,YAAI,KAAKlL,KAAKoB,uBAAd,EAAuC;AACrCpB,eAAKkF,WAAL,GAAmBnJ,kBAAkBE,SAArC;AACA,cAAI,KAAK+N,OAAT,EAAkB;AAChB;AACAhK,iBAAKmC,oBAAL,CAA0B,iBAA1B;AACD;AACDnC,eAAKmL,eAAL;AACD;AACDnL,aAAKoB,uBAAL,GAA+B4I,OAA/B;AACA;AACD,OAxGD;AAyGA,UAAGjO,kBAAkBC,OAAlB,IAA6BgE,KAAKkF,WAArC,EAAkD;AAChDlF,aAAKgG,iBAAL,CAAuBhG,KAAKiG,iBAA5B;AACD;AACF,KA5LD;AA6LD,GAhhBM;AAkhBPoB,oBAlhBO,gCAkhBc;AACnB,QAAM/G,WAAW,IAAjB;AACA,QAAM8D,UAAU9D,SAAS+D,IAAzB;AACA,QAAM1H,aAAayH,QAAQE,MAA3B;AACA,QAAM8G,mCAAmCzO,WAAWmG,YAAX,CAAwB,oBAAxB,CAAzC;AACA,QAAMuI,2BAA4B,OAAOD,iCAAiCE,SAA1E;;AAEA,QAAMC,OAAOH,gCAAb;AACA9K,aAASiL,IAAT,GAAgBA,IAAhB;;AAEAjL,aAAS2B,iBAAT,GAA6BuJ,YAAY,YAAW;AAClD,UAAI,SAASlL,SAAS8G,oBAAtB,EAA4C;AAC5C9G,eAASG,mBAAT,CAA6BgL,eAA7B,GAA+CF,KAAKE,eAApD;AACD,KAH4B,EAG1BJ,wBAH0B,CAA7B;AAID,GAhiBM;AAkiBPK,qBAliBO,iCAkiBe;AACpB,SAAKtE,oBAAL,GAA4B,IAA5B;AACD,GApiBM;AAsiBPuE,sBAtiBO,kCAsiBgB;AACrB,SAAKvE,oBAAL,GAA4B,KAA5B;AACD,GAxiBM;AA0iBP+D,iBA1iBO,6BA0iBW;AAChB,QAAMnL,OAAO,IAAb;AACA,QAAMrD,aAAaqD,KAAKrD,UAAxB;AACAqD,SAAK4L,eAAL;AACA5L,SAAK+B,kBAAL,GAA0ByJ,YAAYxL,KAAKK,iBAAL,CAAuBkD,IAAvB,CAA4BvD,IAA5B,CAAZ,EAA+CA,KAAKkG,eAApD,CAA1B;AACAlG,SAAKkD,cAAL,CAAoBvH,eAAeC,MAAnC;AACAoE,SAAK0L,mBAAL;AACA,QAAG1L,KAAKiG,iBAAL,CAAuB3B,MAA1B,EAAkC;AAChCtE,WAAKiG,iBAAL,CAAuB3B,MAAvB,CAA8BnB,WAA9B,CAA0CnD,KAAKiG,iBAA/C;AACD;AACF,GApjBM;AAsjBPwE,iBAtjBO,2BAsjBS3L,OAtjBT,EAsjBkB;AACvB,QAAMkB,OAAO,IAAb;AACA,QAAMrD,aAAaqD,KAAKrD,UAAxB;AACA,QAAMkJ,kBAAkB7F,KAAK6F,eAA7B;AACA,QAAMgG,uBAAwBhG,gBAAgB/C,YAAhB,CAA6B,aAA7B,CAA9B;AACA+I,yBAAqBC,cAArB,CAAoChN,OAApC;AACA;AACAkB,SAAKiB,cAAL,CAAoB8K,MAApB,GAA6B,KAA7B;AACA/L,SAAKkF,WAAL,GAAmBnJ,kBAAkBG,aAArC;AACA8D,SAAKgG,iBAAL,CAAuBH,eAAvB;AACD,GAhkBM;AAkkBP+F,iBAlkBO,6BAkkBW;AAChB,QAAMtL,WAAW,IAAjB;AACA,QAAM0L,gBAAgB5P,GAAGoG,WAAH,CAAelC,SAAStD,gBAAxB,CAAtB;AACA,QAAM6J,cAAcvG,SAAS+D,IAAT,CAAcvB,YAAd,CAA2B1G,GAAG0K,QAA9B,CAApB;AACA,QAAImF,iBAAiB7P,GAAGsG,EAAH,CAAMpC,SAASE,cAAT,CAAwBQ,CAA9B,EAAiCV,SAASE,cAAT,CAAwBU,CAAzD,CAArB;AACA8K,kBAAcvJ,WAAd,CAA0BwJ,cAA1B;AACAD,kBAAclJ,YAAd,CAA2B,YAA3B,EAAyCsB,OAAzC,GAAmD9D,SAAS+D,IAA5D;;AAEA/D,aAAS+D,IAAT,CAAc6E,QAAd,CAAuB8C,aAAvB;;AAEAtI,mBAAesI,aAAf,EAA8B,CAA9B;AACA1L,aAASW,cAAT,GAA0B+K,aAA1B;AACA1L,aAASG,mBAAT,GAA+BuL,cAAclJ,YAAd,CAA2B,YAA3B,CAA/B;AACD,GA/kBM;AAilBPoJ,QAjlBO,kBAilBAC,EAjlBA,EAilBI;AACT,QAAMnM,OAAO,IAAb;AACA,QAAMoE,UAAUpE,KAAKqE,IAArB;AACA,QAAM1H,aAAayH,QAAQE,MAA3B;AACA,QAAM8H,mBAAmBzP,WAAW2H,MAApC;AACA,QAAI,QAAQ7I,OAAO4Q,WAAnB,EAAgC;AAC9BrM,WAAKlC,gBAAL,CAAsBsF,MAAtB,GAA+B3H,OAAO4Q,WAAtC;AACD;AACD,QAAI,QAAQrM,KAAKQ,cAAjB,EAAiC;AAC/BR,WAAKpC,iBAAL,CAAuBwF,MAAvB,GAAgCpD,KAAKQ,cAAL,CAAoB9B,EAApD;AACA,UAAMoM,QAAS9K,KAAKQ,cAAL,CAAoBsK,KAApB,GAA4B9K,KAAKQ,cAAL,CAAoBsK,KAAhD,GAAwD,CAAvE;AACA9K,WAAKhC,oBAAL,CAA0BoF,MAA1B,GAAmC0H,KAAnC;AACA,UAAI,QAAQ9K,KAAKS,mBAAjB,EAAsC;AACpCT,aAAKS,mBAAL,CAAyB6L,WAAzB,CAAqCtM,KAAKQ,cAAL,CAAoBqK,KAAzD;AACD;AACF;;AAED,QAAI0B,yBAAyB,EAA7B;AACAvN,WAAOmI,MAAP,CAAcoF,sBAAd,EAAsCvM,KAAKoF,mBAA3C;;AAEA,QAAIoH,2BAA2B,EAA/B;AACAxN,WAAOmI,MAAP,CAAcqF,wBAAd,EAAwCxM,KAAKsF,gBAA7C;;AAEA,QAAImH,uBAAuB,EAA3B;AACAzN,WAAOmI,MAAP,CAAcsF,oBAAd,EAAoCzM,KAAK0F,YAAzC;;AAEA,QAAIgH,yBAAyB,EAA7B;AACA1N,WAAOmI,MAAP,CAAcuF,sBAAd,EAAsC1M,KAAKyF,kBAA3C;;AAEA,SAAK,IAAIrG,CAAT,IAAcY,KAAKmF,yBAAnB,EAA8C;AAC5C,UAAM9F,WAAWC,SAASF,CAAT,CAAjB;AACA,UAAMuN,mBAAmB3M,KAAKmF,yBAAL,CAA+B9F,QAA/B,CAAzB;AACA,UAAMuN,SAASxQ,GAAGsG,EAAH,CACbiK,iBAAiB3L,CADJ,EAEb2L,iBAAiBzL,CAFJ,CAAf;AAID;AACA,UAAG,CAAClB,KAAK2F,aAAL,CAAmBtG,QAAnB,CAAJ,EAAiC;AAC9B,YAAMwN,YAAYzQ,GAAGoG,WAAH,CAAexC,KAAK/B,+BAApB,CAAlB;AACA,YAAM6O,gBAAgBV,iBAAiBpJ,cAAjB,CAAgC,WAAhC,CAAtB;AACA6J,kBAAU7J,cAAV,CAAyB,OAAzB,EAAkCF,YAAlC,CAA+C1G,GAAGyB,KAAlD,EAAyDuF,MAAzD,GAAkE,WAASuJ,iBAAiBjO,EAA1B,GAA6B,WAA/F;AACA8E,uBAAesJ,aAAf,EAA6BD,SAA7B;AACA7M,aAAK2F,aAAL,CAAmBtG,QAAnB,IAA+BwN,SAA/B;AACD;AACD,UAAME,cAAe,CAACJ,iBAAiB7B,KAAlB,GAA0B6B,iBAAiB7B,KAA3C,GAAoD,CAAzE;AACA9K,WAAK2F,aAAL,CAAmBtG,QAAnB,EAA6B2D,cAA7B,CAA4C,uBAA5C,EAAqEF,YAArE,CAAkF1G,GAAGyB,KAArF,EAA4FuF,MAA5F,GAAqG2J,WAArG;AACA,UAAIC,aAAahN,KAAKoF,mBAAL,CAAyB/F,QAAzB,CAAjB;AACA,UAAI,CAAC2N,UAAL,EAAiB;AACfA,qBAAa5Q,GAAGoG,WAAH,CAAexC,KAAKhD,gBAApB,CAAb;AACAgQ,mBAAWlK,YAAX,CAAwB,YAAxB,EAAsCsB,OAAtC,GAAgDA,OAAhD;AACApE,aAAKoF,mBAAL,CAAyB/F,QAAzB,IAAqC2N,UAArC;AACAxJ,uBAAeY,OAAf,EAAwB4I,UAAxB;AACAA,mBAAWvK,WAAX,CAAuBmK,MAAvB;AACAlJ,uBAAesJ,UAAf,EAA2B,CAA3B;AACD;AACD,UAAMC,kCAAkCD,WAAWlK,YAAX,CAAwB,YAAxB,CAAxC;AACAmK,sCAAgCX,WAAhC,CAA4CK,iBAAiB9B,KAA7D;;AAEA,UAAI,QAAQ0B,uBAAuBlN,QAAvB,CAAZ,EAA8C;AAC5C,eAAOkN,uBAAuBlN,QAAvB,CAAP;AACD;AACD,UAAI,KAAKsN,iBAAiB/L,GAAjB,CAAqBC,EAA1B,IAAgC,KAAK8L,iBAAiB/L,GAAjB,CAAqBG,EAA9D,EAAkE;AAChE,YAAMmM,wBAAwBlN,KAAKuL,IAAL,CAAU4B,mBAAV,CAA8BR,iBAAiB/L,GAAjB,CAAqBC,EAAnD,EAAuD8L,iBAAiB/L,GAAjB,CAAqBG,EAA5E,EAAgFf,KAAKuL,IAAL,CAAU6B,WAA1F,CAA9B;AACAJ,mBAAWlK,YAAX,CAAwB,YAAxB,EAAsCuK,oBAAtC,CAA2DH,qBAA3D,EAAkF,KAAlF,CAAwF,mCAAxF;AACD;AACD,UAAMI,SAASlR,GAAGsG,EAAH,CACbsK,WAAWhM,CADE,EAEbgM,WAAW9L,CAFE,CAAf;AAIA,UAAMqM,cAAcX,OAAO3D,GAAP,CAAWqE,MAAX,CAApB;AACA,UAAME,iBAAiBD,YAAYE,GAAZ,EAAvB;AACA,UAAMC,yBAA0Bf,iBAAiB9B,KAAjB,GAAyBsB,EAAzB,GAA8B,GAA9D;AACA,UAAMwB,wBAAyBhB,iBAAiB9B,KAAjB,GAAyBsB,EAAzB,GAA8B,GAA7D;AACA,UAAIqB,iBAAiBG,qBAArB,EAA4C;AAC1CX,mBAAWlK,YAAX,CAAwB,YAAxB,EAAsC2I,eAAtC,GAAwD;AACtD5K,cAAI,CADkD;AAEtDE,cAAI;AAFkD,SAAxD;AAID,OALD,MAKO;AACL,YAAIyM,kBAAkBE,sBAAtB,EAA8C;AAC5CtR,aAAG+N,GAAH,aAAiBwC,iBAAiBjO,EAAlC,kDAAiF8O,cAAjF,oCAA8HE,sBAA9H;AACAV,qBAAWlK,YAAX,CAAwB,YAAxB,EAAsC2I,eAAtC,GAAwD;AACtD5K,gBAAI,CADkD;AAEtDE,gBAAI;AAFkD,WAAxD;AAIA;AACAiM,qBAAWvK,WAAX,CAAuBmK,MAAvB;AACD,SARD,MAQO;AACL;AACA,cAAMgB,gBAAgB;AACpB/M,gBAAI0M,YAAYvM,CAAZ,GAAgBwM,cADA;AAEpBzM,gBAAIwM,YAAYrM,CAAZ,GAAgBsM;AAFA,WAAtB;AAIAR,qBAAWlK,YAAX,CAAwB,YAAxB,EAAsC2I,eAAtC,GAAwDmC,aAAxD;AACD;AACF;AACF;;AAEF;AACC,SAAK,IAAIxO,GAAT,IAAcY,KAAKuF,YAAnB,EAAiC;AAC/B,UAAM5F,sBAAsBL,SAASF,GAAT,CAA5B;AACA,UAAM6L,WAAWjL,KAAKuF,YAAL,CAAkB5F,mBAAlB,CAAjB;AACA,UAAMiN,UAASxQ,GAAGsG,EAAH,CACbuI,SAASjK,CADI,EAEbiK,SAAS/J,CAFI,CAAf;AAIA,UAAI8L,cAAahN,KAAK0F,YAAL,CAAkB/F,mBAAlB,CAAjB;AACA,UAAI,CAACqN,WAAL,EAAiB;AACfA,sBAAa5Q,GAAGoG,WAAH,CAAexC,KAAK9C,UAApB,CAAb;AACA8C,aAAK0F,YAAL,CAAkB/F,mBAAlB,IAAyCqN,WAAzC;AACAxJ,uBAAeY,OAAf,EAAwB4I,WAAxB;AACAA,oBAAWvK,WAAX,CAAuBmK,OAAvB;AACAlJ,uBAAesJ,WAAf,EAA2B,CAA3B;AACA;;;;;;;;;;;AAWD;AACD,UAAI,QAAQP,qBAAqB9M,mBAArB,CAAZ,EAAuD;AACrD,eAAO8M,qBAAqB9M,mBAArB,CAAP;AACD;AAEF;;AAEF;AACC,SAAK,IAAIP,GAAT,IAAcY,KAAKwF,kBAAnB,EAAuC;AACrC,UAAM3F,wBAAwBP,SAASF,GAAT,CAA9B;AACA,UAAM8L,aAAalL,KAAKwF,kBAAL,CAAwB3F,qBAAxB,CAAnB;AACA,UAAM+M,WAASxQ,GAAGsG,EAAH,CACbwI,WAAWlK,CADE,EAEbkK,WAAWhK,CAFE,CAAf;AAIA,UAAI8L,eAAahN,KAAKyF,kBAAL,CAAwB5F,qBAAxB,CAAjB;AACA,UAAI,CAACmN,YAAL,EAAiB;AACfA,uBAAa5Q,GAAGoG,WAAH,CAAexC,KAAK9B,gBAApB,CAAb;AACA8B,aAAKyF,kBAAL,CAAwB5F,qBAAxB,IAAiDmN,YAAjD;AACAxJ,uBAAeY,OAAf,EAAwB4I,YAAxB;AACAA,qBAAWvK,WAAX,CAAuBmK,QAAvB;AACAlJ,uBAAesJ,YAAf,EAA2B,CAA3B;AACD,OAND,MAMM;AACJA,qBAAWvK,WAAX,CAAuBmK,QAAvB;AACD;AACD,UAAI,QAAQF,uBAAuB7M,qBAAvB,CAAZ,EAA2D;AACzD,eAAO6M,uBAAuB7M,qBAAvB,CAAP;AACD;;AAED,UAAI,IAAImN,aAAWa,yBAAX,EAAR,EAAgD;AAC9C;AACA;AACD;AACD,UAAMP,UAASlR,GAAGsG,EAAH,CACbsK,aAAWhM,CADE,EAEbgM,aAAW9L,CAFE,CAAf;AAIA,UAAMqM,eAAcX,SAAO3D,GAAP,CAAWqE,OAAX,CAApB;AACA,UAAMQ,kBAAkB3B,EAAxB,CA9BqC,CA8BT;AAC5Ba,mBAAWe,SAAX,CAAqB3R,GAAG4R,MAAH,CAAUF,eAAV,EAA2BlB,QAA3B,CAArB;AACD;;AAEF;AACC,SAAK,IAAIxN,GAAT,IAAcY,KAAKqF,gBAAnB,EAAqC;AACnC,UAAM5F,0BAA0BH,SAASF,GAAT,CAAhC;AACA,UAAM4L,eAAehL,KAAKqF,gBAAL,CAAsB5F,uBAAtB,CAArB;AACA,UAAMmN,WAASxQ,GAAGsG,EAAH,CACbsI,aAAahK,CADA,EAEbgK,aAAa9J,CAFA,CAAf;AAIA,UAAI8L,eAAahN,KAAKsF,gBAAL,CAAsB7F,uBAAtB,CAAjB;AACA,UAAI,CAACuN,YAAL,EAAiB;AACfA,uBAAa5Q,GAAGoG,WAAH,CAAexC,KAAK/C,cAApB,CAAb;AACA+C,aAAKsF,gBAAL,CAAsB7F,uBAAtB,IAAiDuN,YAAjD;AACAxJ,uBAAeY,OAAf,EAAwB4I,YAAxB;AACAA,qBAAWvK,WAAX,CAAuBmK,QAAvB;AACAlJ,uBAAesJ,YAAf,EAA2B,CAA3B;;AAEA;;;;;;;;;;;AAWD;;AAED,UAAI,QAAQR,yBAAyB/M,uBAAzB,CAAZ,EAA+D;AAC7D,eAAO+M,yBAAyB/M,uBAAzB,CAAP;AACD;AACD,UAAI,IAAIuN,aAAWa,yBAAX,EAAR,EAAgD;AAC9C;AACA;AACD;AACD,UAAMP,WAASlR,GAAGsG,EAAH,CACbsK,aAAWhM,CADE,EAEbgM,aAAW9L,CAFE,CAAf;AAIA,UAAMqM,gBAAcX,SAAO3D,GAAP,CAAWqE,QAAX,CAApB;AACA,UAAMQ,mBAAkB3B,EAAxB,CAxCmC,CAwCP;AAC5Ba,mBAAWe,SAAX,CAAqB3R,GAAG4R,MAAH,CAAUF,gBAAV,EAA2BlB,QAA3B,CAArB;AACD;;AAED;AACA,SAAK,IAAIxN,IAAT,IAAcmN,sBAAd,EAAsC;AACpC,UAAMlN,YAAWC,SAASF,IAAT,CAAjB;AACAmN,6BAAuBnN,IAAvB,EAA0BkF,MAA1B,CAAiCnB,WAAjC,CAA6CoJ,uBAAuBnN,IAAvB,CAA7C;AACA,aAAOY,KAAKoF,mBAAL,CAAyB/F,SAAzB,CAAP;AACD;;AAED;AACA,SAAK,IAAID,IAAT,IAAcoN,wBAAd,EAAwC;AACtC,UAAM/M,2BAA0BH,SAASF,IAAT,CAAhC;AACAoN,+BAAyBpN,IAAzB,EAA4BkF,MAA5B,CAAmCnB,WAAnC,CAA+CqJ,yBAAyBpN,IAAzB,CAA/C;AACA,aAAOY,KAAKsF,gBAAL,CAAsB7F,wBAAtB,CAAP;AACD;;AAED;AACA,SAAK,IAAIL,IAAT,IAAcqN,oBAAd,EAAoC;AAClC,UAAM9M,uBAAsBL,SAASF,IAAT,CAA5B;AACAqN,2BAAqBrN,IAArB,EAAwBkF,MAAxB,CAA+BnB,WAA/B,CAA2CsJ,qBAAqBrN,IAArB,CAA3C;AACA,aAAOY,KAAK0F,YAAL,CAAkB/F,oBAAlB,CAAP;AACD;;AAED;AACA,SAAK,IAAIP,IAAT,IAAcsN,sBAAd,EAAsC;AACpC,UAAM7M,yBAAwBP,SAASF,IAAT,CAA9B;AACAsN,6BAAuBtN,IAAvB,EAA0BkF,MAA1B,CAAiCnB,WAAjC,CAA6CuJ,uBAAuBtN,IAAvB,CAA7C;AACA,aAAOY,KAAKyF,kBAAL,CAAwB5F,sBAAxB,CAAP;AACD;AACF,GA/zBM;AAi0BPqD,gBAj0BO,0BAi0BQ+K,CAj0BR,EAi0BW;AAChB,QAAMjO,OAAO,IAAb;AACAA,SAAKsC,KAAL,GAAa2L,CAAb;AACD,GAp0BM;AAs0BP/J,QAt0BO,kBAs0BAgK,OAt0BA,CAs0BQ,qFAt0BR,EAs0BgGrK,yDAt0BhG,EAs0B2J;AAChK,QAAMsK,iBAAiB,SAAjBA,cAAiB,GAAW;AAChC,UAAID,OAAJ,EAAa;AACX;;;AAGAzS,eAAO2S,iBAAP;AACD;AACD,UAAI,QAAQvK,yDAAZ,EAAuE;AACrEpI,eAAO+K,kDAAP;AACD;AACDpK,SAAG4K,GAAH,CAAOC,YAAP,CAAoBoH,UAApB,CAA+B,YAA/B;AACAjS,SAAGmI,QAAH,CAAY+J,SAAZ,CAAsB,OAAtB;AACD,KAZD;;AAcA,QAAMtO,OAAO,IAAb;AACA,QAAI,QAAQ5D,GAAG4K,GAAH,CAAOC,YAAP,CAAoBC,UAAhC,EAA4C;AAC1C,UAAMA,aAAatF,KAAKmF,KAAL,CAAW3K,GAAG4K,GAAH,CAAOC,YAAP,CAAoBC,UAA/B,CAAnB;AACA,UAAMqH,iBAAiB;AACrBC,sBAActH,WAAWsH;AADJ,OAAvB;AAGA,UAAI;AACFC,qBAAaC,IAAb,CAAkB;AAChBC,eAAKC,eAAeC,QAAf,GAA0B,KAA1B,GAAkCD,eAAeE,IAAjD,GAAwD,GAAxD,GAA8DF,eAAeG,IAA7E,GAAoFC,UAAUC,UAAV,CAAqBC,GAAzG,GAA+GF,UAAUC,UAAV,CAAqBE,MAApI,GAA6IH,UAAUC,UAAV,CAAqBG,OAAlK,GAA4KJ,UAAUC,UAAV,CAAqBI,cAAjM,GAAkNL,UAAUC,UAAV,CAAqBK,MAD5N;AAEhB1S,gBAAM,MAFU;AAGhB8E,gBAAM6M,cAHU;AAIhBgB,mBAAS,iBAASC,GAAT,EAAc;AACrB,gBAAIA,IAAIC,GAAJ,IAAWT,UAAUU,QAAV,CAAmBC,EAAlC,EAAsC;AACpCvT,iBAAG+N,GAAH,qBAAyBqF,GAAzB;AACD;AACDrB;AACD,WATe;AAUhByB,iBAAO,eAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8B;AACnC5B;AACD,WAZe;AAahB6B,mBAAS,mBAAW;AAClB7B;AACD;AAfe,SAAlB;AAiBD,OAlBD,CAkBE,OAAO8B,CAAP,EAAU,CAAE,CAlBd,SAkBuB;AACrB;AACA9B;AACD;AACF,KA3BD,MA2BO;AACLA;AACD;AACF,GAp3BM;AAs3BP+B,iBAt3BO,2BAs3BSC,GAt3BT,EAs3Bc;AACnB,QAAMnQ,OAAO,IAAb;AACAA,SAAKgG,iBAAL,CAAuBhG,KAAK4F,iBAA5B;AACD,GAz3BM;AA23BPwK,+BA33BO,2CA23ByB;AAC9B,QAAMpQ,OAAO,IAAb;AACAA,SAAKkD,cAAL,CAAoBvH,eAAeC,MAAnC;AACA,QAAMe,aAAaqD,KAAKrD,UAAxB;AACAA,eAAWwG,WAAX,CAAuBnD,KAAK4F,iBAA5B;AACA5F,SAAK0L,mBAAL;AACD,GAj4BM;AAm4BP2E,kBAn4BO,4BAm4BUF,GAn4BV,EAm4BeG,EAn4Bf,EAm4BmB;AACxB,QAAMtQ,OAAO,IAAb;AACA,QAAGsQ,EAAH,EAAM;AACJA;AACD;AACD5J,gCAA4B1G,KAAK2G,mBAAjC;AACD,GAz4BM;AA24BPX,mBA34BO,6BA24BWuK,UA34BX,EA24BuB;AAC5B,QAAMvQ,OAAO,IAAb;AACAA,SAAK2L,oBAAL;AACA3L,SAAKkD,cAAL,CAAoBvH,eAAeG,mBAAnC;AACA0H,mBAAexD,KAAKyD,mBAApB,EAAyC8M,UAAzC;AACA7M,mBAAe6M,UAAf,EAA2B,EAA3B;AACD;AAj5BM,CAAT","file":"Map.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const i18n = require('LanguageData');\r\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\r\n\r\nwindow.ALL_MAP_STATES = {\r\n  VISUAL: 0, // For free dragging & zooming.\r\n  EDITING_BELONGING: 1,\r\n  SHOWING_MODAL_POPUP: 2,\r\n};\r\n\r\nwindow.ALL_BATTLE_STATES = {\r\n  WAITING: 0,\r\n  IN_BATTLE: 1,\r\n  IN_SETTLEMENT: 2,\r\n  IN_DISMISSAL: 3,\r\n};\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: { \r\n    useDiffFrameAlgo: {\r\n      default: true \r\n    },\r\n    canvasNode: {\r\n      type: cc.Node,\r\n      default: null,\r\n    },\r\n    tiledAnimPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    selfPlayerPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    treasurePrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    trapPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    npcPlayerPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    type2NpcPlayerPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    barrierPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    shelterPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    shelterZReducerPrefab: {\r\n      type: cc.Prefab,\r\n      default: null,\r\n    },\r\n    keyboardInputControllerNode: {\r\n      type: cc.Node,\r\n      default: null\r\n    },\r\n    joystickInputControllerNode: {\r\n      type: cc.Node,\r\n      default: null\r\n    },\r\n    confirmLogoutPrefab: {\r\n      type: cc.Prefab,\r\n      default: null\r\n    },\r\n    simplePressToGoDialogPrefab: {\r\n      type: cc.Prefab,\r\n      default: null\r\n    },\r\n    selfPlayerIdLabel: {\r\n      type: cc.Label,\r\n      default: null\r\n    },\r\n    boundRoomIdLabel: {\r\n      type: cc.Label,\r\n      default: null\r\n    },\r\n    countdownLabel: {\r\n      type: cc.Label,\r\n      default: null\r\n    },\r\n    selfPlayerScoreLabel: {\r\n      type: cc.Label,\r\n      default: null\r\n    },\r\n    otherPlayerScoreIndicatorPrefab: {\r\n      type:cc.Prefab,\r\n      default: null\r\n    },\r\n    trapBulletPrefab: {\r\n      type:cc.Prefab,\r\n      default: null\r\n    },\r\n    resultPanelPrefab: {\r\n      type:cc.Prefab,\r\n      default: null\r\n    },\r\n    gameRulePrefab: {\r\n      type:cc.Prefab,\r\n      default: null\r\n    },\r\n    findingPlayerPrefab: {\r\n      type:cc.Prefab,\r\n      default: null\r\n    },\r\n  },\r\n  \r\n  _generateNewFullFrame: function(refFullFrame, diffFrame) {\r\n    let newFullFrame = {\r\n      id: diffFrame.id,\r\n      treasures: refFullFrame.treasures,\r\n      traps: refFullFrame.traps,\r\n      bullets: refFullFrame.bullets,\r\n      players: refFullFrame.players,\r\n    };\r\n\r\n    const players = diffFrame.players;\r\n    const playersLocalIdStrList = Object.keys(players);\r\n    for (let i = 0; i < playersLocalIdStrList.length; ++i) {\r\n      const k = playersLocalIdStrList[i];\r\n      const playerId = parseInt(k);\r\n      if (true == diffFrame.players[playerId].removed) {\r\n        // cc.log(`Player id == ${playerId} is removed.`);\r\n        delete newFullFrame.players[playerId];\r\n      } else {\r\n        newFullFrame.players[playerId] = diffFrame.players[playerId];  \r\n      }  \r\n    }\r\n    \r\n    const treasures = diffFrame.treasures;\r\n    const treasuresLocalIdStrList = Object.keys(treasures);\r\n    for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\r\n      const k = treasuresLocalIdStrList[i];\r\n      const treasureLocalIdInBattle = parseInt(k);\r\n      if (true == diffFrame.treasures[treasureLocalIdInBattle].removed) {\r\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\r\n        delete newFullFrame.treasures[treasureLocalIdInBattle];\r\n      } else {\r\n        newFullFrame.treasures[treasureLocalIdInBattle] = diffFrame.treasures[treasureLocalIdInBattle];  \r\n      }  \r\n    }\r\n\r\n    const traps = diffFrame.traps;\r\n    const trapsLocalIdStrList = Object.keys(traps);\r\n    for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\r\n      const k = trapsLocalIdStrList[i];\r\n      const trapLocalIdInBattle = parseInt(k);\r\n      if (true == diffFrame.traps[trapLocalIdInBattle].removed) {\r\n        // cc.log(`Trap with localIdInBattle == ${trapLocalIdInBattle} is removed.`);\r\n        delete newFullFrame.traps[trapLocalIdInBattle];\r\n      } else {\r\n        newFullFrame.traps[trapLocalIdInBattle] = diffFrame.traps[trapLocalIdInBattle];  \r\n      }\r\n    }\r\n\r\n    const bullets = diffFrame.bullets;\r\n    const bulletsLocalIdStrList = Object.keys(bullets);\r\n    for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\r\n      const k = bulletsLocalIdStrList[i];\r\n      const bulletLocalIdInBattle = parseInt(k);\r\n      if (true == diffFrame.bullets[bulletLocalIdInBattle].removed) {\r\n        // cc.log(`Bullet with localIdInBattle == ${bulletLocalIdInBattle} is removed.`);\r\n        delete newFullFrame.bullets[bulletLocalIdInBattle];\r\n      } else {\r\n        newFullFrame.bullets[bulletLocalIdInBattle] = diffFrame.bullets[bulletLocalIdInBattle];  \r\n      }\r\n    }\r\n\r\n    return newFullFrame;\r\n  },\r\n\r\n  _dumpToFullFrameCache: function(fullFrame) {\r\n    const self = this;\r\n    while (self.recentFrameCacheCurrentSize >= self.recentFrameCacheMaxCount) {\r\n      // Trick here: never evict the \"Zero-th Frame\" for resyncing!\r\n      const toDelFrameId = Object.keys(self.recentFrameCache)[1]; \r\n      // cc.log(\"toDelFrameId is \" + toDelFrameId + \".\");\r\n      delete self.recentFrameCache[toDelFrameId];\r\n      --self.recentFrameCacheCurrentSize;\r\n    }\r\n    self.recentFrameCache[fullFrame.id] = fullFrame;\r\n    ++self.recentFrameCacheCurrentSize;\r\n  },\r\n\r\n  _onPerUpsyncFrame() {\r\n    const instance = this;\r\n    if (instance.resyncing) return;\r\n    if (\r\n      null == instance.selfPlayerInfo ||\r\n      null == instance.selfPlayerScriptIns ||\r\n      null == instance.selfPlayerScriptIns.scheduledDirection\r\n      ) return;\r\n    const upsyncFrameData = {\r\n      id: instance.selfPlayerInfo.id,\r\n      /**\r\n      * WARNING\r\n      *\r\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\r\n      */\r\n      dir: {\r\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\r\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\r\n      },\r\n      x: parseFloat(instance.selfPlayerNode.x),\r\n      y: parseFloat(instance.selfPlayerNode.y),\r\n      ackingFrameId: instance.lastRoomDownsyncFrameId,\r\n    };\r\n    const wrapped = {\r\n      msgId: Date.now(),\r\n      act: \"PlayerUpsyncCmd\",\r\n      data: upsyncFrameData,\r\n    }\r\n    window.sendSafely(JSON.stringify(wrapped));\r\n  },\r\n\r\n  onDestroy() {\r\n    const self = this;\r\n    if (self.upsyncLoopInterval) {\r\n      clearInterval(self.upsyncLoopInterval);\r\n    }\r\n    if (self.inputControlTimer) {\r\n      clearInterval(self.inputControlTimer)\r\n    }\r\n  },\r\n\r\n  _lazilyTriggerResync() {\r\n    if (true == this.resyncing) return; \r\n    this.resyncing = false;\r\n    this.popupSimplePressToGo(\"Resyncing your battle, please wait...\");\r\n  },\r\n\r\n  _onResyncCompleted() {\r\n    if (false == this.resyncing) return; \r\n    this.resyncing = true;\r\n  },\r\n\r\n  popupSimplePressToGo(labelString) {\r\n    const self = this;\r\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\r\n\r\n    const canvasNode = self.canvasNode;\r\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\r\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\r\n    simplePressToGoDialogNode.setScale(1 / canvasNode.getScale());\r\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\r\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\r\n    const postDismissalByYes = () => {\r\n      self.transitToState(ALL_MAP_STATES.VISUAL);\r\n      canvasNode.removeChild(simplePressToGoDialogNode);\r\n    }\r\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\r\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\r\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\r\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\r\n    safelyAddChild(self.widgetsAboveAllNode, simplePressToGoDialogNode);\r\n    setLocalZOrder(simplePressToGoDialogNode, 20);\r\n  },\r\n\r\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\r\n    const millisToGo = 3000;\r\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s will logout in %s seconds.\", labelString, millisToGo / 1000));\r\n    setTimeout(() => {\r\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\r\n    }, millisToGo);\r\n },\r\n\r\n  onLoad() {\r\n    const self = this;\r\n    self.resyncing = false;\r\n    self.lastRoomDownsyncFrameId = 0;\r\n\r\n    self.recentFrameCache = {};\r\n    self.recentFrameCacheCurrentSize = 0;\r\n    self.recentFrameCacheMaxCount = 2048;\r\n\r\n    const mapNode = self.node;\r\n    const canvasNode = mapNode.parent;\r\n    cc.director.getCollisionManager().enabled = true;\r\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\r\n\r\n    self.mainCameraNode = canvasNode.getChildByName(\"Main Camera\");\r\n    self.mainCamera = self.mainCameraNode.getComponent(cc.Camera);\r\n    for (let child of self.mainCameraNode.children) {\r\n      child.setScale(1/self.mainCamera.zoomRatio); \r\n    } \r\n    self.widgetsAboveAllNode = self.mainCameraNode.getChildByName(\"WidgetsAboveAll\"); \r\n\r\n    self.selfPlayerNode = null;\r\n    self.selfPlayerScriptIns = null;\r\n    self.selfPlayerInfo = null;\r\n    self.upsyncLoopInterval = null;\r\n    self.transitToState(ALL_MAP_STATES.VISUAL);\r\n\r\n    self.battleState = ALL_BATTLE_STATES.WAITING;\r\n    self.otherPlayerCachedDataDict = {};\r\n    self.otherPlayerNodeDict = {};\r\n    self.treasureInfoDict = {};\r\n    self.treasureNodeDict = {};\r\n    self.trapInfoDict = {};\r\n    self.trapBulletInfoDict = {};\r\n    self.trapBulletNodeDict = {};\r\n    self.trapNodeDict = {};\r\n    self.scoreInfoDict = {};\r\n\r\n    /** init confirmLogoutNode started */\r\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\r\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\r\n    /** init confirmLogoutNode ended */\r\n\r\n    /** init resultPanelNode started */\r\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\r\n    /** init resultPanelNode ended */\r\n\r\n    /** init gameRuleNode started */\r\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\r\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\r\n    self.gameRuleScriptIns.mapNode = self.node;\r\n    self.showPopopInCanvas(self.gameRuleNode);\r\n    /** init resultPanelNode ended */\r\n\r\n    /** init findingPlayer started */\r\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\r\n    /** init findingPlayerNode ended */\r\n\r\n    self.clientUpsyncFps = 20;\r\n    self.upsyncLoopInterval = null;\r\n\r\n    window.reconnectWSWithoutRoomId = function() {\r\n      return  new Promise((resolve,reject) => {\r\n      if (window.clientSessionPingInterval) {\r\n        clearInterval(clientSessionPingInterval);\r\n      }\r\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage()\r\n      return resolve();\r\n      })\r\n      .then(() =>{\r\n        this.initPersistentSessionClient(this.initAfterWSConncted);\r\n      });\r\n    }\r\n\r\n    window.handleClientSessionCloseOrError = function() {\r\n      if(!self.battleState)\r\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\r\n    };\r\n\r\n    self.initAfterWSConncted = () => {\r\n      self.transitToState(ALL_MAP_STATES.VISUAL);\r\n      const tiledMapIns = self.node.getComponent(cc.TiledMap);\r\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\r\n      Object.assign(self.selfPlayerInfo, {\r\n        id: self.selfPlayerInfo.playerId\r\n      });\r\n      this._inputControlEnabled = false;\r\n      self.setupInputControls();\r\n\r\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\r\n      for (let frameAnim of boundaryObjs.frameAnimations) {\r\n        const animNode = cc.instantiate(self.tiledAnimPrefab);\r\n        const anim = animNode.getComponent(cc.Animation);\r\n        animNode.setPosition(frameAnim.posInMapNode);\r\n        animNode.width = frameAnim.sizeInMapNode.width;\r\n        animNode.height = frameAnim.sizeInMapNode.height;\r\n        animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\r\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\r\n        safelyAddChild(self.node, animNode);\r\n        setLocalZOrder(animNode, 5);\r\n        anim.addClip(frameAnim.animationClip, \"default\");\r\n        anim.play(\"default\");\r\n      }\r\n\r\n      self.barrierColliders = [];\r\n      for (let boundaryObj of boundaryObjs.barriers) {\r\n        const newBarrier = cc.instantiate(self.barrierPrefab);\r\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\r\n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\r\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\r\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\r\n        newBarrierColliderIns.points = [];\r\n        for (let p of boundaryObj) {\r\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\r\n        }\r\n        self.barrierColliders.push(newBarrierColliderIns);\r\n        self.node.addChild(newBarrier);\r\n      }\r\n\r\n      const allLayers = tiledMapIns.getLayers();\r\n      for (let layer of allLayers) {\r\n        const layerType = layer.getProperty(\"type\");\r\n        switch (layerType) {\r\n          case \"normal\":\r\n            setLocalZOrder(layer.node, 0);\r\n            break;\r\n          case \"barrier_and_shelter\":\r\n            setLocalZOrder(layer.node, 3);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      const allObjectGroups = tiledMapIns.getObjectGroups();\r\n      for (let objectGroup of allObjectGroups) {\r\n        const objectGroupType = objectGroup.getProperty(\"type\");\r\n        switch (objectGroupType) {\r\n          case \"barrier_and_shelter\":\r\n            setLocalZOrder(objectGroup.node, 3);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\r\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\r\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\r\n        newShelter.setPosition(newBoundaryOffsetInMapNode);\r\n        newShelter.setAnchorPoint(cc.v2(0, 0));\r\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\r\n        newShelterColliderIns.points = [];\r\n        for (let p of boundaryObj) {\r\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\r\n        }\r\n        self.node.addChild(newShelter);\r\n      }\r\n\r\n      window.handleRoomDownsyncFrame = function(diffFrame) {\r\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\r\n        const frameId = diffFrame.id;\r\n        if (frameId <= self.lastRoomDownsyncFrameId) {\r\n          // Log the obsolete frames?\r\n          return;\r\n        }\r\n        const refFrameId = diffFrame.refFrameId;\r\n        const isInitiatingFrame = (0 >= self.recentFrameCacheCurrentSize || 0 == refFrameId); \r\n        if (refFrameId % 60 == 0) {\r\n          cc.log(`${JSON.stringify(diffFrame)}`);\r\n        }\r\n        const cachedFullFrame = self.recentFrameCache[refFrameId];\r\n        if (!isInitiatingFrame && self.useDiffFrameAlgo && null == cachedFullFrame) {\r\n          this._lazilyTriggerResync();\r\n          // Later incoming diffFrames will all suffice that `0 < self.recentFrameCacheCurrentSize && null == cachedFullFrame`, until `this._onResyncCompleted` is successfully invoked.\r\n          return;\r\n        } \r\n        \r\n        if (isInitiatingFrame && 0 == refFrameId) {\r\n          // Reaching here implies that you've received the resync frame.\r\n          this._onResyncCompleted();\r\n        }\r\n        let countdownNanos = diffFrame.countdownNanos;\r\n        if (countdownNanos < 0) countdownNanos = 0;\r\n        const countdownSeconds = parseInt(countdownNanos / 1000000000);\r\n        if (isNaN(countdownSeconds)) {\r\n          cc.log(`countdownSeconds is NaN for countdownNanos == ${countdownNanos}.`);\r\n        }\r\n        self.countdownLabel.string = countdownSeconds;\r\n        const roomDownsyncFrame = (\r\n          (isInitiatingFrame || !self.useDiffFrameAlgo)\r\n          ?\r\n          diffFrame    \r\n          :\r\n          self._generateNewFullFrame(cachedFullFrame, diffFrame) \r\n        ); \r\n        if (countdownNanos <= 0) {\r\n          self.onBattleStopped(roomDownsyncFrame.players);\r\n          return;\r\n        }\r\n        self._dumpToFullFrameCache(roomDownsyncFrame);\r\n        const sentAt = roomDownsyncFrame.sentAt;\r\n        const players = roomDownsyncFrame.players;\r\n        const playerIdStrList = Object.keys(players);\r\n        self.otherPlayerCachedDataDict = {};\r\n        for (let i = 0; i < playerIdStrList.length; ++i) {\r\n          const k = playerIdStrList[i];\r\n          const playerId = parseInt(k);\r\n          if (playerId == self.selfPlayerInfo.id) {\r\n            const immediateSelfPlayerInfo = players[k];\r\n            Object.assign(self.selfPlayerInfo, {\r\n              x: immediateSelfPlayerInfo.x,\r\n              y: immediateSelfPlayerInfo.y,\r\n              speed: immediateSelfPlayerInfo.speed,\r\n              battleState: immediateSelfPlayerInfo.battleState,\r\n              score: immediateSelfPlayerInfo.score,\r\n            });\r\n            continue;\r\n          }\r\n          const anotherPlayer = players[k];\r\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\r\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\r\n        }\r\n        self.treasureInfoDict = {};\r\n        const treasures = roomDownsyncFrame.treasures;\r\n        const treasuresLocalIdStrList = Object.keys(treasures);\r\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\r\n          const k = treasuresLocalIdStrList[i];\r\n          const treasureLocalIdInBattle = parseInt(k);\r\n          const treasureInfo = treasures[k];\r\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\r\n        }\r\n\r\n        self.trapInfoDict = {};\r\n        const traps = roomDownsyncFrame.traps;\r\n        const trapsLocalIdStrList = Object.keys(traps);\r\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\r\n          const k = trapsLocalIdStrList[i];\r\n          const trapLocalIdInBattle = parseInt(k);\r\n          const trapInfo = traps[k];\r\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\r\n        }\r\n\r\n        self.trapBulletInfoDict = {};\r\n        const bullets = roomDownsyncFrame.bullets;\r\n        const bulletsLocalIdStrList = Object.keys(bullets);\r\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\r\n          const k = bulletsLocalIdStrList[i];\r\n          const bulletLocalIdInBattle = parseInt(k);\r\n          const bulletInfo = bullets[k];\r\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\r\n        }\r\n\r\n        if (0 == self.lastRoomDownsyncFrameId) {\r\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\r\n          if (1 == frameId) {\r\n            // No need to prompt upon rejoined.\r\n            self.popupSimplePressToGo(\"Battle started!\");\r\n          }\r\n          self.onBattleStarted();\r\n        }\r\n        self.lastRoomDownsyncFrameId = frameId;\r\n        // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\r\n      };\r\n      if(ALL_BATTLE_STATES.WAITING == self.battleState) {\r\n        self.showPopopInCanvas(self.findingPlayerNode);\r\n      }\r\n    }\r\n  },\r\n\r\n  setupInputControls() {\r\n    const instance = this;\r\n    const mapNode = instance.node;\r\n    const canvasNode = mapNode.parent;\r\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\r\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\r\n\r\n    const ctrl = joystickInputControllerScriptIns;\r\n    instance.ctrl = ctrl;\r\n\r\n    instance.inputControlTimer = setInterval(function() {\r\n      if (false == instance._inputControlEnabled) return;\r\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\r\n    }, inputControlPollerMillis);\r\n  },\r\n\r\n  enableInputControls() {\r\n    this._inputControlEnabled = true;\r\n  },\r\n\r\n  disableInputControls() {\r\n    this._inputControlEnabled = false;\r\n  },\r\n\r\n  onBattleStarted() {\r\n    const self = this;\r\n    const canvasNode = self.canvasNode;\r\n    self.spawnSelfPlayer();\r\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\r\n    self.transitToState(ALL_MAP_STATES.VISUAL);\r\n    self.enableInputControls();\r\n    if(self.findingPlayerNode.parent) {\r\n      self.findingPlayerNode.parent.removeChild(self.findingPlayerNode);\r\n    }\r\n  },\r\n\r\n  onBattleStopped(players) {\r\n    const self = this;\r\n    const canvasNode = self.canvasNode;\r\n    const resultPanelNode = self.resultPanelNode;\r\n    const resultPanelScriptIns =  resultPanelNode.getComponent(\"ResultPanel\");\r\n    resultPanelScriptIns.showPlayerInfo(players);\r\n    // Such that it doesn't execute \"update(dt)\" anymore. \r\n    self.selfPlayerNode.active = false;\r\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\r\n    self.showPopopInCanvas(resultPanelNode);\r\n  },\r\n\r\n  spawnSelfPlayer() {\r\n    const instance = this;\r\n    const newPlayerNode = cc.instantiate(instance.selfPlayerPrefab);\r\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\r\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\r\n    newPlayerNode.setPosition(toStartWithPos);\r\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\r\n\r\n    instance.node.addChild(newPlayerNode);\r\n\r\n    setLocalZOrder(newPlayerNode, 5);\r\n    instance.selfPlayerNode = newPlayerNode;\r\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\r\n  },\r\n\r\n  update(dt) {\r\n    const self = this;\r\n    const mapNode = self.node;\r\n    const canvasNode = mapNode.parent;\r\n    const canvasParentNode = canvasNode.parent;\r\n    if (null != window.boundRoomId) {\r\n      self.boundRoomIdLabel.string = window.boundRoomId;\r\n    }\r\n    if (null != self.selfPlayerInfo) {\r\n      self.selfPlayerIdLabel.string = self.selfPlayerInfo.id;\r\n      const score  = self.selfPlayerInfo.score ? self.selfPlayerInfo.score : 0 \r\n      self.selfPlayerScoreLabel.string = score;\r\n      if (null != self.selfPlayerScriptIns) {\r\n        self.selfPlayerScriptIns.updateSpeed(self.selfPlayerInfo.speed);\r\n      }\r\n    }\r\n\r\n    let toRemovePlayerNodeDict = {};\r\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\r\n\r\n    let toRemoveTreasureNodeDict = {};\r\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\r\n\r\n    let toRemoveTrapNodeDict = {};\r\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\r\n\r\n    let toRemoveBulletNodeDict = {};\r\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\r\n\r\n    for (let k in self.otherPlayerCachedDataDict) {\r\n      const playerId = parseInt(k);\r\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\r\n      const newPos = cc.v2(\r\n        cachedPlayerData.x,\r\n        cachedPlayerData.y\r\n      );\r\n     //显示分数\r\n     if(!self.scoreInfoDict[playerId]){\r\n        const scoreNode = cc.instantiate(self.otherPlayerScoreIndicatorPrefab);  \r\n        const debugInfoNode = canvasParentNode.getChildByName(\"DebugInfo\");\r\n        scoreNode.getChildByName(\"title\").getComponent(cc.Label).string = \"player\"+cachedPlayerData.id+\"'s score:\";\r\n        safelyAddChild(debugInfoNode,scoreNode);\r\n        self.scoreInfoDict[playerId] = scoreNode;\r\n      }\r\n      const playerScore  = !cachedPlayerData.score ? cachedPlayerData.score  : 0 \r\n      self.scoreInfoDict[playerId].getChildByName(\"OtherPlayerScoreLabel\").getComponent(cc.Label).string = playerScore;\r\n      let targetNode = self.otherPlayerNodeDict[playerId];\r\n      if (!targetNode) {\r\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\r\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\r\n        self.otherPlayerNodeDict[playerId] = targetNode;\r\n        safelyAddChild(mapNode, targetNode);\r\n        targetNode.setPosition(newPos);\r\n        setLocalZOrder(targetNode, 5);\r\n      }\r\n      const aControlledOtherPlayerScriptIns = targetNode.getComponent(\"SelfPlayer\"); \r\n      aControlledOtherPlayerScriptIns.updateSpeed(cachedPlayerData.speed);\r\n\r\n      if (null != toRemovePlayerNodeDict[playerId]) {\r\n        delete toRemovePlayerNodeDict[playerId];\r\n      }\r\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\r\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\r\n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\r\n      }\r\n      const oldPos = cc.v2(\r\n        targetNode.x,\r\n        targetNode.y\r\n      );\r\n      const toMoveByVec = newPos.sub(oldPos);\r\n      const toMoveByVecMag = toMoveByVec.mag();\r\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\r\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\r\n      if (toMoveByVecMag < notToMoveDisThreshold) {\r\n        targetNode.getComponent(\"SelfPlayer\").activeDirection = {\r\n          dx: 0,\r\n          dy: 0\r\n        };\r\n      } else {\r\n        if (toMoveByVecMag >= toTeleportDisThreshold) {\r\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\r\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = {\r\n            dx: 0,\r\n            dy: 0\r\n          };\r\n          // TODO: Use `cc.Action`?\r\n          targetNode.setPosition(newPos);\r\n        } else {\r\n          // The common case which is suitable for interpolation.\r\n          const normalizedDir = {\r\n            dx: toMoveByVec.x / toMoveByVecMag,\r\n            dy: toMoveByVec.y / toMoveByVecMag,\r\n          };\r\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = normalizedDir;\r\n        }\r\n      }\r\n    }\r\n\r\n   // 更新陷阱显示 \r\n    for (let k in self.trapInfoDict) {\r\n      const trapLocalIdInBattle = parseInt(k);\r\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\r\n      const newPos = cc.v2(\r\n        trapInfo.x,\r\n        trapInfo.y\r\n      );\r\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\r\n      if (!targetNode) {\r\n        targetNode = cc.instantiate(self.trapPrefab);\r\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\r\n        safelyAddChild(mapNode, targetNode);\r\n        targetNode.setPosition(newPos);\r\n        setLocalZOrder(targetNode, 5);\r\n        /*\r\n        //初始化trap的标记\r\n        const pickupBoundary = trapInfo.pickupBoundary;\r\n        const anchor = pickupBoundary.anchor; \r\n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\r\n        newColliderIns.points = [];\r\n        for (let point of pickupBoundary.points) {\r\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\r\n          newColliderIns.points.push(p);\r\n        }\r\n        */\r\n      }\r\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\r\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\r\n      }\r\n      \r\n    }\r\n\r\n   // 更新bullet显示 \r\n    for (let k in self.trapBulletInfoDict) {\r\n      const bulletLocalIdInBattle = parseInt(k);\r\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\r\n      const newPos = cc.v2(\r\n        bulletInfo.x,\r\n        bulletInfo.y\r\n      );\r\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\r\n      if (!targetNode) {\r\n        targetNode = cc.instantiate(self.trapBulletPrefab);\r\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\r\n        safelyAddChild(mapNode, targetNode);\r\n        targetNode.setPosition(newPos);\r\n        setLocalZOrder(targetNode, 5);\r\n      }else {\r\n        targetNode.setPosition(newPos);\r\n      }\r\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\r\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\r\n      }\r\n\r\n      if (0 < targetNode.getNumberOfRunningActions()) {\r\n        // A significant trick to smooth the position sync performance!\r\n        continue;\r\n      }\r\n      const oldPos = cc.v2(\r\n        targetNode.x,\r\n        targetNode.y\r\n      );\r\n      const toMoveByVec = newPos.sub(oldPos);\r\n      const durationSeconds = dt; // Using `dt` temporarily!\r\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\r\n    }\r\n\r\n   // 更新宝物显示 \r\n    for (let k in self.treasureInfoDict) {\r\n      const treasureLocalIdInBattle = parseInt(k);\r\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\r\n      const newPos = cc.v2(\r\n        treasureInfo.x,\r\n        treasureInfo.y\r\n      );\r\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\r\n      if (!targetNode) {\r\n        targetNode = cc.instantiate(self.treasurePrefab);\r\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\r\n        safelyAddChild(mapNode, targetNode);\r\n        targetNode.setPosition(newPos);\r\n        setLocalZOrder(targetNode, 5);\r\n        \r\n        /* \r\n        //初始化treasure的标记\r\n        const pickupBoundary = treasureInfo.pickupBoundary;\r\n        const anchor = pickupBoundary.anchor; \r\n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\r\n        newColliderIns.points = [];\r\n        for (let point of pickupBoundary.points) {\r\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\r\n          newColliderIns.points.push(p);\r\n        }\r\n        */\r\n      }\r\n\r\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\r\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\r\n      }\r\n      if (0 < targetNode.getNumberOfRunningActions()) {\r\n        // A significant trick to smooth the position sync performance!\r\n        continue;\r\n      }\r\n      const oldPos = cc.v2(\r\n        targetNode.x,\r\n        targetNode.y\r\n      );\r\n      const toMoveByVec = newPos.sub(oldPos);\r\n      const durationSeconds = dt; // Using `dt` temporarily!\r\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\r\n    }\r\n\r\n    // Coping with removed players.\r\n    for (let k in toRemovePlayerNodeDict) {\r\n      const playerId = parseInt(k);\r\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\r\n      delete self.otherPlayerNodeDict[playerId];\r\n    }\r\n\r\n    // Coping with removed treasures.\r\n    for (let k in toRemoveTreasureNodeDict) {\r\n      const treasureLocalIdInBattle = parseInt(k);\r\n      toRemoveTreasureNodeDict[k].parent.removeChild(toRemoveTreasureNodeDict[k]);\r\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\r\n    }\r\n\r\n    // Coping with removed traps.\r\n    for (let k in toRemoveTrapNodeDict) {\r\n      const trapLocalIdInBattle = parseInt(k);\r\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\r\n      delete self.trapNodeDict[trapLocalIdInBattle];\r\n    }\r\n\r\n    // Coping with removed bullets.\r\n    for (let k in toRemoveBulletNodeDict) {\r\n      const bulletLocalIdInBattle = parseInt(k);\r\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\r\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\r\n    }\r\n  },\r\n\r\n  transitToState(s) {\r\n    const self = this;\r\n    self.state = s;\r\n  },\r\n\r\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\r\n    const localClearance = function() {\r\n      if (byClick) {\r\n        /**\r\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\r\n        */\r\n        window.closeWSConnection();\r\n      }\r\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\r\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\r\n      }\r\n      cc.sys.localStorage.removeItem('selfPlayer');\r\n      cc.director.loadScene('login');\r\n    };\r\n\r\n    const self = this;\r\n    if (null != cc.sys.localStorage.selfPlayer) {\r\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\r\n      const requestContent = {\r\n        intAuthToken: selfPlayer.intAuthToken\r\n      }\r\n      try {\r\n        NetworkUtils.ajax({\r\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\r\n          type: \"POST\",\r\n          data: requestContent,\r\n          success: function(res) {\r\n            if (res.ret != constants.RET_CODE.OK) {\r\n              cc.log(`Logout failed: ${res}.`);\r\n            }\r\n            localClearance();\r\n          },\r\n          error: function(xhr, status, errMsg) {\r\n            localClearance();\r\n          },\r\n          timeout: function() {\r\n            localClearance();\r\n          }\r\n        });\r\n      } catch (e) {} finally {\r\n        // For Safari (both desktop and mobile).\r\n        localClearance();\r\n      }\r\n    } else {\r\n      localClearance();\r\n    }\r\n  },\r\n\r\n  onLogoutClicked(evt) {\r\n    const self = this;\r\n    self.showPopopInCanvas(self.confirmLogoutNode);\r\n  },\r\n\r\n  onLogoutConfirmationDismissed() {\r\n    const self = this;\r\n    self.transitToState(ALL_MAP_STATES.VISUAL);\r\n    const canvasNode = self.canvasNode;\r\n    canvasNode.removeChild(self.confirmLogoutNode);\r\n    self.enableInputControls();\r\n  },\r\n  \r\n  initWSConnection(evt, cb) {\r\n    const self = this;\r\n    if(cb){ \r\n      cb()\r\n    } \r\n    initPersistentSessionClient(self.initAfterWSConncted);\r\n  },\r\n\r\n  showPopopInCanvas(toShowNode) {\r\n    const self = this;\r\n    self.disableInputControls();\r\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\r\n    safelyAddChild(self.widgetsAboveAllNode, toShowNode);\r\n    setLocalZOrder(toShowNode, 10);\r\n  },\r\n\r\n});\r\n"]}