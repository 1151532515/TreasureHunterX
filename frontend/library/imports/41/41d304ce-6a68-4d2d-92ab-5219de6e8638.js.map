{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Map.js"],"names":["i18n","require","init","window","language","ALL_MAP_STATES","VISUAL","EDITING_BELONGING","SHOWING_MODAL_POPUP","ALL_BATTLE_STATES","WAITING","IN_BATTLE","IN_SETTLEMENT","IN_DISMISSAL","cc","Class","extends","Component","properties","useDiffFrameAlgo","default","canvasNode","type","Node","tiledAnimPrefab","Prefab","selfPlayerPrefab","treasurePrefab","trapPrefab","npcPlayerPrefab","type2NpcPlayerPrefab","barrierPrefab","shelterPrefab","shelterZReducerPrefab","keyboardInputControllerNode","joystickInputControllerNode","confirmLogoutPrefab","simplePressToGoDialogPrefab","boundRoomIdLabel","Label","countdownLabel","trapBulletPrefab","resultPanelPrefab","gameRulePrefab","findingPlayerPrefab","countdownToBeginGamePrefab","playersInfoPrefab","_generateNewFullFrame","refFullFrame","diffFrame","newFullFrame","id","treasures","traps","bullets","players","playersLocalIdStrList","Object","keys","i","length","k","playerId","parseInt","removed","treasuresLocalIdStrList","treasureLocalIdInBattle","trapsLocalIdStrList","trapLocalIdInBattle","bulletsLocalIdStrList","bulletLocalIdInBattle","_dumpToFullFrameCache","fullFrame","self","recentFrameCacheCurrentSize","recentFrameCacheMaxCount","toDelFrameId","recentFrameCache","_onPerUpsyncFrame","instance","resyncing","selfPlayerInfo","selfPlayerScriptIns","scheduledDirection","upsyncFrameData","dir","dx","parseFloat","dy","x","selfPlayerNode","y","ackingFrameId","lastRoomDownsyncFrameId","wrapped","msgId","Date","now","act","data","sendSafely","JSON","stringify","onDestroy","upsyncLoopInterval","clearInterval","inputControlTimer","_lazilyTriggerResync","state","popupSimplePressToGo","_onResyncCompleted","log","labelString","simplePressToGoDialogNode","instantiate","setPosition","v2","setScale","scale","simplePressToGoDialogScriptIns","getComponent","yesButton","getChildByName","postDismissalByYes","transitToState","removeChild","string","once","dismissDialog","bind","safelyAddChild","widgetsAboveAllNode","setLocalZOrder","alertForGoingBackToLoginScene","mapIns","shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage","millisToGo","js","formatStr","setTimeout","logout","onLoad","mapNode","node","parent","director","getCollisionManager","enabled","enabledDebugDraw","CC_DEBUG","mainCameraNode","mainCamera","Camera","children","child","zoomRatio","battleState","otherPlayerCachedDataDict","otherPlayerNodeDict","treasureInfoDict","treasureNodeDict","trapInfoDict","trapBulletInfoDict","trapBulletNodeDict","trapNodeDict","confirmLogoutNode","resultPanelNode","gameRuleNode","gameRuleScriptIns","showPopopInCanvas","findingPlayerNode","playersInfoNode","countdownToBeginGameNode","clientUpsyncFps","reconnectWSWithoutRoomId","Promise","resolve","reject","clientSessionPingInterval","clearBoundRoomIdInBothVolatileAndPersistentStorage","then","initPersistentSessionClient","initAfterWSConncted","handleClientSessionCloseOrError","tiledMapIns","TiledMap","parse","sys","localStorage","selfPlayer","assign","_inputControlEnabled","setupInputControls","boundaryObjs","tileCollisionManager","extractBoundaryObjects","frameAnimations","frameAnim","animNode","anim","Animation","posInMapNode","width","sizeInMapNode","height","origSize","setAnchorPoint","addClip","animationClip","play","barrierColliders","barriers","boundaryObj","newBarrier","newBoundaryOffsetInMapNode","newBarrierColliderIns","PolygonCollider","points","p","push","sub","addChild","allLayers","getLayers","layer","layerType","getProperty","allObjectGroups","getObjectGroups","objectGroup","objectGroupType","sheltersZReducer","newShelter","newShelterColliderIns","handleRoomDownsyncFrame","refFrameId","console","playerInfo","playersScriptIns","updateData","frameId","isInitiatingFrame","cachedFullFrame","countdownNanos","countdownSeconds","isNaN","roomDownsyncFrame","onBattleStopped","sentAt","playerIdStrList","immediateSelfPlayerInfo","speed","score","joinIndex","anotherPlayer","treasureInfo","trapInfo","bulletInfo","onBattleStarted","joystickInputControllerScriptIns","inputControlPollerMillis","pollerFps","ctrl","setInterval","activeDirection","enableInputControls","disableInputControls","spawnSelfPlayer","resultPanelScriptIns","showPlayerInfo","active","newPlayerNode","toStartWithPos","update","dt","canvasParentNode","boundRoomId","updateSpeed","toRemovePlayerNodeDict","toRemoveTreasureNodeDict","toRemoveTrapNodeDict","toRemoveBulletNodeDict","cachedPlayerData","newPos","targetNode","aControlledOtherPlayerScriptIns","newScheduledDirection","discretizeDirection","joyStickEps","scheduleNewDirection","oldPos","toMoveByVec","toMoveByVecMag","mag","toTeleportDisThreshold","notToMoveDisThreshold","normalizedDir","getNumberOfRunningActions","durationSeconds","runAction","moveTo","treasureScriptIns","playPickedUpAnimAndDestroy","s","byClick","localClearance","closeWSConnection","removeItem","loadScene","requestContent","intAuthToken","NetworkUtils","ajax","url","backendAddress","PROTOCOL","HOST","PORT","constants","ROUTE_PATH","API","PLAYER","VERSION","INT_AUTH_TOKEN","LOGOUT","success","res","ret","RET_CODE","OK","error","xhr","status","errMsg","timeout","e","onLogoutClicked","evt","onLogoutConfirmationDismissed","initWSConnection","cb","toShowNode"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const i18n = require('LanguageData');\ni18n.init(window.language); // languageID should be equal to the one we input in New Language ID input field\n\nwindow.ALL_MAP_STATES = {\n  VISUAL: 0, // For free dragging & zooming.\n  EDITING_BELONGING: 1,\n  SHOWING_MODAL_POPUP: 2,\n};\n\nwindow.ALL_BATTLE_STATES = {\n  WAITING: 0,\n  IN_BATTLE: 1,\n  IN_SETTLEMENT: 2,\n  IN_DISMISSAL: 3,\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: { \n    useDiffFrameAlgo: {\n      default: true \n    },\n    canvasNode: {\n      type: cc.Node,\n      default: null,\n    },\n    tiledAnimPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    selfPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    treasurePrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    trapPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    npcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    type2NpcPlayerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    barrierPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    shelterZReducerPrefab: {\n      type: cc.Prefab,\n      default: null,\n    },\n    keyboardInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    joystickInputControllerNode: {\n      type: cc.Node,\n      default: null\n    },\n    confirmLogoutPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    simplePressToGoDialogPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    boundRoomIdLabel: {\n      type: cc.Label,\n      default: null\n    },\n    countdownLabel: {\n      type: cc.Label,\n      default: null\n    },\n    trapBulletPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    resultPanelPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    gameRulePrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    findingPlayerPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    countdownToBeginGamePrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n    playersInfoPrefab: {\n      type:cc.Prefab,\n      default: null\n    },\n\n  },\n  \n  _generateNewFullFrame: function(refFullFrame, diffFrame) {\n    let newFullFrame = {\n      id: diffFrame.id,\n      treasures: refFullFrame.treasures,\n      traps: refFullFrame.traps,\n      bullets: refFullFrame.bullets,\n      players: refFullFrame.players,\n    };\n\n    const players = diffFrame.players;\n    const playersLocalIdStrList = Object.keys(players);\n    for (let i = 0; i < playersLocalIdStrList.length; ++i) {\n      const k = playersLocalIdStrList[i];\n      const playerId = parseInt(k);\n      if (true == diffFrame.players[playerId].removed) {\n        // cc.log(`Player id == ${playerId} is removed.`);\n        delete newFullFrame.players[playerId];\n      } else {\n        newFullFrame.players[playerId] = diffFrame.players[playerId];  \n      }  \n    }\n    \n    const treasures = diffFrame.treasures;\n    const treasuresLocalIdStrList = Object.keys(treasures);\n    for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n      const k = treasuresLocalIdStrList[i];\n      const treasureLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.treasures[treasureLocalIdInBattle].removed) {\n        // cc.log(`Treasure with localIdInBattle == ${treasureLocalIdInBattle} is removed.`);\n        delete newFullFrame.treasures[treasureLocalIdInBattle];\n      } else {\n        newFullFrame.treasures[treasureLocalIdInBattle] = diffFrame.treasures[treasureLocalIdInBattle];  \n      }  \n    }\n\n    const traps = diffFrame.traps;\n    const trapsLocalIdStrList = Object.keys(traps);\n    for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n      const k = trapsLocalIdStrList[i];\n      const trapLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.traps[trapLocalIdInBattle].removed) {\n        // cc.log(`Trap with localIdInBattle == ${trapLocalIdInBattle} is removed.`);\n        delete newFullFrame.traps[trapLocalIdInBattle];\n      } else {\n        newFullFrame.traps[trapLocalIdInBattle] = diffFrame.traps[trapLocalIdInBattle];  \n      }\n    }\n\n    const bullets = diffFrame.bullets;\n    const bulletsLocalIdStrList = Object.keys(bullets);\n    for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n      const k = bulletsLocalIdStrList[i];\n      const bulletLocalIdInBattle = parseInt(k);\n      if (true == diffFrame.bullets[bulletLocalIdInBattle].removed) {\n        // cc.log(`Bullet with localIdInBattle == ${bulletLocalIdInBattle} is removed.`);\n        delete newFullFrame.bullets[bulletLocalIdInBattle];\n      } else {\n        newFullFrame.bullets[bulletLocalIdInBattle] = diffFrame.bullets[bulletLocalIdInBattle];  \n      }\n    }\n\n    return newFullFrame;\n  },\n\n  _dumpToFullFrameCache: function(fullFrame) {\n    const self = this;\n    while (self.recentFrameCacheCurrentSize >= self.recentFrameCacheMaxCount) {\n      // Trick here: never evict the \"Zero-th Frame\" for resyncing!\n      const toDelFrameId = Object.keys(self.recentFrameCache)[1]; \n      // cc.log(\"toDelFrameId is \" + toDelFrameId + \".\");\n      delete self.recentFrameCache[toDelFrameId];\n      --self.recentFrameCacheCurrentSize;\n    }\n    self.recentFrameCache[fullFrame.id] = fullFrame;\n    ++self.recentFrameCacheCurrentSize;\n  },\n\n  _onPerUpsyncFrame() {\n    const instance = this;\n    if (instance.resyncing) return;\n    if (\n      null == instance.selfPlayerInfo ||\n      null == instance.selfPlayerScriptIns ||\n      null == instance.selfPlayerScriptIns.scheduledDirection\n      ) return;\n    const upsyncFrameData = {\n      id: instance.selfPlayerInfo.id,\n      /**\n      * WARNING\n      *\n      * Deliberately NOT upsyncing the `instance.selfPlayerScriptIns.activeDirection` here, because it'll be deduced by other players from the position differences of `RoomDownsyncFrame`s.\n      */\n      dir: {\n        dx: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dx),\n        dy: parseFloat(instance.selfPlayerScriptIns.scheduledDirection.dy),\n      },\n      x: parseFloat(instance.selfPlayerNode.x),\n      y: parseFloat(instance.selfPlayerNode.y),\n      ackingFrameId: instance.lastRoomDownsyncFrameId,\n    };\n    const wrapped = {\n      msgId: Date.now(),\n      act: \"PlayerUpsyncCmd\",\n      data: upsyncFrameData,\n    }\n    window.sendSafely(JSON.stringify(wrapped));\n  },\n\n  onDestroy() {\n    const self = this;\n    if (self.upsyncLoopInterval) {\n      clearInterval(self.upsyncLoopInterval);\n    }\n    if (self.inputControlTimer) {\n      clearInterval(self.inputControlTimer)\n    }\n  },\n\n  _lazilyTriggerResync() {\n    if (true == this.resyncing) return; \n    this.resyncing = false;\n    if (ALL_MAP_STATES.SHOWING_MODAL_POPUP != this.state) {\n      this.popupSimplePressToGo(\"Resyncing your battle, please wait...\");\n    }\n  },\n\n  _onResyncCompleted() {\n    if (false == this.resyncing) return; \n    cc.log(`_onResyncCompleted`);\n    this.resyncing = true;\n  },\n\n  popupSimplePressToGo(labelString) {\n    const self = this;\n    self.state = ALL_MAP_STATES.SHOWING_MODAL_POPUP;\n\n    const canvasNode = self.canvasNode;\n    const simplePressToGoDialogNode = cc.instantiate(self.simplePressToGoDialogPrefab);\n    simplePressToGoDialogNode.setPosition(cc.v2(0, 0));\n    simplePressToGoDialogNode.setScale(1 / canvasNode.scale);\n    const simplePressToGoDialogScriptIns = simplePressToGoDialogNode.getComponent(\"SimplePressToGoDialog\");\n    const yesButton = simplePressToGoDialogNode.getChildByName(\"Yes\");\n    const postDismissalByYes = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      canvasNode.removeChild(simplePressToGoDialogNode);\n    }\n    simplePressToGoDialogNode.getChildByName(\"Hint\").getComponent(cc.Label).string = labelString;\n    yesButton.once(\"click\", simplePressToGoDialogScriptIns.dismissDialog.bind(simplePressToGoDialogScriptIns, postDismissalByYes));\n    yesButton.getChildByName(\"Label\").getComponent(cc.Label).string = \"OK\";\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, simplePressToGoDialogNode);\n    setLocalZOrder(simplePressToGoDialogNode, 20);\n  },\n\n  alertForGoingBackToLoginScene(labelString, mapIns, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const millisToGo = 3000;\n    mapIns.popupSimplePressToGo(cc.js.formatStr(\"%s will logout in %s seconds.\", labelString, millisToGo / 1000));\n    setTimeout(() => {\n      mapIns.logout(false, shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage);\n    }, millisToGo);\n },\n\n  onLoad() {\n    const self = this;\n    self.resyncing = false;\n    self.lastRoomDownsyncFrameId = 0;\n\n    self.recentFrameCache = {};\n    self.recentFrameCacheCurrentSize = 0;\n    self.recentFrameCacheMaxCount = 2048;\n\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    cc.director.getCollisionManager().enabled = true;\n    cc.director.getCollisionManager().enabledDebugDraw = CC_DEBUG;\n\n    self.mainCameraNode = canvasNode.getChildByName(\"Main Camera\");\n    self.mainCamera = self.mainCameraNode.getComponent(cc.Camera);\n    for (let child of self.mainCameraNode.children) {\n      child.setScale(1/self.mainCamera.zoomRatio); \n    } \n    self.widgetsAboveAllNode = self.mainCameraNode.getChildByName(\"WidgetsAboveAll\"); \n\n    self.selfPlayerNode = null;\n    self.selfPlayerScriptIns = null;\n    self.selfPlayerInfo = null;\n    self.upsyncLoopInterval = null;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n\n    self.battleState = ALL_BATTLE_STATES.WAITING;\n    self.otherPlayerCachedDataDict = {};\n    self.otherPlayerNodeDict = {};\n    self.treasureInfoDict = {};\n    self.treasureNodeDict = {};\n    self.trapInfoDict = {};\n    self.trapBulletInfoDict = {};\n    self.trapBulletNodeDict = {};\n    self.trapNodeDict = {};\n\n    /** init requeired prefab started */\n    self.confirmLogoutNode = cc.instantiate(self.confirmLogoutPrefab);\n    self.confirmLogoutNode.getComponent(\"ConfirmLogout\").mapNode = self.node;\n\n    self.resultPanelNode = cc.instantiate(self.resultPanelPrefab);\n\n    self.gameRuleNode = cc.instantiate(self.gameRulePrefab);\n    self.gameRuleScriptIns = self.gameRuleNode.getComponent(\"GameRule\");\n    self.gameRuleScriptIns.mapNode = self.node;\n    self.showPopopInCanvas(self.gameRuleNode);\n\n    self.findingPlayerNode = cc.instantiate(self.findingPlayerPrefab);\n    \n    self.playersInfoNode = cc.instantiate(self.playersInfoPrefab); \n    safelyAddChild(self.widgetsAboveAllNode, self.playersInfoNode);\n\n    self.countdownToBeginGameNode = cc.instantiate(self.countdownToBeginGamePrefab);\n    \n    /** init requeired prefab ended */\n\n    self.clientUpsyncFps = 20;\n    self.upsyncLoopInterval = null;\n\n    window.reconnectWSWithoutRoomId = function() {\n      return  new Promise((resolve,reject) => {\n      if (window.clientSessionPingInterval) {\n        clearInterval(clientSessionPingInterval);\n      }\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage()\n      return resolve();\n      })\n      .then(() =>{\n        this.initPersistentSessionClient(this.initAfterWSConncted);\n      });\n    }\n\n    window.handleClientSessionCloseOrError = function() {\n      if(!self.battleState)\n        self.alertForGoingBackToLoginScene(\"Client session closed unexpectedly!\", self, true);\n    };\n\n    self.initAfterWSConncted = () => {\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n      const tiledMapIns = self.node.getComponent(cc.TiledMap);\n      self.selfPlayerInfo = JSON.parse(cc.sys.localStorage.selfPlayer);\n      Object.assign(self.selfPlayerInfo, {\n        id: self.selfPlayerInfo.playerId\n      });\n      self._inputControlEnabled = false;\n      self.setupInputControls();\n\n      const boundaryObjs = tileCollisionManager.extractBoundaryObjects(self.node);\n      for (let frameAnim of boundaryObjs.frameAnimations) {\n        const animNode = cc.instantiate(self.tiledAnimPrefab);\n        const anim = animNode.getComponent(cc.Animation);\n        animNode.setPosition(frameAnim.posInMapNode);\n        animNode.width = frameAnim.sizeInMapNode.width;\n        animNode.height = frameAnim.sizeInMapNode.height;\n        animNode.setScale(frameAnim.sizeInMapNode.width / frameAnim.origSize.width, frameAnim.sizeInMapNode.height / frameAnim.origSize.height);\n        animNode.setAnchorPoint(cc.v2(0.5, 0)); // A special requirement for \"image-type Tiled object\" by \"CocosCreator v2.0.1\".\n        safelyAddChild(self.node, animNode);\n        setLocalZOrder(animNode, 5);\n        anim.addClip(frameAnim.animationClip, \"default\");\n        anim.play(\"default\");\n      }\n\n      self.barrierColliders = [];\n      for (let boundaryObj of boundaryObjs.barriers) {\n        const newBarrier = cc.instantiate(self.barrierPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newBarrier.setPosition(newBoundaryOffsetInMapNode);\n        newBarrier.setAnchorPoint(cc.v2(0, 0));\n        const newBarrierColliderIns = newBarrier.getComponent(cc.PolygonCollider);\n        newBarrierColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newBarrierColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.barrierColliders.push(newBarrierColliderIns);\n        self.node.addChild(newBarrier);\n      }\n\n      const allLayers = tiledMapIns.getLayers();\n      for (let layer of allLayers) {\n        const layerType = layer.getProperty(\"type\");\n        switch (layerType) {\n          case \"normal\":\n            setLocalZOrder(layer.node, 0);\n            break;\n          case \"barrier_and_shelter\":\n            setLocalZOrder(layer.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      const allObjectGroups = tiledMapIns.getObjectGroups();\n      for (let objectGroup of allObjectGroups) {\n        const objectGroupType = objectGroup.getProperty(\"type\");\n        switch (objectGroupType) {\n          case \"barrier_and_shelter\":\n            setLocalZOrder(objectGroup.node, 3);\n            break;\n          default:\n            break;\n        }\n      }\n\n      for (let boundaryObj of boundaryObjs.sheltersZReducer) {\n        const newShelter = cc.instantiate(self.shelterZReducerPrefab);\n        const newBoundaryOffsetInMapNode = cc.v2(boundaryObj[0].x, boundaryObj[0].y);\n        newShelter.setPosition(newBoundaryOffsetInMapNode);\n        newShelter.setAnchorPoint(cc.v2(0, 0));\n        const newShelterColliderIns = newShelter.getComponent(cc.PolygonCollider);\n        newShelterColliderIns.points = [];\n        for (let p of boundaryObj) {\n          newShelterColliderIns.points.push(p.sub(newBoundaryOffsetInMapNode));\n        }\n        self.node.addChild(newShelter);\n      }\n\n      window.handleRoomDownsyncFrame = function(diffFrame) {\n        if (ALL_BATTLE_STATES.WAITING != self.battleState && ALL_BATTLE_STATES.IN_BATTLE != self.battleState && ALL_BATTLE_STATES.IN_SETTLEMENT != self.battleState) return;\n        const refFrameId = diffFrame.refFrameId;\n        if( -99 == refFrameId ) {\n          console.log(\"handleRoomDownsyncFrame and refFrameId < 0, \" + JSON.stringify(diffFrame));\n          if(self.findingPlayerNode.parent){\n            self.findingPlayerNode.parent.removeChild(self.findingPlayerNode);\n            self.transitToState(ALL_MAP_STATES.VISUAL);\n            for(let i in diffFrame.players) {\n              const playerInfo = diffFrame.players[i];\n              const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n              playersScriptIns.updateData(playerInfo);\n            }\n          }\n          self.showPopopInCanvas(self.countdownToBeginGameNode);\n          return;\n        } else if( -98 == refFrameId ) {\n          console.log(\"handleRoomDownsyncFrame and refFrameId < 0 , refFrameId: \" + refFrameId);\n          self.showPopopInCanvas(self.findingPlayerNode);\n          return;\n        }\n        const frameId = diffFrame.id;\n        if (frameId <= self.lastRoomDownsyncFrameId) {\n          // Log the obsolete frames?\n          return;\n        }\n        const isInitiatingFrame = (0 >= self.recentFrameCacheCurrentSize || 0 == refFrameId); \n        /*\n        if (frameId % 300 == 0) {\n          // WARNING: For testing only!\n          if (0 < frameId) {\n            self._lazilyTriggerResync(); \n          }\n          cc.log(`${JSON.stringify(diffFrame)}`);\n        }\n        */\n        const cachedFullFrame = self.recentFrameCache[refFrameId];\n        if (\n          !isInitiatingFrame \n          && self.useDiffFrameAlgo \n          && (refFrameId > 0 || 0 < self.recentFrameCacheCurrentSize) // Critical condition to differentiate between \"BattleStarted\" or \"ShouldResync\". \n          && null == cachedFullFrame\n        ) {\n          self._lazilyTriggerResync();\n          // Later incoming diffFrames will all suffice that `0 < self.recentFrameCacheCurrentSize && null == cachedFullFrame`, until `this._onResyncCompleted` is successfully invoked.\n          return;\n        } \n        \n        if (isInitiatingFrame && 0 == refFrameId) {\n          // Reaching here implies that you've received the resync frame.\n          self._onResyncCompleted();\n        }\n        let countdownNanos = diffFrame.countdownNanos;\n        if (countdownNanos < 0) countdownNanos = 0;\n        const countdownSeconds = parseInt(countdownNanos / 1000000000);\n        if (isNaN(countdownSeconds)) {\n          cc.log(`countdownSeconds is NaN for countdownNanos == ${countdownNanos}.`);\n        }\n        self.countdownLabel.string = countdownSeconds;\n        const roomDownsyncFrame = (\n          (isInitiatingFrame || !self.useDiffFrameAlgo)\n          ?\n          diffFrame    \n          :\n          self._generateNewFullFrame(cachedFullFrame, diffFrame) \n        ); \n        if (countdownNanos <= 0) {\n          self.onBattleStopped(roomDownsyncFrame.players);\n          return;\n        }\n        self._dumpToFullFrameCache(roomDownsyncFrame);\n        const sentAt = roomDownsyncFrame.sentAt;\n        const players = roomDownsyncFrame.players;\n        const playerIdStrList = Object.keys(players);\n        self.otherPlayerCachedDataDict = {};\n        for (let i = 0; i < playerIdStrList.length; ++i) {\n          const k = playerIdStrList[i];\n          const playerId = parseInt(k);\n          if (playerId == self.selfPlayerInfo.id) {\n            const immediateSelfPlayerInfo = players[k];\n            Object.assign(self.selfPlayerInfo, {\n              x: immediateSelfPlayerInfo.x,\n              y: immediateSelfPlayerInfo.y,\n              speed: immediateSelfPlayerInfo.speed,\n              battleState: immediateSelfPlayerInfo.battleState,\n              score: immediateSelfPlayerInfo.score,\n              joinIndex: immediateSelfPlayerInfo.joinIndex,\n            });\n            continue;\n          }\n          const anotherPlayer = players[k];\n          // Note that this callback is invoked in the NetworkThread, and the rendering should be executed in the GUIThread, e.g. within `update(dt)`.\n          self.otherPlayerCachedDataDict[playerId] = anotherPlayer;\n        }\n        self.treasureInfoDict = {};\n        const treasures = roomDownsyncFrame.treasures;\n        const treasuresLocalIdStrList = Object.keys(treasures);\n        for (let i = 0; i < treasuresLocalIdStrList.length; ++i) {\n          const k = treasuresLocalIdStrList[i];\n          const treasureLocalIdInBattle = parseInt(k);\n          const treasureInfo = treasures[k];\n          self.treasureInfoDict[treasureLocalIdInBattle] = treasureInfo;\n        }\n\n        self.trapInfoDict = {};\n        const traps = roomDownsyncFrame.traps;\n        const trapsLocalIdStrList = Object.keys(traps);\n        for (let i = 0; i < trapsLocalIdStrList.length; ++i) {\n          const k = trapsLocalIdStrList[i];\n          const trapLocalIdInBattle = parseInt(k);\n          const trapInfo = traps[k];\n          self.trapInfoDict[trapLocalIdInBattle] = trapInfo;\n        }\n\n        self.trapBulletInfoDict = {};\n        const bullets = roomDownsyncFrame.bullets;\n        const bulletsLocalIdStrList = Object.keys(bullets);\n        for (let i = 0; i < bulletsLocalIdStrList.length; ++i) {\n          const k = bulletsLocalIdStrList[i];\n          const bulletLocalIdInBattle = parseInt(k);\n          const bulletInfo = bullets[k];\n          self.trapBulletInfoDict[bulletLocalIdInBattle] = bulletInfo;\n        }\n\n        if (0 == self.lastRoomDownsyncFrameId) {\n          self.battleState = ALL_BATTLE_STATES.IN_BATTLE;\n          if (1 == frameId) {\n            // No need to prompt upon rejoined.\n            self.popupSimplePressToGo(\"Battle started!\");\n          }\n          self.onBattleStarted();\n        }\n        self.lastRoomDownsyncFrameId = frameId;\n        // TODO: Inject a NetworkDoctor as introduced in https://app.yinxiang.com/shard/s61/nl/13267014/5c575124-01db-419b-9c02-ec81f78c6ddc/.\n      };\n    }\n  },\n\n  setupInputControls() {\n    const instance = this;\n    const mapNode = instance.node;\n    const canvasNode = mapNode.parent;\n    const joystickInputControllerScriptIns = canvasNode.getComponent(\"TouchEventsManager\");\n    const inputControlPollerMillis = (1000 / joystickInputControllerScriptIns.pollerFps);\n\n    const ctrl = joystickInputControllerScriptIns;\n    instance.ctrl = ctrl;\n\n    instance.inputControlTimer = setInterval(function() {\n      if (false == instance._inputControlEnabled) return;\n      instance.selfPlayerScriptIns.activeDirection = ctrl.activeDirection;\n    }, inputControlPollerMillis);\n  },\n\n  enableInputControls() {\n    this._inputControlEnabled = true;\n  },\n\n  disableInputControls() {\n    this._inputControlEnabled = false;\n  },\n\n  onBattleStarted() {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    self.spawnSelfPlayer();\n    self.upsyncLoopInterval = setInterval(self._onPerUpsyncFrame.bind(self), self.clientUpsyncFps);\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    self.enableInputControls();\n    if(self.countdownToBeginGameNode.parent) {\n      self.countdownToBeginGameNode.parent.removeChild(self.countdownToBeginGameNode);\n      self.transitToState(ALL_MAP_STATES.VISUAL);\n    }\n  },\n\n  onBattleStopped(players) {\n    const self = this;\n    const canvasNode = self.canvasNode;\n    const resultPanelNode = self.resultPanelNode;\n    const resultPanelScriptIns =  resultPanelNode.getComponent(\"ResultPanel\");\n    resultPanelScriptIns.showPlayerInfo(players);\n    // Such that it doesn't execute \"update(dt)\" anymore. \n    self.selfPlayerNode.active = false;\n    self.battleState = ALL_BATTLE_STATES.IN_SETTLEMENT;\n    self.showPopopInCanvas(resultPanelNode);\n  },\n\n  spawnSelfPlayer() {\n    const instance = this;\n    const newPlayerNode = cc.instantiate(instance.selfPlayerPrefab);\n    const tiledMapIns = instance.node.getComponent(cc.TiledMap);\n    let toStartWithPos = cc.v2(instance.selfPlayerInfo.x, instance.selfPlayerInfo.y)\n    newPlayerNode.setPosition(toStartWithPos);\n    newPlayerNode.getComponent(\"SelfPlayer\").mapNode = instance.node;\n\n    instance.node.addChild(newPlayerNode);\n\n    setLocalZOrder(newPlayerNode, 5);\n    instance.selfPlayerNode = newPlayerNode;\n    instance.selfPlayerScriptIns = newPlayerNode.getComponent(\"SelfPlayer\");\n  },\n\n  update(dt) {\n    const self = this;\n    const mapNode = self.node;\n    const canvasNode = mapNode.parent;\n    const canvasParentNode = canvasNode.parent;\n    if (null != window.boundRoomId) {\n      self.boundRoomIdLabel.string = window.boundRoomId;\n    }\n    if (null != self.selfPlayerInfo) {\n      const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n      playersScriptIns.updateData(self.selfPlayerInfo);\n      if (null != self.selfPlayerScriptIns) {\n        self.selfPlayerScriptIns.updateSpeed(self.selfPlayerInfo.speed);\n      }\n    }\n\n    let toRemovePlayerNodeDict = {};\n    Object.assign(toRemovePlayerNodeDict, self.otherPlayerNodeDict);\n\n    let toRemoveTreasureNodeDict = {};\n    Object.assign(toRemoveTreasureNodeDict, self.treasureNodeDict);\n\n    let toRemoveTrapNodeDict = {};\n    Object.assign(toRemoveTrapNodeDict, self.trapNodeDict);\n\n    let toRemoveBulletNodeDict = {};\n    Object.assign(toRemoveBulletNodeDict, self.trapBulletNodeDict);\n\n    for (let k in self.otherPlayerCachedDataDict) {\n      const playerId = parseInt(k);\n      const cachedPlayerData = self.otherPlayerCachedDataDict[playerId];\n      const newPos = cc.v2(\n        cachedPlayerData.x,\n        cachedPlayerData.y\n      );\n     //更新信息\n    if (null != cachedPlayerData) {\n      const playersScriptIns = self.playersInfoNode.getComponent(\"PlayersInfo\");\n      playersScriptIns.updateData(cachedPlayerData);\n    }\n      let targetNode = self.otherPlayerNodeDict[playerId];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.selfPlayerPrefab);\n        targetNode.getComponent(\"SelfPlayer\").mapNode = mapNode;\n        self.otherPlayerNodeDict[playerId] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }\n      const aControlledOtherPlayerScriptIns = targetNode.getComponent(\"SelfPlayer\"); \n      aControlledOtherPlayerScriptIns.updateSpeed(cachedPlayerData.speed);\n\n      if (null != toRemovePlayerNodeDict[playerId]) {\n        delete toRemovePlayerNodeDict[playerId];\n      }\n      if (0 != cachedPlayerData.dir.dx || 0 != cachedPlayerData.dir.dy) {\n        const newScheduledDirection = self.ctrl.discretizeDirection(cachedPlayerData.dir.dx, cachedPlayerData.dir.dy, self.ctrl.joyStickEps);\n        targetNode.getComponent(\"SelfPlayer\").scheduleNewDirection(newScheduledDirection, false /* DON'T interrupt playing anim. */ );\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const toMoveByVecMag = toMoveByVec.mag();\n      const toTeleportDisThreshold = (cachedPlayerData.speed * dt * 100);\n      const notToMoveDisThreshold = (cachedPlayerData.speed * dt * 0.5);\n      if (toMoveByVecMag < notToMoveDisThreshold) {\n        targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n          dx: 0,\n          dy: 0\n        };\n      } else {\n        if (toMoveByVecMag >= toTeleportDisThreshold) {\n          cc.log(`Player ${cachedPlayerData.id} is teleporting! Having toMoveByVecMag == ${toMoveByVecMag}, toTeleportDisThreshold == ${toTeleportDisThreshold}`);\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = {\n            dx: 0,\n            dy: 0\n          };\n          // TODO: Use `cc.Action`?\n          targetNode.setPosition(newPos);\n        } else {\n          // The common case which is suitable for interpolation.\n          const normalizedDir = {\n            dx: toMoveByVec.x / toMoveByVecMag,\n            dy: toMoveByVec.y / toMoveByVecMag,\n          };\n          targetNode.getComponent(\"SelfPlayer\").activeDirection = normalizedDir;\n        }\n      }\n    }\n\n   // 更新陷阱显示 \n    for (let k in self.trapInfoDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      const trapInfo = self.trapInfoDict[trapLocalIdInBattle];\n      const newPos = cc.v2(\n        trapInfo.x,\n        trapInfo.y\n      );\n      let targetNode = self.trapNodeDict[trapLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapPrefab);\n        self.trapNodeDict[trapLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        /*\n        //初始化trap的标记\n        const pickupBoundary = trapInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n      if (null != toRemoveTrapNodeDict[trapLocalIdInBattle]) {\n        delete toRemoveTrapNodeDict[trapLocalIdInBattle];\n      }\n      \n    }\n\n   // 更新bullet显示 \n    for (let k in self.trapBulletInfoDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      const bulletInfo = self.trapBulletInfoDict[bulletLocalIdInBattle];\n      const newPos = cc.v2(\n        bulletInfo.x,\n        bulletInfo.y\n      );\n      let targetNode = self.trapBulletNodeDict[bulletLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.trapBulletPrefab);\n        self.trapBulletNodeDict[bulletLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n      }else {\n        targetNode.setPosition(newPos);\n      }\n      if (null != toRemoveBulletNodeDict[bulletLocalIdInBattle]) {\n        delete toRemoveBulletNodeDict[bulletLocalIdInBattle];\n      }\n\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n   // 更新宝物显示 \n    for (let k in self.treasureInfoDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureInfo = self.treasureInfoDict[treasureLocalIdInBattle];\n      const newPos = cc.v2(\n        treasureInfo.x,\n        treasureInfo.y\n      );\n      let targetNode = self.treasureNodeDict[treasureLocalIdInBattle];\n      if (!targetNode) {\n        targetNode = cc.instantiate(self.treasurePrefab);\n        self.treasureNodeDict[treasureLocalIdInBattle] = targetNode;\n        safelyAddChild(mapNode, targetNode);\n        targetNode.setPosition(newPos);\n        setLocalZOrder(targetNode, 5);\n        \n        /* \n        //初始化treasure的标记\n        const pickupBoundary = treasureInfo.pickupBoundary;\n        const anchor = pickupBoundary.anchor; \n        const newColliderIns = targetNode.getComponent(cc.PolygonCollider);\n        newColliderIns.points = [];\n        for (let point of pickupBoundary.points) {\n          const p = cc.v2(parseFloat(point.x), parseFloat(point.y));\n          newColliderIns.points.push(p);\n        }\n        */\n      }\n\n      if (null != toRemoveTreasureNodeDict[treasureLocalIdInBattle]) {\n        delete toRemoveTreasureNodeDict[treasureLocalIdInBattle];\n      }\n      if (0 < targetNode.getNumberOfRunningActions()) {\n        // A significant trick to smooth the position sync performance!\n        continue;\n      }\n      const oldPos = cc.v2(\n        targetNode.x,\n        targetNode.y\n      );\n      const toMoveByVec = newPos.sub(oldPos);\n      const durationSeconds = dt; // Using `dt` temporarily!\n      targetNode.runAction(cc.moveTo(durationSeconds, newPos));\n    }\n\n    // Coping with removed players.\n    for (let k in toRemovePlayerNodeDict) {\n      const playerId = parseInt(k);\n      toRemovePlayerNodeDict[k].parent.removeChild(toRemovePlayerNodeDict[k]);\n      delete self.otherPlayerNodeDict[playerId];\n    }\n\n    // Coping with removed treasures.\n    for (let k in toRemoveTreasureNodeDict) {\n      const treasureLocalIdInBattle = parseInt(k);\n      const treasureScriptIns = toRemoveTreasureNodeDict[k].getComponent(\"Treasure\");\n      treasureScriptIns.playPickedUpAnimAndDestroy();\n      delete self.treasureNodeDict[treasureLocalIdInBattle];\n    }\n\n    // Coping with removed traps.\n    for (let k in toRemoveTrapNodeDict) {\n      const trapLocalIdInBattle = parseInt(k);\n      toRemoveTrapNodeDict[k].parent.removeChild(toRemoveTrapNodeDict[k]);\n      delete self.trapNodeDict[trapLocalIdInBattle];\n    }\n\n    // Coping with removed bullets.\n    for (let k in toRemoveBulletNodeDict) {\n      const bulletLocalIdInBattle = parseInt(k);\n      toRemoveBulletNodeDict[k].parent.removeChild(toRemoveBulletNodeDict[k]);\n      delete self.trapBulletNodeDict[bulletLocalIdInBattle];\n    }\n  },\n\n  transitToState(s) {\n    const self = this;\n    self.state = s;\n  },\n\n  logout(byClick /* The case where this param is \"true\" will be triggered within `ConfirmLogout.js`.*/ , shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n    const localClearance = function() {\n      if (byClick) {\n        /**\n        * WARNING: We MUST distinguish `byClick`, otherwise the `window.clientSession.onclose(event)` could be confused by local events!\n        */\n        window.closeWSConnection();\n      }\n      if (true != shouldRetainBoundRoomIdInBothVolatileAndPersistentStorage) {\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n      }\n      cc.sys.localStorage.removeItem('selfPlayer');\n      cc.director.loadScene('login');\n    };\n\n    const self = this;\n    if (null != cc.sys.localStorage.selfPlayer) {\n      const selfPlayer = JSON.parse(cc.sys.localStorage.selfPlayer);\n      const requestContent = {\n        intAuthToken: selfPlayer.intAuthToken\n      }\n      try {\n        NetworkUtils.ajax({\n          url: backendAddress.PROTOCOL + '://' + backendAddress.HOST + ':' + backendAddress.PORT + constants.ROUTE_PATH.API + constants.ROUTE_PATH.PLAYER + constants.ROUTE_PATH.VERSION + constants.ROUTE_PATH.INT_AUTH_TOKEN + constants.ROUTE_PATH.LOGOUT,\n          type: \"POST\",\n          data: requestContent,\n          success: function(res) {\n            if (res.ret != constants.RET_CODE.OK) {\n              cc.log(`Logout failed: ${res}.`);\n            }\n            localClearance();\n          },\n          error: function(xhr, status, errMsg) {\n            localClearance();\n          },\n          timeout: function() {\n            localClearance();\n          }\n        });\n      } catch (e) {} finally {\n        // For Safari (both desktop and mobile).\n        localClearance();\n      }\n    } else {\n      localClearance();\n    }\n  },\n\n  onLogoutClicked(evt) {\n    const self = this;\n    self.showPopopInCanvas(self.confirmLogoutNode);\n  },\n\n  onLogoutConfirmationDismissed() {\n    const self = this;\n    self.transitToState(ALL_MAP_STATES.VISUAL);\n    const canvasNode = self.canvasNode;\n    canvasNode.removeChild(self.confirmLogoutNode);\n    self.enableInputControls();\n  },\n  \n  initWSConnection(evt, cb) {\n    const self = this;\n    if(cb){ \n      cb()\n    } \n    initPersistentSessionClient(self.initAfterWSConncted);\n  },\n\n  showPopopInCanvas(toShowNode) {\n    const self = this;\n    self.disableInputControls();\n    self.transitToState(ALL_MAP_STATES.SHOWING_MODAL_POPUP);\n    safelyAddChild(self.widgetsAboveAllNode, toShowNode);\n    setLocalZOrder(toShowNode, 10);\n  },\n\n});\n"]}