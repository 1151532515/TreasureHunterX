{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\WsSessionMgr.js"],"names":["window","sendSafely","msgStr","clientSession","readyState","WebSocket","OPEN","send","closeWSConnection","cc","log","close","getBoundRoomIdFromPersistentStorage","sys","localStorage","boundRoomId","clearBoundRoomIdInBothVolatileAndPersistentStorage","removeItem","handleHbRequirements","resp","constants","RET_CODE","OK","ret","data","clientSessionPingInterval","setInterval","param","msgId","Date","now","act","clientTimestamp","JSON","stringify","intervalToPing","handleHbPong","_base64ToUint8Array","base64","binary_string","atob","len","length","bytes","Uint8Array","i","charCodeAt","_base64ToArrayBuffer","buffer","initPersistentSessionClient","onopenCb","intAuthToken","selfPlayer","parse","urlToConnect","backendAddress","PROTOCOL","replace","HOST","PORT","WS_PATH_PREFIX","onopen","event","onmessage","handleRoomDownsyncFrame","typedArray","parsedRoomDownsyncFrame","RoomDownsyncFrame","decode","onerror","error","clearInterval","handleClientSessionCloseOrError","onclose","wasClean","code","LOCALLY_NO_SPECIFIED_ROOM","PLAYER_NOT_ADDABLE_TO_ROOM","PLAYER_NOT_READDABLE_TO_ROOM","PLAYER_NOT_FOUND","PLAYER_CHEATING"],"mappings":"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","file":"WsSessionMgr.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["window.sendSafely = function(msgStr) {\n  /**\n  * - \"If the data can't be sent (for example, because it needs to be buffered but the buffer is full), the socket is closed automatically.\"\n  *\n  * from https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send.\n  */\n  if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) return false;\n  window.clientSession.send(msgStr);\n}\n\nwindow.closeWSConnection = function() {\n  if (null == window.clientSession || window.clientSession.readyState != WebSocket.OPEN) return;\n  cc.log(`Closing \"window.clientSession\" from the client-side.`);\n  window.clientSession.close();\n}\n\nwindow.getBoundRoomIdFromPersistentStorage = function() {\n  return cc.sys.localStorage.boundRoomId;\n};\n\nwindow.clearBoundRoomIdInBothVolatileAndPersistentStorage = function() {\n  window.boundRoomId = null;\n  cc.sys.localStorage.removeItem(\"boundRoomId\");\n};\n\nwindow.boundRoomId = getBoundRoomIdFromPersistentStorage();\nwindow.handleHbRequirements = function(resp) {\n  if (constants.RET_CODE.OK != resp.ret) return;\n  if (null == window.boundRoomId) {\n    window.boundRoomId = resp.data.boundRoomId; \n    cc.sys.localStorage.boundRoomId = window.boundRoomId;\n  }\n\n  window.clientSessionPingInterval = setInterval(() => {\n    if (clientSession.readyState != WebSocket.OPEN) return;\n    const param = {\n      msgId: Date.now(),\n      act: \"HeartbeatPing\",\n      data: {\n        clientTimestamp: Date.now()\n      }\n    };\n    window.sendSafely(JSON.stringify(param));\n  }, resp.data.intervalToPing);\n};\n\nwindow.handleHbPong = function(resp) {\n  if (constants.RET_CODE.OK != resp.ret) return;\n// TBD.\n};\n\nfunction _base64ToUint8Array(base64) {\n    var binary_string =  window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array( len );\n    for (var i = 0; i < len; i++)        {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\n\nfunction _base64ToArrayBuffer(base64) {\n    return _base64ToUint8Array(base64).buffer;\n}\n\n\nwindow.initPersistentSessionClient = function(onopenCb) {\n  if (window.clientSession && window.clientSession.readyState == WebSocket.OPEN) {\n    if (null == onopenCb)\n      return;\n    onopenCb();\n    return;\n  }\n\n  const intAuthToken = cc.sys.localStorage.selfPlayer ? JSON.parse(cc.sys.localStorage.selfPlayer).intAuthToken : \"\";\n\n  let urlToConnect = backendAddress.PROTOCOL.replace('http', 'ws') + '://' + backendAddress.HOST + \":\" + backendAddress.PORT + backendAddress.WS_PATH_PREFIX + \"?intAuthToken=\" + intAuthToken;\n\n  window.boundRoomId = getBoundRoomIdFromPersistentStorage();\n  if (null != window.boundRoomId) {\n    urlToConnect = urlToConnect + \"&boundRoomId=\" + window.boundRoomId;\n  }\n  const clientSession = new WebSocket(urlToConnect);\n\n  clientSession.onopen = function(event) {\n    cc.log(\"The WS clientSession is opened.\");\n    window.clientSession = clientSession;\n    if (null == onopenCb)\n      return;\n    onopenCb();\n  };\n\n  clientSession.onmessage = function(event) {\n    const resp = JSON.parse(event.data)\n    switch (resp.act) {\n      case \"HeartbeatRequirements\":\n        window.handleHbRequirements(resp);\n        break;\n      case \"HeartbeatPong\":\n        window.handleHbPong(resp);\n        break;\n      case \"RoomDownsyncFrame\":\n        if (window.handleRoomDownsyncFrame) {\n          const typedArray = _base64ToUint8Array(resp.data);\n          const parsedRoomDownsyncFrame = window.RoomDownsyncFrame.decode(typedArray);\n          window.handleRoomDownsyncFrame(parsedRoomDownsyncFrame);\n        }\n        break; \n      default:\n        cc.log(`${JSON.stringify(resp)}`);\n        break;\n    }\n  };\n\n  clientSession.onerror = function(event) {\n    cc.error(`Error caught on the WS clientSession:`, event);\n    if (window.clientSessionPingInterval) {\n      clearInterval(clientSessionPingInterval);\n    }\n    if (window.handleClientSessionCloseOrError) {\n      window.handleClientSessionCloseOrError();\n    }\n  };\n\n  clientSession.onclose = function(event) {\n    cc.log(`The WS clientSession is closed:`, event);\n    if (!event.wasClean) {\n      // Chrome doesn't allow the use of \"CustomCloseCode\"s (yet) and will callback with a \"WebsocketStdCloseCode 1006\" and \"false == event.wasClean\" here. See https://tools.ietf.org/html/rfc6455#section-7.4 for more information.\n      window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n    }\n    switch (event.code) {\n      case constants.RET_CODE.LOCALLY_NO_SPECIFIED_ROOM:\n      case constants.RET_CODE.PLAYER_NOT_ADDABLE_TO_ROOM:\n      case constants.RET_CODE.PLAYER_NOT_READDABLE_TO_ROOM:\n      case constants.RET_CODE.PLAYER_NOT_FOUND:\n      case constants.RET_CODE.PLAYER_CHEATING:\n        window.clearBoundRoomIdInBothVolatileAndPersistentStorage();\n        break;\n      default:\n        break;\n    }\n    if (window.clientSessionPingInterval) {\n      clearInterval(clientSessionPingInterval);\n    }\n    if (window.handleClientSessionCloseOrError) {\n      window.handleClientSessionCloseOrError();\n    }\n  };\n};\n\n"]}